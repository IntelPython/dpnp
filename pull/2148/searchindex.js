Search.setIndex({"alltitles": {"API Reference": [[537, null]], "Adding and removing elements": [[541, "adding-and-removing-elements"]], "Arithmetic": [[545, "arithmetic"]], "Arithmetic operations": [[542, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[544, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array attributes": [[544, "array-attributes"]], "Array conversion": [[544, "array-conversion"]], "Array creation routines": [[7, null]], "Array manipulation routines": [[541, null]], "Array methods": [[544, "array-methods"]], "Array type testing": [[540, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[551, "available-ufuncs"]], "Averages and variances": [[550, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[541, "basic-operations"]], "Basics": [[545, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[551, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[544, "calculation"]], "Changing array shape": [[541, "changing-array-shape"]], "Changing kind of array": [[541, "changing-kind-of-array"]], "Changing number of dimensions": [[541, "changing-number-of-dimensions"]], "Comparison": [[540, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[551, "comparison-functions"]], "Constructing arrays": [[544, "constructing-arrays"]], "Correlations": [[550, "correlations"]], "Counting": [[548, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[544, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[539, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"], [10, null]], "Distributions": [[546, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[549, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[539, "exceptions"]], "Exponents and logarithms": [[542, "exponents-and-logarithms"]], "Extrema finding": [[542, "extrema-finding"]], "Floating functions": [[551, "floating-functions"]], "Floating point routines": [[542, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Functional programming": [[11, null]], "Generating index arrays": [[538, "generating-index-arrays"]], "Handling complex numbers": [[542, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[550, "histograms"]], "Hyperbolic functions": [[542, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[544, "indexing-arrays"]], "Indexing routines": [[538, null]], "Indexing-like operations": [[538, "indexing-like-operations"]], "Infinities and NaNs": [[540, "infinities-and-nans"]], "Inserting data into arrays": [[538, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[544, "item-selection-and-manipulation"]], "Iterating over arrays": [[538, "iterating-over-arrays"]], "Joining arrays": [[541, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"]], "Linear algebra": [[539, null]], "Logic functions": [[540, null]], "Logic operations": [[540, "logic-operations"]], "Math operations": [[551, "math-operations"]], "Mathematical functions": [[542, null]], "Matrix and vector products": [[539, "matrix-and-vector-products"]], "Matrix eigenvalues": [[539, "matrix-eigenvalues"]], "Memory layout": [[544, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [542, "miscellaneous"]], "Miscellaneous routines": [[543, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[544, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[539, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[550, "order-statistics"]], "Other attributes": [[544, "other-attributes"]], "Other matrix operations": [[539, "other-matrix-operations"]], "Other special functions": [[542, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[546, "permutations"]], "Poly1d": [[545, "poly1d"]], "Polynomial Module": [[545, "polynomial-module"]], "Polynomial Package": [[545, "polynomial-package"]], "Polynomials": [[545, null]], "Polyutils": [[545, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random generator": [[546, "random-generator"]], "Random sampling (dpnp.random)": [[546, null]], "Rational routines": [[542, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[541, "rearranging-elements"]], "Rounding": [[542, "rounding"]], "Routines": [[547, null]], "Searching": [[548, "searching"]], "Shape manipulation": [[544, "shape-manipulation"]], "Simple random data": [[546, "simple-random-data"]], "Solving linear equations": [[539, "solving-linear-equations"]], "Sorting": [[548, "sorting"]], "Sorting, searching, and counting": [[548, null]], "Special Functions": [[549, null]], "Special methods": [[544, "special-methods"]], "Splitting arrays": [[541, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistics": [[550, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[542, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[541, "tiling-arrays"]], "Transpose-like operations": [[541, "transpose-like-operations"]], "Trigonometric functions": [[542, "trigonometric-functions"], [551, "trigonometric-functions"]], "Truth value testing": [[540, "truth-value-testing"]], "Universal Functions (ufunc)": [[551, null]], "Utility": [[543, "utility"]], "dpnp.abs": [[12, null]], "dpnp.absolute": [[13, null]], "dpnp.acos": [[14, null]], "dpnp.acosh": [[15, null]], "dpnp.add": [[16, null]], "dpnp.all": [[17, null]], "dpnp.allclose": [[18, null]], "dpnp.amax": [[19, null]], "dpnp.amin": [[20, null]], "dpnp.angle": [[21, null]], "dpnp.any": [[22, null]], "dpnp.append": [[23, null]], "dpnp.apply_along_axis": [[24, null]], "dpnp.arange": [[25, null]], "dpnp.arccos": [[26, null]], "dpnp.arccosh": [[27, null]], "dpnp.arcsin": [[28, null]], "dpnp.arcsinh": [[29, null]], "dpnp.arctan": [[30, null]], "dpnp.arctan2": [[31, null]], "dpnp.arctanh": [[32, null]], "dpnp.argmax": [[33, null]], "dpnp.argmin": [[34, null]], "dpnp.argsort": [[35, null]], "dpnp.argwhere": [[36, null]], "dpnp.around": [[37, null]], "dpnp.array": [[38, null]], "dpnp.array_equal": [[39, null]], "dpnp.array_equiv": [[40, null]], "dpnp.array_split": [[41, null]], "dpnp.asanyarray": [[42, null]], "dpnp.asarray": [[43, null]], "dpnp.asarray_chkfinite": [[44, null]], "dpnp.ascontiguousarray": [[45, null]], "dpnp.asfarray": [[46, null]], "dpnp.asfortranarray": [[47, null]], "dpnp.asin": [[48, null]], "dpnp.asinh": [[49, null]], "dpnp.asnumpy": [[50, null]], "dpnp.astype": [[51, null]], "dpnp.atan": [[52, null]], "dpnp.atan2": [[53, null]], "dpnp.atanh": [[54, null]], "dpnp.atleast_1d": [[55, null]], "dpnp.atleast_2d": [[56, null]], "dpnp.atleast_3d": [[57, null]], "dpnp.average": [[58, null]], "dpnp.binary_repr": [[59, null]], "dpnp.bincount": [[60, null]], "dpnp.bitwise_and": [[61, null]], "dpnp.bitwise_invert": [[62, null]], "dpnp.bitwise_left_shift": [[63, null]], "dpnp.bitwise_not": [[64, null]], "dpnp.bitwise_or": [[65, null]], "dpnp.bitwise_right_shift": [[66, null]], "dpnp.bitwise_xor": [[67, null]], "dpnp.broadcast_arrays": [[68, null]], "dpnp.broadcast_shapes": [[69, null]], "dpnp.broadcast_to": [[70, null]], "dpnp.byte_bounds": [[71, null]], "dpnp.can_cast": [[72, null]], "dpnp.cbrt": [[73, null]], "dpnp.ceil": [[74, null]], "dpnp.choose": [[75, null]], "dpnp.clip": [[76, null]], "dpnp.column_stack": [[77, null]], "dpnp.concat": [[78, null]], "dpnp.concatenate": [[79, null]], "dpnp.conj": [[80, null]], "dpnp.conjugate": [[81, null]], "dpnp.convolve": [[82, null]], "dpnp.copy": [[83, null]], "dpnp.copysign": [[84, null]], "dpnp.copyto": [[85, null]], "dpnp.corrcoef": [[86, null]], "dpnp.correlate": [[87, null]], "dpnp.cos": [[88, null]], "dpnp.cosh": [[89, null]], "dpnp.count_nonzero": [[90, null]], "dpnp.cov": [[91, null]], "dpnp.cross": [[92, null]], "dpnp.cumlogsumexp": [[93, null]], "dpnp.cumprod": [[94, null]], "dpnp.cumsum": [[95, null]], "dpnp.cumulative_prod": [[96, null]], "dpnp.cumulative_sum": [[97, null]], "dpnp.deg2rad": [[98, null]], "dpnp.degrees": [[99, null]], "dpnp.delete": [[100, null]], "dpnp.diag": [[101, null]], "dpnp.diag_indices": [[102, null]], "dpnp.diag_indices_from": [[103, null]], "dpnp.diagflat": [[104, null]], "dpnp.diagonal": [[105, null]], "dpnp.diff": [[106, null]], "dpnp.digitize": [[107, null]], "dpnp.divide": [[108, null]], "dpnp.dot": [[109, null]], "dpnp.dpnp_array.dpnp_array": [[110, null]], "dpnp.dsplit": [[111, null]], "dpnp.dstack": [[112, null]], "dpnp.dtype": [[113, null]], "dpnp.ediff1d": [[114, null]], "dpnp.einsum": [[115, null]], "dpnp.einsum_path": [[116, null]], "dpnp.empty": [[117, null]], "dpnp.empty_like": [[118, null]], "dpnp.equal": [[119, null]], "dpnp.erf": [[120, null]], "dpnp.exp": [[121, null]], "dpnp.exp2": [[122, null]], "dpnp.expand_dims": [[123, null]], "dpnp.expm1": [[124, null]], "dpnp.extract": [[125, null]], "dpnp.eye": [[126, null]], "dpnp.fabs": [[127, null]], "dpnp.fft.fft": [[128, null]], "dpnp.fft.fft2": [[129, null]], "dpnp.fft.fftfreq": [[130, null]], "dpnp.fft.fftn": [[131, null]], "dpnp.fft.fftshift": [[132, null]], "dpnp.fft.hfft": [[133, null]], "dpnp.fft.ifft": [[134, null]], "dpnp.fft.ifft2": [[135, null]], "dpnp.fft.ifftn": [[136, null]], "dpnp.fft.ifftshift": [[137, null]], "dpnp.fft.ihfft": [[138, null]], "dpnp.fft.irfft": [[139, null]], "dpnp.fft.irfft2": [[140, null]], "dpnp.fft.irfftn": [[141, null]], "dpnp.fft.rfft": [[142, null]], "dpnp.fft.rfft2": [[143, null]], "dpnp.fft.rfftfreq": [[144, null]], "dpnp.fft.rfftn": [[145, null]], "dpnp.fill_diagonal": [[146, null]], "dpnp.finfo": [[147, null]], "dpnp.fix": [[148, null]], "dpnp.flatiter": [[149, null]], "dpnp.flatnonzero": [[150, null]], "dpnp.flip": [[151, null]], "dpnp.fliplr": [[152, null]], "dpnp.flipud": [[153, null]], "dpnp.float_power": [[154, null]], "dpnp.floor": [[155, null]], "dpnp.floor_divide": [[156, null]], "dpnp.fmax": [[157, null]], "dpnp.fmin": [[158, null]], "dpnp.fmod": [[159, null]], "dpnp.from_dlpack": [[160, null]], "dpnp.frombuffer": [[161, null]], "dpnp.fromfile": [[162, null]], "dpnp.fromfunction": [[163, null]], "dpnp.fromiter": [[164, null]], "dpnp.fromstring": [[165, null]], "dpnp.full": [[166, null]], "dpnp.full_like": [[167, null]], "dpnp.gcd": [[168, null]], "dpnp.geomspace": [[169, null]], "dpnp.get_include": [[170, null]], "dpnp.gradient": [[171, null]], "dpnp.greater": [[172, null]], "dpnp.greater_equal": [[173, null]], "dpnp.heaviside": [[174, null]], "dpnp.histogram": [[175, null]], "dpnp.histogram_bin_edges": [[176, null]], "dpnp.hsplit": [[177, null]], "dpnp.hstack": [[178, null]], "dpnp.hypot": [[179, null]], "dpnp.i0": [[180, null]], "dpnp.identity": [[181, null]], "dpnp.iinfo": [[182, null]], "dpnp.imag": [[183, null]], "dpnp.indices": [[184, null]], "dpnp.inner": [[185, null]], "dpnp.insert": [[186, null]], "dpnp.invert": [[187, null]], "dpnp.isclose": [[188, null]], "dpnp.iscomplex": [[189, null]], "dpnp.iscomplexobj": [[190, null]], "dpnp.isfinite": [[191, null]], "dpnp.isfortran": [[192, null]], "dpnp.isinf": [[193, null]], "dpnp.isnan": [[194, null]], "dpnp.isneginf": [[195, null]], "dpnp.isposinf": [[196, null]], "dpnp.isreal": [[197, null]], "dpnp.isrealobj": [[198, null]], "dpnp.isscalar": [[199, null]], "dpnp.issubdtype": [[200, null]], "dpnp.ix_": [[201, null]], "dpnp.kron": [[202, null]], "dpnp.lcm": [[203, null]], "dpnp.ldexp": [[204, null]], "dpnp.left_shift": [[205, null]], "dpnp.less": [[206, null]], "dpnp.less_equal": [[207, null]], "dpnp.linalg.cholesky": [[208, null]], "dpnp.linalg.cond": [[209, null]], "dpnp.linalg.cross": [[210, null]], "dpnp.linalg.det": [[211, null]], "dpnp.linalg.diagonal": [[212, null]], "dpnp.linalg.eig": [[213, null]], "dpnp.linalg.eigh": [[214, null]], "dpnp.linalg.eigvals": [[215, null]], "dpnp.linalg.eigvalsh": [[216, null]], "dpnp.linalg.inv": [[217, null]], "dpnp.linalg.lstsq": [[218, null]], "dpnp.linalg.matmul": [[219, null]], "dpnp.linalg.matrix_norm": [[220, null]], "dpnp.linalg.matrix_power": [[221, null]], "dpnp.linalg.matrix_rank": [[222, null]], "dpnp.linalg.multi_dot": [[223, null]], "dpnp.linalg.norm": [[224, null]], "dpnp.linalg.outer": [[225, null]], "dpnp.linalg.pinv": [[226, null]], "dpnp.linalg.qr": [[227, null]], "dpnp.linalg.slogdet": [[228, null]], "dpnp.linalg.solve": [[229, null]], "dpnp.linalg.svd": [[230, null]], "dpnp.linalg.svdvals": [[231, null]], "dpnp.linalg.tensordot": [[232, null]], "dpnp.linalg.tensorinv": [[233, null]], "dpnp.linalg.tensorsolve": [[234, null]], "dpnp.linalg.trace": [[235, null]], "dpnp.linalg.vecdot": [[236, null]], "dpnp.linalg.vector_norm": [[237, null]], "dpnp.linspace": [[238, null]], "dpnp.loadtxt": [[239, null]], "dpnp.log": [[240, null]], "dpnp.log10": [[241, null]], "dpnp.log1p": [[242, null]], "dpnp.log2": [[243, null]], "dpnp.logaddexp": [[244, null]], "dpnp.logaddexp2": [[245, null]], "dpnp.logical_and": [[246, null]], "dpnp.logical_not": [[247, null]], "dpnp.logical_or": [[248, null]], "dpnp.logical_xor": [[249, null]], "dpnp.logspace": [[250, null]], "dpnp.logsumexp": [[251, null]], "dpnp.mask_indices": [[252, null]], "dpnp.matmul": [[253, null]], "dpnp.matrix_transpose": [[254, null]], "dpnp.max": [[255, null]], "dpnp.maximum": [[256, null]], "dpnp.mean": [[257, null]], "dpnp.median": [[258, null]], "dpnp.meshgrid": [[259, null]], "dpnp.mgrid": [[260, null]], "dpnp.min": [[261, null]], "dpnp.minimum": [[262, null]], "dpnp.mod": [[263, null]], "dpnp.modf": [[264, null]], "dpnp.moveaxis": [[265, null]], "dpnp.multiply": [[266, null]], "dpnp.nan_to_num": [[267, null]], "dpnp.nanargmax": [[268, null]], "dpnp.nanargmin": [[269, null]], "dpnp.nancumprod": [[270, null]], "dpnp.nancumsum": [[271, null]], "dpnp.nanmax": [[272, null]], "dpnp.nanmean": [[273, null]], "dpnp.nanmin": [[274, null]], "dpnp.nanprod": [[275, null]], "dpnp.nanstd": [[276, null]], "dpnp.nansum": [[277, null]], "dpnp.nanvar": [[278, null]], "dpnp.ndarray": [[279, null]], "dpnp.ndarray.T": [[280, null]], "dpnp.ndarray.__abs__": [[281, null]], "dpnp.ndarray.__add__": [[282, null]], "dpnp.ndarray.__and__": [[283, null]], "dpnp.ndarray.__bool__": [[284, null]], "dpnp.ndarray.__complex__": [[285, null]], "dpnp.ndarray.__copy__": [[286, null]], "dpnp.ndarray.__eq__": [[287, null]], "dpnp.ndarray.__float__": [[288, null]], "dpnp.ndarray.__floordiv__": [[289, null]], "dpnp.ndarray.__ge__": [[290, null]], "dpnp.ndarray.__getitem__": [[291, null]], "dpnp.ndarray.__gt__": [[292, null]], "dpnp.ndarray.__iadd__": [[293, null]], "dpnp.ndarray.__iand__": [[294, null]], "dpnp.ndarray.__ifloordiv__": [[295, null]], "dpnp.ndarray.__ilshift__": [[296, null]], "dpnp.ndarray.__imatmul__": [[297, null]], "dpnp.ndarray.__imod__": [[298, null]], "dpnp.ndarray.__imul__": [[299, null]], "dpnp.ndarray.__int__": [[300, null]], "dpnp.ndarray.__invert__": [[301, null]], "dpnp.ndarray.__ior__": [[302, null]], "dpnp.ndarray.__ipow__": [[303, null]], "dpnp.ndarray.__irshift__": [[304, null]], "dpnp.ndarray.__isub__": [[305, null]], "dpnp.ndarray.__itruediv__": [[306, null]], "dpnp.ndarray.__ixor__": [[307, null]], "dpnp.ndarray.__le__": [[308, null]], "dpnp.ndarray.__len__": [[309, null]], "dpnp.ndarray.__lshift__": [[310, null]], "dpnp.ndarray.__lt__": [[311, null]], "dpnp.ndarray.__matmul__": [[312, null]], "dpnp.ndarray.__mod__": [[313, null]], "dpnp.ndarray.__mul__": [[314, null]], "dpnp.ndarray.__ne__": [[315, null]], "dpnp.ndarray.__neg__": [[316, null]], "dpnp.ndarray.__new__": [[317, null]], "dpnp.ndarray.__or__": [[318, null]], "dpnp.ndarray.__pos__": [[319, null]], "dpnp.ndarray.__pow__": [[320, null]], "dpnp.ndarray.__radd__": [[321, null]], "dpnp.ndarray.__rand__": [[322, null]], "dpnp.ndarray.__repr__": [[323, null]], "dpnp.ndarray.__rfloordiv__": [[324, null]], "dpnp.ndarray.__rlshift__": [[325, null]], "dpnp.ndarray.__rmatmul__": [[326, null]], "dpnp.ndarray.__rmod__": [[327, null]], "dpnp.ndarray.__rmul__": [[328, null]], "dpnp.ndarray.__ror__": [[329, null]], "dpnp.ndarray.__rpow__": [[330, null]], "dpnp.ndarray.__rrshift__": [[331, null]], "dpnp.ndarray.__rshift__": [[332, null]], "dpnp.ndarray.__rsub__": [[333, null]], "dpnp.ndarray.__rtruediv__": [[334, null]], "dpnp.ndarray.__rxor__": [[335, null]], "dpnp.ndarray.__setitem__": [[336, null]], "dpnp.ndarray.__str__": [[337, null]], "dpnp.ndarray.__sub__": [[338, null]], "dpnp.ndarray.__truediv__": [[339, null]], "dpnp.ndarray.__xor__": [[340, null]], "dpnp.ndarray.all": [[341, null]], "dpnp.ndarray.any": [[342, null]], "dpnp.ndarray.argmax": [[343, null]], "dpnp.ndarray.argmin": [[344, null]], "dpnp.ndarray.argsort": [[345, null]], "dpnp.ndarray.astype": [[346, null]], "dpnp.ndarray.choose": [[347, null]], "dpnp.ndarray.clip": [[348, null]], "dpnp.ndarray.conj": [[349, null]], "dpnp.ndarray.conjugate": [[350, null]], "dpnp.ndarray.copy": [[351, null]], "dpnp.ndarray.cumprod": [[352, null]], "dpnp.ndarray.cumsum": [[353, null]], "dpnp.ndarray.diagonal": [[354, null]], "dpnp.ndarray.dtype": [[355, null]], "dpnp.ndarray.fill": [[356, null]], "dpnp.ndarray.flags": [[357, null]], "dpnp.ndarray.flat": [[358, null]], "dpnp.ndarray.flatten": [[359, null]], "dpnp.ndarray.imag": [[360, null]], "dpnp.ndarray.item": [[361, null]], "dpnp.ndarray.itemsize": [[362, null]], "dpnp.ndarray.mT": [[363, null]], "dpnp.ndarray.max": [[364, null]], "dpnp.ndarray.mean": [[365, null]], "dpnp.ndarray.min": [[366, null]], "dpnp.ndarray.nbytes": [[367, null]], "dpnp.ndarray.ndim": [[368, null]], "dpnp.ndarray.nonzero": [[369, null]], "dpnp.ndarray.partition": [[370, null]], "dpnp.ndarray.prod": [[371, null]], "dpnp.ndarray.put": [[372, null]], "dpnp.ndarray.ravel": [[373, null]], "dpnp.ndarray.real": [[374, null]], "dpnp.ndarray.repeat": [[375, null]], "dpnp.ndarray.reshape": [[376, null]], "dpnp.ndarray.round": [[377, null]], "dpnp.ndarray.searchsorted": [[378, null]], "dpnp.ndarray.shape": [[379, null]], "dpnp.ndarray.size": [[380, null]], "dpnp.ndarray.sort": [[381, null]], "dpnp.ndarray.squeeze": [[382, null]], "dpnp.ndarray.std": [[383, null]], "dpnp.ndarray.strides": [[384, null]], "dpnp.ndarray.sum": [[385, null]], "dpnp.ndarray.swapaxes": [[386, null]], "dpnp.ndarray.take": [[387, null]], "dpnp.ndarray.trace": [[388, null]], "dpnp.ndarray.transpose": [[389, null]], "dpnp.ndarray.var": [[390, null]], "dpnp.ndim": [[391, null]], "dpnp.negative": [[392, null]], "dpnp.nextafter": [[393, null]], "dpnp.nonzero": [[394, null]], "dpnp.not_equal": [[395, null]], "dpnp.ogrid": [[396, null]], "dpnp.ones": [[397, null]], "dpnp.ones_like": [[398, null]], "dpnp.outer": [[399, null]], "dpnp.pad": [[400, null]], "dpnp.partition": [[401, null]], "dpnp.permute_dims": [[402, null]], "dpnp.place": [[403, null]], "dpnp.positive": [[404, null]], "dpnp.pow": [[405, null]], "dpnp.power": [[406, null]], "dpnp.prod": [[407, null]], "dpnp.proj": [[408, null]], "dpnp.ptp": [[409, null]], "dpnp.put": [[410, null]], "dpnp.put_along_axis": [[411, null]], "dpnp.putmask": [[412, null]], "dpnp.rad2deg": [[413, null]], "dpnp.radians": [[414, null]], "dpnp.random.RandomState": [[415, null]], "dpnp.random.beta": [[416, null]], "dpnp.random.binomial": [[417, null]], "dpnp.random.bytes": [[418, null]], "dpnp.random.chisquare": [[419, null]], "dpnp.random.choice": [[420, null]], "dpnp.random.dirichlet": [[421, null]], "dpnp.random.exponential": [[422, null]], "dpnp.random.f": [[423, null]], "dpnp.random.gamma": [[424, null]], "dpnp.random.geometric": [[425, null]], "dpnp.random.gumbel": [[426, null]], "dpnp.random.hypergeometric": [[427, null]], "dpnp.random.laplace": [[428, null]], "dpnp.random.logistic": [[429, null]], "dpnp.random.lognormal": [[430, null]], "dpnp.random.logseries": [[431, null]], "dpnp.random.multinomial": [[432, null]], "dpnp.random.multivariate_normal": [[433, null]], "dpnp.random.negative_binomial": [[434, null]], "dpnp.random.noncentral_chisquare": [[435, null]], "dpnp.random.noncentral_f": [[436, null]], "dpnp.random.normal": [[437, null]], "dpnp.random.pareto": [[438, null]], "dpnp.random.permutation": [[439, null]], "dpnp.random.poisson": [[440, null]], "dpnp.random.power": [[441, null]], "dpnp.random.rand": [[442, null]], "dpnp.random.randint": [[443, null]], "dpnp.random.randn": [[444, null]], "dpnp.random.random": [[445, null]], "dpnp.random.random_integers": [[446, null]], "dpnp.random.random_sample": [[447, null]], "dpnp.random.ranf": [[448, null]], "dpnp.random.rayleigh": [[449, null]], "dpnp.random.sample": [[450, null]], "dpnp.random.seed": [[451, null]], "dpnp.random.shuffle": [[452, null]], "dpnp.random.standard_cauchy": [[453, null]], "dpnp.random.standard_exponential": [[454, null]], "dpnp.random.standard_gamma": [[455, null]], "dpnp.random.standard_normal": [[456, null]], "dpnp.random.standard_t": [[457, null]], "dpnp.random.triangular": [[458, null]], "dpnp.random.uniform": [[459, null]], "dpnp.random.vonmises": [[460, null]], "dpnp.random.wald": [[461, null]], "dpnp.random.weibull": [[462, null]], "dpnp.random.zipf": [[463, null]], "dpnp.ravel": [[464, null]], "dpnp.ravel_multi_index": [[465, null]], "dpnp.real": [[466, null]], "dpnp.real_if_close": [[467, null]], "dpnp.reciprocal": [[468, null]], "dpnp.reduce_hypot": [[469, null]], "dpnp.remainder": [[470, null]], "dpnp.repeat": [[471, null]], "dpnp.require": [[472, null]], "dpnp.reshape": [[473, null]], "dpnp.resize": [[474, null]], "dpnp.result_type": [[475, null]], "dpnp.right_shift": [[476, null]], "dpnp.rint": [[477, null]], "dpnp.roll": [[478, null]], "dpnp.rollaxis": [[479, null]], "dpnp.rot90": [[480, null]], "dpnp.round": [[481, null]], "dpnp.row_stack": [[482, null]], "dpnp.rsqrt": [[483, null]], "dpnp.searchsorted": [[484, null]], "dpnp.select": [[485, null]], "dpnp.shape": [[486, null]], "dpnp.sign": [[487, null]], "dpnp.signbit": [[488, null]], "dpnp.sin": [[489, null]], "dpnp.sinc": [[490, null]], "dpnp.sinh": [[491, null]], "dpnp.size": [[492, null]], "dpnp.sort": [[493, null]], "dpnp.sort_complex": [[494, null]], "dpnp.spacing": [[495, null]], "dpnp.split": [[496, null]], "dpnp.sqrt": [[497, null]], "dpnp.square": [[498, null]], "dpnp.squeeze": [[499, null]], "dpnp.stack": [[500, null]], "dpnp.std": [[501, null]], "dpnp.subtract": [[502, null]], "dpnp.sum": [[503, null]], "dpnp.swapaxes": [[504, null]], "dpnp.take": [[505, null]], "dpnp.take_along_axis": [[506, null]], "dpnp.tan": [[507, null]], "dpnp.tanh": [[508, null]], "dpnp.tensordot": [[509, null]], "dpnp.tile": [[510, null]], "dpnp.trace": [[511, null]], "dpnp.transpose": [[512, null]], "dpnp.trapezoid": [[513, null]], "dpnp.tri": [[514, null]], "dpnp.tril": [[515, null]], "dpnp.tril_indices": [[516, null]], "dpnp.tril_indices_from": [[517, null]], "dpnp.trim_zeros": [[518, null]], "dpnp.triu": [[519, null]], "dpnp.triu_indices": [[520, null]], "dpnp.triu_indices_from": [[521, null]], "dpnp.true_divide": [[522, null]], "dpnp.trunc": [[523, null]], "dpnp.unique": [[524, null]], "dpnp.unravel_index": [[525, null]], "dpnp.unstack": [[526, null]], "dpnp.unwrap": [[527, null]], "dpnp.vander": [[528, null]], "dpnp.var": [[529, null]], "dpnp.vdot": [[530, null]], "dpnp.vecdot": [[531, null]], "dpnp.vsplit": [[532, null]], "dpnp.vstack": [[533, null]], "dpnp.where": [[534, null]], "dpnp.zeros": [[535, null]], "dpnp.zeros_like": [[536, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/functional", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.apply_along_axis", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.binary_repr", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.byte_bounds", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.corrcoef", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.cumulative_prod", "reference/generated/dpnp.cumulative_sum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.i0", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.insert", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/functional.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.apply_along_axis.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.binary_repr.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.byte_bounds.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.corrcoef.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.cumulative_prod.rst", "reference/generated/dpnp.cumulative_sum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.i0.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.insert.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[113, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[149, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[113, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[149, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[113, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[149, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[113, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[149, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[299, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[300, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[301, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[302, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[303, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[304, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[305, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[149, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[306, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[307, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[113, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[149, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[308, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[113, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[309, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[310, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[113, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[149, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[311, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[312, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[313, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[314, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[113, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[149, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[315, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[316, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[317, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[149, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[318, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[319, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[320, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[321, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[322, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[323, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[324, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[325, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[326, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[327, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[328, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[329, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[330, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[331, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[332, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[333, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[334, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[335, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[149, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[336, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[337, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[338, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[339, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[340, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[12, "dpnp.abs", false]], "absolute() (in module dpnp)": [[13, "dpnp.absolute", false]], "acos() (in module dpnp)": [[14, "dpnp.acos", false]], "acosh() (in module dpnp)": [[15, "dpnp.acosh", false]], "add() (in module dpnp)": [[16, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[113, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[341, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[17, "dpnp.all", false]], "allclose() (in module dpnp)": [[18, "dpnp.allclose", false]], "amax() (in module dpnp)": [[19, "dpnp.amax", false]], "amin() (in module dpnp)": [[20, "dpnp.amin", false]], "angle() (in module dpnp)": [[21, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[342, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[22, "dpnp.any", false]], "append() (in module dpnp)": [[23, "dpnp.append", false]], "apply_along_axis() (in module dpnp)": [[24, "dpnp.apply_along_axis", false]], "arange() (in module dpnp)": [[25, "dpnp.arange", false]], "arccos() (in module dpnp)": [[26, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[27, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[28, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[29, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[30, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[31, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[32, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[343, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[33, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[344, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[34, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[345, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[35, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[36, "dpnp.argwhere", false]], "around() (in module dpnp)": [[37, "dpnp.around", false]], "array() (in module dpnp)": [[38, "dpnp.array", false]], "array_equal() (in module dpnp)": [[39, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[40, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[41, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[42, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[43, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[44, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[45, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[46, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[47, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[48, "dpnp.asin", false]], "asinh() (in module dpnp)": [[49, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[50, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[346, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[51, "dpnp.astype", false]], "atan() (in module dpnp)": [[52, "dpnp.atan", false]], "atan2() (in module dpnp)": [[53, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[54, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[55, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[56, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[57, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[58, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[113, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[416, "dpnp.random.beta", false]], "binary_repr() (in module dpnp)": [[59, "dpnp.binary_repr", false]], "bincount() (in module dpnp)": [[60, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[417, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[61, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[62, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[63, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[64, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[65, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[66, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[67, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[68, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[69, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[70, "dpnp.broadcast_to", false]], "byte_bounds() (in module dpnp)": [[71, "dpnp.byte_bounds", false]], "byteorder (dpnp.dtype attribute)": [[113, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[418, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[72, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[73, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[74, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[113, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[419, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[420, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[208, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[347, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[75, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[348, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[76, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[77, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[78, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[79, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[209, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[349, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[80, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[350, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[81, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[82, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[351, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[83, "dpnp.copy", false]], "copysign() (in module dpnp)": [[84, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[85, "dpnp.copyto", false]], "corrcoef() (in module dpnp)": [[86, "dpnp.corrcoef", false]], "correlate() (in module dpnp)": [[87, "dpnp.correlate", false]], "cos() (in module dpnp)": [[88, "dpnp.cos", false]], "cosh() (in module dpnp)": [[89, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[90, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[91, "dpnp.cov", false]], "cross() (in module dpnp)": [[92, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[210, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[93, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[352, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[94, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[353, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[95, "dpnp.cumsum", false]], "cumulative_prod() (in module dpnp)": [[96, "dpnp.cumulative_prod", false]], "cumulative_sum() (in module dpnp)": [[97, "dpnp.cumulative_sum", false]], "deg2rad() (in module dpnp)": [[98, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[99, "dpnp.degrees", false]], "delete() (in module dpnp)": [[100, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[113, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[211, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[101, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[102, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[103, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[104, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[354, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[105, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[212, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[106, "dpnp.diff", false]], "digitize() (in module dpnp)": [[107, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[421, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[108, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[109, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[110, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[111, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[112, "dpnp.dstack", false]], "dtype (class in dpnp)": [[113, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[355, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[114, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[213, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[214, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[215, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[216, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[115, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[116, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[117, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[118, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[119, "dpnp.equal", false]], "erf() (in module dpnp)": [[120, "dpnp.erf", false]], "exp() (in module dpnp)": [[121, "dpnp.exp", false]], "exp2() (in module dpnp)": [[122, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[123, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[124, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[422, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[125, "dpnp.extract", false]], "eye() (in module dpnp)": [[126, "dpnp.eye", false]], "f() (in module dpnp.random)": [[423, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[127, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[128, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[129, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[130, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[131, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[132, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[113, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[356, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[146, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[147, "dpnp.finfo", false]], "fix() (in module dpnp)": [[148, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[113, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[357, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[358, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[149, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[150, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[359, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[151, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[152, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[153, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[154, "dpnp.float_power", false]], "floor() (in module dpnp)": [[155, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[156, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[157, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[158, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[159, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[160, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[161, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[162, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[163, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[164, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[165, "dpnp.fromstring", false]], "full() (in module dpnp)": [[166, "dpnp.full", false]], "full_like() (in module dpnp)": [[167, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[424, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[168, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[425, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[169, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[170, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[171, "dpnp.gradient", false]], "greater() (in module dpnp)": [[172, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[173, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[426, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[113, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[174, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[133, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[175, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[176, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[177, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[178, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[427, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[179, "dpnp.hypot", false]], "i0() (in module dpnp)": [[180, "dpnp.i0", false]], "identity() (in module dpnp)": [[181, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[134, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[135, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[136, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[137, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[138, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[182, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[360, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[183, "dpnp.imag", false]], "indices() (in module dpnp)": [[184, "dpnp.indices", false]], "inner() (in module dpnp)": [[185, "dpnp.inner", false]], "insert() (in module dpnp)": [[186, "dpnp.insert", false]], "inv() (in module dpnp.linalg)": [[217, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[187, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[139, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[140, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[141, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[113, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[113, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[188, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[189, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[190, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[191, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[192, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[193, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[194, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[113, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[195, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[196, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[197, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[198, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[199, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[200, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[361, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[113, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[362, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[201, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[113, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[202, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[428, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[203, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[204, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[205, "dpnp.left_shift", false]], "less() (in module dpnp)": [[206, "dpnp.less", false]], "less_equal() (in module dpnp)": [[207, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[238, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[239, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[240, "dpnp.log", false]], "log10() (in module dpnp)": [[241, "dpnp.log10", false]], "log1p() (in module dpnp)": [[242, "dpnp.log1p", false]], "log2() (in module dpnp)": [[243, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[244, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[245, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[246, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[247, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[248, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[249, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[429, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[430, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[431, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[250, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[251, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[218, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[252, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[253, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[219, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[220, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[221, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[222, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[254, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[364, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[255, "dpnp.max", false]], "maximum() (in module dpnp)": [[256, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[365, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[257, "dpnp.mean", false]], "median() (in module dpnp)": [[258, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[259, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[113, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[260, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[366, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[261, "dpnp.min", false]], "minimum() (in module dpnp)": [[262, "dpnp.minimum", false]], "mod() (in module dpnp)": [[263, "dpnp.mod", false]], "modf() (in module dpnp)": [[264, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[265, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[363, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[223, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[432, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[266, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[433, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[113, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[113, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[267, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[268, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[269, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[270, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[271, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[272, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[273, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[274, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[275, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[276, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[277, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[278, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[367, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[279, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[113, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[368, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[391, "dpnp.ndim", false]], "negative() (in module dpnp)": [[392, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[434, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[113, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[393, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[435, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[436, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[369, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[394, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[224, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[437, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[395, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[113, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[396, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[397, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[398, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[399, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[225, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[400, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[438, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[370, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[401, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[439, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[402, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[226, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[403, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[440, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[404, "dpnp.positive", false]], "pow() (in module dpnp)": [[405, "dpnp.pow", false]], "power() (in module dpnp)": [[406, "dpnp.power", false]], "power() (in module dpnp.random)": [[441, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[371, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[407, "dpnp.prod", false]], "proj() (in module dpnp)": [[408, "dpnp.proj", false]], "ptp() (in module dpnp)": [[409, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[372, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[410, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[411, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[412, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[227, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[413, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[414, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[442, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[443, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[444, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[445, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[446, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[447, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[415, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[448, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[373, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[464, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[465, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[449, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[374, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[466, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[467, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[468, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[469, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[470, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[375, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[471, "dpnp.repeat", false]], "require() (in module dpnp)": [[472, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[376, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[473, "dpnp.reshape", false]], "resize() (in module dpnp)": [[474, "dpnp.resize", false]], "result_type() (in module dpnp)": [[475, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[142, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[143, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[144, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[145, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[476, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[477, "dpnp.rint", false]], "roll() (in module dpnp)": [[478, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[479, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[480, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[377, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[481, "dpnp.round", false]], "row_stack() (in module dpnp)": [[482, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[483, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[450, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[378, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[484, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[451, "dpnp.random.seed", false]], "select() (in module dpnp)": [[485, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[113, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[379, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[486, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[452, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[487, "dpnp.sign", false]], "signbit() (in module dpnp)": [[488, "dpnp.signbit", false]], "sin() (in module dpnp)": [[489, "dpnp.sin", false]], "sinc() (in module dpnp)": [[490, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[491, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[380, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[492, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[228, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[229, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[381, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[493, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[494, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[495, "dpnp.spacing", false]], "split() (in module dpnp)": [[496, "dpnp.split", false]], "sqrt() (in module dpnp)": [[497, "dpnp.sqrt", false]], "square() (in module dpnp)": [[498, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[382, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[499, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[500, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[453, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[454, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[455, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[456, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[457, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[383, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[501, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[113, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[384, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[113, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[502, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[385, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[503, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[230, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[231, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[386, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[504, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[280, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[387, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[505, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[506, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[507, "dpnp.tan", false]], "tanh() (in module dpnp)": [[508, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[509, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[232, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[233, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[234, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[510, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[388, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[511, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[235, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[389, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[512, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[513, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[514, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[458, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[515, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[516, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[517, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[518, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[519, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[520, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[521, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[522, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[523, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[113, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[415, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[459, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[524, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[525, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[526, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[527, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[110, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[528, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[110, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[390, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[529, "dpnp.var", false]], "vdot() (in module dpnp)": [[530, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[531, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[236, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[237, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[460, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[532, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[533, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[461, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[462, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[534, "dpnp.where", false]], "zeros() (in module dpnp)": [[535, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[536, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[463, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[12, 1, 1, "", "abs"], [13, 1, 1, "", "absolute"], [14, 1, 1, "", "acos"], [15, 1, 1, "", "acosh"], [16, 1, 1, "", "add"], [17, 1, 1, "", "all"], [18, 1, 1, "", "allclose"], [19, 1, 1, "", "amax"], [20, 1, 1, "", "amin"], [21, 1, 1, "", "angle"], [22, 1, 1, "", "any"], [23, 1, 1, "", "append"], [24, 1, 1, "", "apply_along_axis"], [25, 1, 1, "", "arange"], [26, 1, 1, "", "arccos"], [27, 1, 1, "", "arccosh"], [28, 1, 1, "", "arcsin"], [29, 1, 1, "", "arcsinh"], [30, 1, 1, "", "arctan"], [31, 1, 1, "", "arctan2"], [32, 1, 1, "", "arctanh"], [33, 1, 1, "", "argmax"], [34, 1, 1, "", "argmin"], [35, 1, 1, "", "argsort"], [36, 1, 1, "", "argwhere"], [37, 1, 1, "", "around"], [38, 1, 1, "", "array"], [39, 1, 1, "", "array_equal"], [40, 1, 1, "", "array_equiv"], [41, 1, 1, "", "array_split"], [42, 1, 1, "", "asanyarray"], [43, 1, 1, "", "asarray"], [44, 1, 1, "", "asarray_chkfinite"], [45, 1, 1, "", "ascontiguousarray"], [46, 1, 1, "", "asfarray"], [47, 1, 1, "", "asfortranarray"], [48, 1, 1, "", "asin"], [49, 1, 1, "", "asinh"], [50, 1, 1, "", "asnumpy"], [51, 1, 1, "", "astype"], [52, 1, 1, "", "atan"], [53, 1, 1, "", "atan2"], [54, 1, 1, "", "atanh"], [55, 1, 1, "", "atleast_1d"], [56, 1, 1, "", "atleast_2d"], [57, 1, 1, "", "atleast_3d"], [58, 1, 1, "", "average"], [59, 1, 1, "", "binary_repr"], [60, 1, 1, "", "bincount"], [61, 1, 1, "", "bitwise_and"], [62, 1, 1, "", "bitwise_invert"], [63, 1, 1, "", "bitwise_left_shift"], [64, 1, 1, "", "bitwise_not"], [65, 1, 1, "", "bitwise_or"], [66, 1, 1, "", "bitwise_right_shift"], [67, 1, 1, "", "bitwise_xor"], [68, 1, 1, "", "broadcast_arrays"], [69, 1, 1, "", "broadcast_shapes"], [70, 1, 1, "", "broadcast_to"], [71, 1, 1, "", "byte_bounds"], [72, 1, 1, "", "can_cast"], [73, 1, 1, "", "cbrt"], [74, 1, 1, "", "ceil"], [75, 1, 1, "", "choose"], [76, 1, 1, "", "clip"], [77, 1, 1, "", "column_stack"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "concatenate"], [80, 1, 1, "", "conj"], [81, 1, 1, "", "conjugate"], [82, 1, 1, "", "convolve"], [83, 1, 1, "", "copy"], [84, 1, 1, "", "copysign"], [85, 1, 1, "", "copyto"], [86, 1, 1, "", "corrcoef"], [87, 1, 1, "", "correlate"], [88, 1, 1, "", "cos"], [89, 1, 1, "", "cosh"], [90, 1, 1, "", "count_nonzero"], [91, 1, 1, "", "cov"], [92, 1, 1, "", "cross"], [93, 1, 1, "", "cumlogsumexp"], [94, 1, 1, "", "cumprod"], [95, 1, 1, "", "cumsum"], [96, 1, 1, "", "cumulative_prod"], [97, 1, 1, "", "cumulative_sum"], [98, 1, 1, "", "deg2rad"], [99, 1, 1, "", "degrees"], [100, 1, 1, "", "delete"], [101, 1, 1, "", "diag"], [102, 1, 1, "", "diag_indices"], [103, 1, 1, "", "diag_indices_from"], [104, 1, 1, "", "diagflat"], [105, 1, 1, "", "diagonal"], [106, 1, 1, "", "diff"], [107, 1, 1, "", "digitize"], [108, 1, 1, "", "divide"], [109, 1, 1, "", "dot"], [111, 1, 1, "", "dsplit"], [112, 1, 1, "", "dstack"], [113, 2, 1, "", "dtype"], [114, 1, 1, "", "ediff1d"], [115, 1, 1, "", "einsum"], [116, 1, 1, "", "einsum_path"], [117, 1, 1, "", "empty"], [118, 1, 1, "", "empty_like"], [119, 1, 1, "", "equal"], [120, 1, 1, "", "erf"], [121, 1, 1, "", "exp"], [122, 1, 1, "", "exp2"], [123, 1, 1, "", "expand_dims"], [124, 1, 1, "", "expm1"], [125, 1, 1, "", "extract"], [126, 1, 1, "", "eye"], [127, 1, 1, "", "fabs"], [146, 1, 1, "", "fill_diagonal"], [147, 1, 1, "", "finfo"], [148, 1, 1, "", "fix"], [149, 2, 1, "", "flatiter"], [150, 1, 1, "", "flatnonzero"], [151, 1, 1, "", "flip"], [152, 1, 1, "", "fliplr"], [153, 1, 1, "", "flipud"], [154, 1, 1, "", "float_power"], [155, 1, 1, "", "floor"], [156, 1, 1, "", "floor_divide"], [157, 1, 1, "", "fmax"], [158, 1, 1, "", "fmin"], [159, 1, 1, "", "fmod"], [160, 1, 1, "", "from_dlpack"], [161, 1, 1, "", "frombuffer"], [162, 1, 1, "", "fromfile"], [163, 1, 1, "", "fromfunction"], [164, 1, 1, "", "fromiter"], [165, 1, 1, "", "fromstring"], [166, 1, 1, "", "full"], [167, 1, 1, "", "full_like"], [168, 1, 1, "", "gcd"], [169, 1, 1, "", "geomspace"], [170, 1, 1, "", "get_include"], [171, 1, 1, "", "gradient"], [172, 1, 1, "", "greater"], [173, 1, 1, "", "greater_equal"], [174, 1, 1, "", "heaviside"], [175, 1, 1, "", "histogram"], [176, 1, 1, "", "histogram_bin_edges"], [177, 1, 1, "", "hsplit"], [178, 1, 1, "", "hstack"], [179, 1, 1, "", "hypot"], [180, 1, 1, "", "i0"], [181, 1, 1, "", "identity"], [182, 1, 1, "", "iinfo"], [183, 1, 1, "", "imag"], [184, 1, 1, "", "indices"], [185, 1, 1, "", "inner"], [186, 1, 1, "", "insert"], [187, 1, 1, "", "invert"], [188, 1, 1, "", "isclose"], [189, 1, 1, "", "iscomplex"], [190, 1, 1, "", "iscomplexobj"], [191, 1, 1, "", "isfinite"], [192, 1, 1, "", "isfortran"], [193, 1, 1, "", "isinf"], [194, 1, 1, "", "isnan"], [195, 1, 1, "", "isneginf"], [196, 1, 1, "", "isposinf"], [197, 1, 1, "", "isreal"], [198, 1, 1, "", "isrealobj"], [199, 1, 1, "", "isscalar"], [200, 1, 1, "", "issubdtype"], [201, 1, 1, "", "ix_"], [202, 1, 1, "", "kron"], [203, 1, 1, "", "lcm"], [204, 1, 1, "", "ldexp"], [205, 1, 1, "", "left_shift"], [206, 1, 1, "", "less"], [207, 1, 1, "", "less_equal"], [238, 1, 1, "", "linspace"], [239, 1, 1, "", "loadtxt"], [240, 1, 1, "", "log"], [241, 1, 1, "", "log10"], [242, 1, 1, "", "log1p"], [243, 1, 1, "", "log2"], [244, 1, 1, "", "logaddexp"], [245, 1, 1, "", "logaddexp2"], [246, 1, 1, "", "logical_and"], [247, 1, 1, "", "logical_not"], [248, 1, 1, "", "logical_or"], [249, 1, 1, "", "logical_xor"], [250, 1, 1, "", "logspace"], [251, 1, 1, "", "logsumexp"], [252, 1, 1, "", "mask_indices"], [253, 1, 1, "", "matmul"], [254, 1, 1, "", "matrix_transpose"], [255, 1, 1, "", "max"], [256, 1, 1, "", "maximum"], [257, 1, 1, "", "mean"], [258, 1, 1, "", "median"], [259, 1, 1, "", "meshgrid"], [260, 5, 1, "", "mgrid"], [261, 1, 1, "", "min"], [262, 1, 1, "", "minimum"], [263, 1, 1, "", "mod"], [264, 1, 1, "", "modf"], [265, 1, 1, "", "moveaxis"], [266, 1, 1, "", "multiply"], [267, 1, 1, "", "nan_to_num"], [268, 1, 1, "", "nanargmax"], [269, 1, 1, "", "nanargmin"], [270, 1, 1, "", "nancumprod"], [271, 1, 1, "", "nancumsum"], [272, 1, 1, "", "nanmax"], [273, 1, 1, "", "nanmean"], [274, 1, 1, "", "nanmin"], [275, 1, 1, "", "nanprod"], [276, 1, 1, "", "nanstd"], [277, 1, 1, "", "nansum"], [278, 1, 1, "", "nanvar"], [279, 3, 1, "", "ndarray"], [391, 1, 1, "", "ndim"], [392, 1, 1, "", "negative"], [393, 1, 1, "", "nextafter"], [394, 1, 1, "", "nonzero"], [395, 1, 1, "", "not_equal"], [396, 5, 1, "", "ogrid"], [397, 1, 1, "", "ones"], [398, 1, 1, "", "ones_like"], [399, 1, 1, "", "outer"], [400, 1, 1, "", "pad"], [401, 1, 1, "", "partition"], [402, 1, 1, "", "permute_dims"], [403, 1, 1, "", "place"], [404, 1, 1, "", "positive"], [405, 1, 1, "", "pow"], [406, 1, 1, "", "power"], [407, 1, 1, "", "prod"], [408, 1, 1, "", "proj"], [409, 1, 1, "", "ptp"], [410, 1, 1, "", "put"], [411, 1, 1, "", "put_along_axis"], [412, 1, 1, "", "putmask"], [413, 1, 1, "", "rad2deg"], [414, 1, 1, "", "radians"], [464, 1, 1, "", "ravel"], [465, 1, 1, "", "ravel_multi_index"], [466, 1, 1, "", "real"], [467, 1, 1, "", "real_if_close"], [468, 1, 1, "", "reciprocal"], [469, 1, 1, "", "reduce_hypot"], [470, 1, 1, "", "remainder"], [471, 1, 1, "", "repeat"], [472, 1, 1, "", "require"], [473, 1, 1, "", "reshape"], [474, 1, 1, "", "resize"], [475, 1, 1, "", "result_type"], [476, 1, 1, "", "right_shift"], [477, 1, 1, "", "rint"], [478, 1, 1, "", "roll"], [479, 1, 1, "", "rollaxis"], [480, 1, 1, "", "rot90"], [481, 1, 1, "", "round"], [482, 1, 1, "", "row_stack"], [483, 1, 1, "", "rsqrt"], [484, 1, 1, "", "searchsorted"], [485, 1, 1, "", "select"], [486, 1, 1, "", "shape"], [487, 1, 1, "", "sign"], [488, 1, 1, "", "signbit"], [489, 1, 1, "", "sin"], [490, 1, 1, "", "sinc"], [491, 1, 1, "", "sinh"], [492, 1, 1, "", "size"], [493, 1, 1, "", "sort"], [494, 1, 1, "", "sort_complex"], [495, 1, 1, "", "spacing"], [496, 1, 1, "", "split"], [497, 1, 1, "", "sqrt"], [498, 1, 1, "", "square"], [499, 1, 1, "", "squeeze"], [500, 1, 1, "", "stack"], [501, 1, 1, "", "std"], [502, 1, 1, "", "subtract"], [503, 1, 1, "", "sum"], [504, 1, 1, "", "swapaxes"], [505, 1, 1, "", "take"], [506, 1, 1, "", "take_along_axis"], [507, 1, 1, "", "tan"], [508, 1, 1, "", "tanh"], [509, 1, 1, "", "tensordot"], [510, 1, 1, "", "tile"], [511, 1, 1, "", "trace"], [512, 1, 1, "", "transpose"], [513, 1, 1, "", "trapezoid"], [514, 1, 1, "", "tri"], [515, 1, 1, "", "tril"], [516, 1, 1, "", "tril_indices"], [517, 1, 1, "", "tril_indices_from"], [518, 1, 1, "", "trim_zeros"], [519, 1, 1, "", "triu"], [520, 1, 1, "", "triu_indices"], [521, 1, 1, "", "triu_indices_from"], [522, 1, 1, "", "true_divide"], [523, 1, 1, "", "trunc"], [524, 1, 1, "", "unique"], [525, 1, 1, "", "unravel_index"], [526, 1, 1, "", "unstack"], [527, 1, 1, "", "unwrap"], [528, 1, 1, "", "vander"], [529, 1, 1, "", "var"], [530, 1, 1, "", "vdot"], [531, 1, 1, "", "vecdot"], [532, 1, 1, "", "vsplit"], [533, 1, 1, "", "vstack"], [534, 1, 1, "", "where"], [535, 1, 1, "", "zeros"], [536, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[110, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[110, 3, 1, "", "T"], [110, 4, 1, "", "__eq__"], [110, 4, 1, "", "__ge__"], [110, 4, 1, "", "__getitem__"], [110, 4, 1, "", "__gt__"], [110, 4, 1, "", "__le__"], [110, 4, 1, "", "__len__"], [110, 4, 1, "", "__lt__"], [110, 4, 1, "", "__ne__"], [110, 4, 1, "", "__setitem__"], [110, 4, 1, "", "all"], [110, 4, 1, "", "any"], [110, 4, 1, "", "argmax"], [110, 4, 1, "", "argmin"], [110, 4, 1, "", "argsort"], [110, 4, 1, "", "asnumpy"], [110, 4, 1, "", "astype"], [110, 4, 1, "", "choose"], [110, 4, 1, "", "clip"], [110, 4, 1, "", "conj"], [110, 4, 1, "", "conjugate"], [110, 4, 1, "", "copy"], [110, 4, 1, "", "cumprod"], [110, 4, 1, "", "cumsum"], [110, 3, 1, "", "device"], [110, 4, 1, "", "diagonal"], [110, 4, 1, "", "dot"], [110, 3, 1, "", "dtype"], [110, 4, 1, "", "fill"], [110, 3, 1, "", "flags"], [110, 3, 1, "", "flat"], [110, 4, 1, "", "flatten"], [110, 4, 1, "", "get_array"], [110, 3, 1, "", "imag"], [110, 4, 1, "", "item"], [110, 3, 1, "", "itemsize"], [110, 3, 1, "", "mT"], [110, 4, 1, "", "max"], [110, 4, 1, "", "mean"], [110, 4, 1, "", "min"], [110, 3, 1, "", "nbytes"], [110, 3, 1, "", "ndim"], [110, 4, 1, "", "nonzero"], [110, 4, 1, "", "partition"], [110, 4, 1, "", "prod"], [110, 4, 1, "", "put"], [110, 4, 1, "", "ravel"], [110, 3, 1, "", "real"], [110, 4, 1, "", "repeat"], [110, 4, 1, "", "reshape"], [110, 4, 1, "", "round"], [110, 4, 1, "", "searchsorted"], [110, 3, 1, "", "shape"], [110, 3, 1, "", "size"], [110, 4, 1, "", "sort"], [110, 4, 1, "", "squeeze"], [110, 4, 1, "", "std"], [110, 3, 1, "", "strides"], [110, 4, 1, "", "sum"], [110, 4, 1, "", "swapaxes"], [110, 3, 1, "", "sycl_context"], [110, 3, 1, "", "sycl_device"], [110, 3, 1, "", "sycl_queue"], [110, 4, 1, "", "take"], [110, 4, 1, "", "to_device"], [110, 4, 1, "", "trace"], [110, 4, 1, "", "transpose"], [110, 3, 1, "", "usm_type"], [110, 4, 1, "", "var"]], "dpnp.dtype": [[113, 4, 1, "", "__eq__"], [113, 4, 1, "", "__ge__"], [113, 4, 1, "", "__getitem__"], [113, 4, 1, "", "__gt__"], [113, 4, 1, "", "__le__"], [113, 4, 1, "", "__len__"], [113, 4, 1, "", "__lt__"], [113, 4, 1, "", "__ne__"], [113, 3, 1, "", "alignment"], [113, 3, 1, "", "base"], [113, 3, 1, "", "byteorder"], [113, 3, 1, "", "char"], [113, 3, 1, "", "descr"], [113, 3, 1, "", "fields"], [113, 3, 1, "", "flags"], [113, 3, 1, "", "hasobject"], [113, 3, 1, "", "isalignedstruct"], [113, 3, 1, "", "isbuiltin"], [113, 3, 1, "", "isnative"], [113, 3, 1, "", "itemsize"], [113, 3, 1, "", "kind"], [113, 3, 1, "", "metadata"], [113, 3, 1, "", "name"], [113, 3, 1, "", "names"], [113, 3, 1, "", "ndim"], [113, 4, 1, "", "newbyteorder"], [113, 3, 1, "", "num"], [113, 3, 1, "", "shape"], [113, 3, 1, "", "str"], [113, 3, 1, "", "subdtype"], [113, 3, 1, "", "type"]], "dpnp.fft": [[128, 1, 1, "", "fft"], [129, 1, 1, "", "fft2"], [130, 1, 1, "", "fftfreq"], [131, 1, 1, "", "fftn"], [132, 1, 1, "", "fftshift"], [133, 1, 1, "", "hfft"], [134, 1, 1, "", "ifft"], [135, 1, 1, "", "ifft2"], [136, 1, 1, "", "ifftn"], [137, 1, 1, "", "ifftshift"], [138, 1, 1, "", "ihfft"], [139, 1, 1, "", "irfft"], [140, 1, 1, "", "irfft2"], [141, 1, 1, "", "irfftn"], [142, 1, 1, "", "rfft"], [143, 1, 1, "", "rfft2"], [144, 1, 1, "", "rfftfreq"], [145, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[149, 4, 1, "", "__eq__"], [149, 4, 1, "", "__ge__"], [149, 4, 1, "", "__getitem__"], [149, 4, 1, "", "__gt__"], [149, 4, 1, "", "__iter__"], [149, 4, 1, "", "__le__"], [149, 4, 1, "", "__lt__"], [149, 4, 1, "", "__ne__"], [149, 4, 1, "", "__next__"], [149, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[208, 1, 1, "", "cholesky"], [209, 1, 1, "", "cond"], [210, 1, 1, "", "cross"], [211, 1, 1, "", "det"], [212, 1, 1, "", "diagonal"], [213, 1, 1, "", "eig"], [214, 1, 1, "", "eigh"], [215, 1, 1, "", "eigvals"], [216, 1, 1, "", "eigvalsh"], [217, 1, 1, "", "inv"], [218, 1, 1, "", "lstsq"], [219, 1, 1, "", "matmul"], [220, 1, 1, "", "matrix_norm"], [221, 1, 1, "", "matrix_power"], [222, 1, 1, "", "matrix_rank"], [223, 1, 1, "", "multi_dot"], [224, 1, 1, "", "norm"], [225, 1, 1, "", "outer"], [226, 1, 1, "", "pinv"], [227, 1, 1, "", "qr"], [228, 1, 1, "", "slogdet"], [229, 1, 1, "", "solve"], [230, 1, 1, "", "svd"], [231, 1, 1, "", "svdvals"], [232, 1, 1, "", "tensordot"], [233, 1, 1, "", "tensorinv"], [234, 1, 1, "", "tensorsolve"], [235, 1, 1, "", "trace"], [236, 1, 1, "", "vecdot"], [237, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[280, 6, 1, "", "T"], [281, 4, 1, "", "__abs__"], [282, 4, 1, "", "__add__"], [283, 4, 1, "", "__and__"], [284, 4, 1, "", "__bool__"], [285, 4, 1, "", "__complex__"], [286, 4, 1, "", "__copy__"], [287, 4, 1, "", "__eq__"], [288, 4, 1, "", "__float__"], [289, 4, 1, "", "__floordiv__"], [290, 4, 1, "", "__ge__"], [291, 4, 1, "", "__getitem__"], [292, 4, 1, "", "__gt__"], [293, 4, 1, "", "__iadd__"], [294, 4, 1, "", "__iand__"], [295, 4, 1, "", "__ifloordiv__"], [296, 4, 1, "", "__ilshift__"], [297, 4, 1, "", "__imatmul__"], [298, 4, 1, "", "__imod__"], [299, 4, 1, "", "__imul__"], [300, 4, 1, "", "__int__"], [301, 4, 1, "", "__invert__"], [302, 4, 1, "", "__ior__"], [303, 4, 1, "", "__ipow__"], [304, 4, 1, "", "__irshift__"], [305, 4, 1, "", "__isub__"], [306, 4, 1, "", "__itruediv__"], [307, 4, 1, "", "__ixor__"], [308, 4, 1, "", "__le__"], [309, 4, 1, "", "__len__"], [310, 4, 1, "", "__lshift__"], [311, 4, 1, "", "__lt__"], [312, 4, 1, "", "__matmul__"], [313, 4, 1, "", "__mod__"], [314, 4, 1, "", "__mul__"], [315, 4, 1, "", "__ne__"], [316, 4, 1, "", "__neg__"], [317, 4, 1, "", "__new__"], [318, 4, 1, "", "__or__"], [319, 4, 1, "", "__pos__"], [320, 4, 1, "", "__pow__"], [321, 4, 1, "", "__radd__"], [322, 4, 1, "", "__rand__"], [323, 4, 1, "", "__repr__"], [324, 4, 1, "", "__rfloordiv__"], [325, 4, 1, "", "__rlshift__"], [326, 4, 1, "", "__rmatmul__"], [327, 4, 1, "", "__rmod__"], [328, 4, 1, "", "__rmul__"], [329, 4, 1, "", "__ror__"], [330, 4, 1, "", "__rpow__"], [331, 4, 1, "", "__rrshift__"], [332, 4, 1, "", "__rshift__"], [333, 4, 1, "", "__rsub__"], [334, 4, 1, "", "__rtruediv__"], [335, 4, 1, "", "__rxor__"], [336, 4, 1, "", "__setitem__"], [337, 4, 1, "", "__str__"], [338, 4, 1, "", "__sub__"], [339, 4, 1, "", "__truediv__"], [340, 4, 1, "", "__xor__"], [341, 4, 1, "", "all"], [342, 4, 1, "", "any"], [343, 4, 1, "", "argmax"], [344, 4, 1, "", "argmin"], [345, 4, 1, "", "argsort"], [346, 4, 1, "", "astype"], [347, 4, 1, "", "choose"], [348, 4, 1, "", "clip"], [349, 4, 1, "", "conj"], [350, 4, 1, "", "conjugate"], [351, 4, 1, "", "copy"], [352, 4, 1, "", "cumprod"], [353, 4, 1, "", "cumsum"], [354, 4, 1, "", "diagonal"], [355, 6, 1, "", "dtype"], [356, 4, 1, "", "fill"], [357, 6, 1, "", "flags"], [358, 6, 1, "", "flat"], [359, 4, 1, "", "flatten"], [360, 6, 1, "", "imag"], [361, 4, 1, "", "item"], [362, 6, 1, "", "itemsize"], [363, 6, 1, "", "mT"], [364, 4, 1, "", "max"], [365, 4, 1, "", "mean"], [366, 4, 1, "", "min"], [367, 6, 1, "", "nbytes"], [368, 6, 1, "", "ndim"], [369, 4, 1, "", "nonzero"], [370, 4, 1, "", "partition"], [371, 4, 1, "", "prod"], [372, 4, 1, "", "put"], [373, 4, 1, "", "ravel"], [374, 6, 1, "", "real"], [375, 4, 1, "", "repeat"], [376, 4, 1, "", "reshape"], [377, 4, 1, "", "round"], [378, 4, 1, "", "searchsorted"], [379, 6, 1, "", "shape"], [380, 6, 1, "", "size"], [381, 4, 1, "", "sort"], [382, 4, 1, "", "squeeze"], [383, 4, 1, "", "std"], [384, 6, 1, "", "strides"], [385, 4, 1, "", "sum"], [386, 4, 1, "", "swapaxes"], [387, 4, 1, "", "take"], [388, 4, 1, "", "trace"], [389, 4, 1, "", "transpose"], [390, 4, 1, "", "var"]], "dpnp.random": [[415, 2, 1, "", "RandomState"], [416, 1, 1, "", "beta"], [417, 1, 1, "", "binomial"], [418, 1, 1, "", "bytes"], [419, 1, 1, "", "chisquare"], [420, 1, 1, "", "choice"], [421, 1, 1, "", "dirichlet"], [422, 1, 1, "", "exponential"], [423, 1, 1, "", "f"], [424, 1, 1, "", "gamma"], [425, 1, 1, "", "geometric"], [426, 1, 1, "", "gumbel"], [427, 1, 1, "", "hypergeometric"], [428, 1, 1, "", "laplace"], [429, 1, 1, "", "logistic"], [430, 1, 1, "", "lognormal"], [431, 1, 1, "", "logseries"], [432, 1, 1, "", "multinomial"], [433, 1, 1, "", "multivariate_normal"], [434, 1, 1, "", "negative_binomial"], [435, 1, 1, "", "noncentral_chisquare"], [436, 1, 1, "", "noncentral_f"], [437, 1, 1, "", "normal"], [438, 1, 1, "", "pareto"], [439, 1, 1, "", "permutation"], [440, 1, 1, "", "poisson"], [441, 1, 1, "", "power"], [442, 1, 1, "", "rand"], [443, 1, 1, "", "randint"], [444, 1, 1, "", "randn"], [445, 1, 1, "", "random"], [446, 1, 1, "", "random_integers"], [447, 1, 1, "", "random_sample"], [448, 1, 1, "", "ranf"], [449, 1, 1, "", "rayleigh"], [450, 1, 1, "", "sample"], [451, 1, 1, "", "seed"], [452, 1, 1, "", "shuffle"], [453, 1, 1, "", "standard_cauchy"], [454, 1, 1, "", "standard_exponential"], [455, 1, 1, "", "standard_gamma"], [456, 1, 1, "", "standard_normal"], [457, 1, 1, "", "standard_t"], [458, 1, 1, "", "triangular"], [459, 1, 1, "", "uniform"], [460, 1, 1, "", "vonmises"], [461, 1, 1, "", "wald"], [462, 1, 1, "", "weibull"], [463, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[415, 4, 1, "", "__eq__"], [415, 4, 1, "", "__ge__"], [415, 4, 1, "", "__gt__"], [415, 4, 1, "", "__le__"], [415, 4, 1, "", "__lt__"], [415, 4, 1, "", "__ne__"], [415, 4, 1, "", "get_state"], [415, 4, 1, "", "get_sycl_device"], [415, 4, 1, "", "get_sycl_queue"], [415, 4, 1, "", "normal"], [415, 4, 1, "", "rand"], [415, 4, 1, "", "randint"], [415, 4, 1, "", "randn"], [415, 4, 1, "", "random_sample"], [415, 4, 1, "", "standard_normal"], [415, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 23, 59, 92, 95, 110, 113, 114, 129, 131, 133, 135, 136, 138, 140, 141, 143, 145, 146, 161, 162, 218, 222, 224, 226, 230, 231, 232, 355, 389, 415, 416, 417, 422, 423, 424, 426, 427, 428, 429, 430, 432, 434, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 473, 509, 510, 544], "0": [0, 4, 6, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 63, 66, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 171, 174, 175, 176, 177, 180, 181, 184, 185, 186, 188, 191, 193, 194, 195, 196, 201, 202, 203, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 351, 354, 356, 360, 361, 363, 374, 377, 379, 381, 383, 388, 389, 390, 391, 394, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 414, 415, 417, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 437, 439, 440, 441, 442, 445, 447, 448, 449, 450, 453, 456, 458, 459, 460, 465, 468, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 534, 535, 536, 544], "00": [88, 116, 128, 489], "000": [267, 417], "00000000005e": 124, "000000001": 61, "00000000e": [128, 267], "000000082740371e": 124, "000000e": [88, 489], "00001101": [61, 62, 64, 65, 67, 187], "00001e10": [18, 188], "00010000": 65, "00010001": [61, 67], "00011100": 67, "00011101": 65, "0001e10": 188, "000e": 116, "000j": 267, "0011": 59, "002": 267, "00225109": 86, "00867716": 419, "01": [86, 116], "02": [86, 116, 267], "03": 267, "03047091": 86, "03088525e": 117, "0342579": 86, "0396842": 250, "04": 116, "04719755": 414, "04921661": 415, "04923628": 490, "05": [18, 116, 188], "05846808": 490, "0614962j": [129, 143], "06310682": 415, "06682066": 490, "07": 267, "07012729": 86, "0728188e": 86, "07944154": [93, 228], "08": [18, 88, 116, 154, 188, 433, 489], "08156915": 415, "08409186": 490, "08504448": 490, "08903844": 490, "09373496": 86, "0943951": 414, "09640474": 245, "09861229": [93, 228, 242], "0d": 36, "0dev2": 6, "0j": [21, 109, 110, 189, 190, 197, 198, 219, 253, 360, 374, 487], "0th": [232, 509], "1": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 188, 189, 190, 192, 197, 198, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 345, 346, 351, 354, 356, 359, 360, 361, 363, 368, 370, 374, 379, 381, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 417, 419, 420, 422, 424, 426, 428, 429, 430, 432, 433, 434, 437, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 454, 456, 459, 464, 465, 466, 467, 468, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 544], "10": [0, 4, 15, 16, 27, 29, 33, 34, 49, 58, 63, 66, 76, 83, 93, 94, 95, 96, 97, 100, 102, 103, 106, 107, 110, 111, 113, 115, 116, 124, 125, 132, 144, 166, 169, 175, 176, 177, 183, 188, 201, 202, 204, 205, 235, 236, 240, 241, 242, 243, 250, 251, 258, 266, 376, 400, 409, 411, 415, 417, 427, 439, 469, 475, 476, 478, 481, 484, 496, 500, 506, 515, 516, 517, 519, 520, 521, 526, 531, 532, 534], "100": [102, 144, 169, 188, 202, 223, 250, 400, 427, 453, 467, 527], "1000": [72, 169, 223, 250, 416, 417, 422, 424, 426, 427, 428, 429, 430, 437, 438, 441, 443, 445, 448, 450, 456, 460, 461, 462, 463, 467, 513], "10000": [223, 425, 440, 449, 459], "100000": [95, 97, 434], "1000000": [453, 455, 457, 458], "101": [59, 63, 66, 205, 476], "1010": [66, 476], "10100": [63, 205], "1024": 0, "10394325": 490, "105": 116, "11": [33, 34, 58, 59, 89, 100, 102, 103, 110, 111, 125, 171, 177, 224, 235, 376, 434, 443, 481, 484, 491, 515, 516, 517, 519, 520, 521, 526, 532, 534], "110": [115, 185], "1100": 61, "11100": 67, "11101": [59, 65], "11110010": [62, 64, 187], "111111": 267, "113": 244, "11570901": 415, "11643488": 490, "1179187": 415, "118033988749895": 501, "119": 115, "1196081": 415, "12": [10, 33, 34, 57, 61, 92, 99, 100, 102, 103, 107, 111, 113, 115, 125, 129, 143, 168, 177, 183, 203, 231, 250, 407, 409, 414, 439, 465, 484, 515, 516, 517, 519, 520, 521, 526, 532, 534], "120": [94, 96, 99], "123": [86, 110, 116, 361], "125": [154, 405, 406, 528], "12613779": 490, "127": 169, "128": [0, 169, 267], "12th": 115, "13": [10, 33, 34, 61, 62, 64, 65, 67, 102, 103, 109, 111, 113, 115, 177, 186, 187, 219, 253, 465, 484, 516, 517, 520, 521, 525, 526, 532], "130": 115, "134": 185, "13436424": 415, "135": [31, 53], "13710533": 419, "139884456208480": 17, "13j": 467, "14": [33, 34, 61, 62, 64, 102, 103, 109, 111, 148, 177, 185, 187, 232, 484, 509, 516, 517, 520, 521, 526, 532], "140": 527, "140053638309840": 22, "14157194": 513, "14159265": [14, 26, 31, 53, 98, 414], "1424356": 86, "14243561": 86, "14423775e": 128, "14j": 467, "15": [33, 34, 95, 97, 102, 103, 107, 111, 115, 133, 138, 177, 224, 241, 439, 484, 516, 517, 520, 521, 526, 532], "150": 99, "15591488": 490, "15716429": 86, "15888336": 250, "15j": 467, "16": [6, 61, 65, 102, 103, 111, 113, 128, 154, 164, 169, 171, 177, 237, 266, 405, 406, 467, 485, 507, 516, 517, 520, 521, 526, 532], "1621": [465, 525], "16227766": [209, 469], "16394577": 415, "164": 245, "1643624": 86, "166": 245, "16j": 128, "17": [6, 61, 67, 86, 128, 129, 143, 526], "17157288": [214, 216], "17281316e": 128, "17615308": 86, "177": [169, 250], "17j": 128, "18": [6, 94, 96, 113, 114, 115, 131, 210, 220, 224, 250, 526], "180": [31, 53, 98, 99, 115, 413, 527, 551], "1805": 10, "18236388": 415, "18557831": 415, "1887902": 414, "18920668": 490, "19": [10, 90, 113, 465, 526, 527], "19083664": 86, "19083665": 86, "1923875335537315": 444, "19245009": 483, "1924881e": 154, "1965": 10, "19722458": 93, "1985": 224, "1d": [24, 114, 410, 411, 506, 513], "1e": [18, 124, 188, 213, 241, 242, 244, 245, 433], "1e10": [18, 188], "1j": [12, 13, 21, 29, 30, 39, 49, 52, 80, 81, 110, 139, 183, 189, 197, 213, 225, 230, 360, 374, 399, 466, 494, 498], "1th": [232, 509], "2": [0, 3, 4, 10, 12, 13, 14, 15, 16, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 189, 192, 197, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 277, 346, 351, 354, 356, 359, 361, 363, 368, 370, 379, 380, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 413, 414, 415, 419, 423, 427, 433, 439, 442, 444, 455, 457, 458, 461, 463, 464, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 488, 489, 491, 492, 494, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536], "20": [63, 94, 96, 107, 115, 144, 168, 184, 188, 202, 203, 204, 205, 224, 411, 417, 432, 484, 506, 526, 527], "20000": 417, "2007": 10, "200e": 116, "20477401j": [129, 143], "2048": 0, "2066992e": 86, "21": [95, 97, 113, 526], "210": 99, "2123185": 86, "215": 250, "21623621": 490, "21941987": 415, "21968665": 415, "22": [410, 465, 525, 526], "220": 527, "220446049250313e": 467, "222222": 267, "22460635e": 507, "22464680e": 128, "22497216": 224, "22776602": 250, "23": [60, 415, 465, 526], "230": 115, "23387232": 490, "23598776": 414, "23606798": 224, "24": [33, 34, 92, 94, 96, 110, 114, 115, 185, 202, 210, 232, 233, 235, 379, 407, 509, 511, 526], "240": 99, "24264069": 224, "24544512": 415, "247219128924647": 276, "25": [113, 115, 120, 130, 171, 175, 176, 217, 238, 266, 278, 444, 453, 485, 528, 529], "255": [61, 65], "25506903": 415, "256": [0, 169], "26": [67, 115], "260": 527, "26606588": 180, "26618007j": 243, "27": [73, 154, 250, 405, 406, 483, 528], "270": 99, "2795853": 180, "28": [6, 67, 115], "28000000e": 267, "2800000e": 267, "283185307179586": 527, "28318531": 527, "28352814": 415, "2858386e": 86, "28904982": 245, "29": 65, "297": 10, "2d": [230, 253, 480, 524], "2e": [95, 97], "2f": 0, "2j": [80, 81, 109, 128, 183, 189, 197, 214, 216, 219, 253, 466, 487, 494, 530], "2k": 527, "3": [0, 3, 4, 6, 14, 16, 23, 24, 25, 26, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 130, 131, 132, 133, 137, 138, 140, 141, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 166, 169, 171, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 189, 190, 192, 197, 198, 199, 201, 202, 205, 209, 210, 211, 212, 213, 217, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 351, 354, 359, 361, 363, 368, 370, 379, 380, 381, 389, 391, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 410, 414, 415, 419, 423, 430, 433, 439, 442, 443, 444, 454, 458, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 488, 492, 493, 494, 496, 497, 499, 500, 501, 502, 504, 505, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "30": [92, 99, 110, 115, 144, 380, 411, 414, 506, 530], "300": [6, 99, 527], "3003003": 468, "301": 10, "30102999566": 241, "3012989": 491, "30258509": [93, 251], "308": 267, "308j": 267, "31": [6, 67, 169, 465, 525], "312": 117, "316": 250, "32": [113, 115, 169, 232, 275, 277, 509], "33": 468, "330": [6, 99], "333": 223, "33333333": 267, "3333333e": 267, "33340275": 513, "33486982e": 128, "33836967": 415, "340": 527, "34074171": 415, "34132519": 250, "34846923": [220, 224], "34960421": 250, "35": [115, 425], "35106603e": [220, 224], "35348576": 237, "35355338": 483, "36": 92, "360": 527, "37": [465, 481, 525], "371139e": 88, "38": [185, 417], "380": 527, "38268343": 214, "38268343j": 214, "38629436": 93, "38885": 417, "389": 6, "389056099": [121, 124], "39295758": 415, "39783284": 86, "3e": [0, 95, 97, 467], "3j": [109, 219, 253, 494], "3rd": [78, 79, 111, 496], "3x3": 252, "3x8000": 454, "4": [0, 16, 17, 23, 24, 25, 33, 34, 36, 38, 39, 41, 55, 57, 58, 59, 61, 65, 68, 76, 77, 78, 79, 82, 85, 86, 88, 90, 92, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 122, 125, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 150, 151, 154, 156, 157, 158, 162, 163, 164, 166, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 189, 192, 197, 201, 202, 204, 207, 210, 211, 212, 217, 219, 220, 221, 222, 224, 228, 231, 232, 233, 234, 235, 237, 238, 243, 246, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 268, 269, 271, 273, 276, 278, 351, 354, 359, 363, 368, 370, 379, 381, 389, 391, 394, 396, 398, 400, 402, 405, 406, 407, 409, 410, 414, 415, 416, 419, 439, 444, 460, 464, 465, 466, 467, 470, 471, 473, 474, 478, 479, 480, 481, 482, 485, 487, 490, 492, 493, 496, 497, 500, 501, 502, 504, 505, 509, 510, 512, 513, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 536], "40": [6, 63, 115, 144, 204, 205, 411, 506], "40882036": 415, "4096": 0, "41": [465, 490, 525], "41421356": [209, 224], "42": 485, "420": 527, "437": 6, "44": [403, 410], "4400": [115, 232, 509], "443469": 250, "44509285e": 128, "45": [21, 31, 53, 237], "45206687": 86, "4532": [115, 232, 509], "46": 115, "460": [6, 527], "46394577": 415, "464": 250, "46436927": 86, "4643693": 86, "4664": [115, 232, 509], "47": 6, "4730": [115, 232, 509], "4796": [115, 232, 509], "48": [6, 92], "48093112": 415, "48613152": 86, "48613155": 86, "4874": [115, 232, 509], "48927254": 415, "49": 6, "4928": [115, 232, 509], "49543509": 415, "49778714": 527, "499128": 109, "4d": 230, "4e": 467, "4j": [183, 466, 530], "4x4": [516, 520], "5": [0, 16, 17, 22, 23, 24, 25, 32, 33, 36, 41, 54, 55, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 74, 76, 78, 79, 82, 85, 86, 87, 90, 92, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 120, 125, 129, 130, 132, 140, 143, 144, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 168, 169, 171, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 189, 192, 197, 201, 202, 204, 205, 208, 210, 212, 214, 216, 217, 223, 224, 225, 229, 232, 235, 236, 237, 238, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 273, 276, 346, 351, 361, 363, 380, 391, 394, 396, 397, 398, 399, 400, 402, 405, 406, 409, 410, 414, 415, 416, 417, 419, 422, 434, 438, 439, 440, 441, 444, 447, 462, 464, 465, 466, 467, 468, 470, 473, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 492, 494, 496, 500, 501, 503, 504, 505, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536], "50": [129, 143, 144, 169, 202, 232, 244, 245, 250, 411, 506, 509, 513, 534], "500": [202, 527], "5018": [115, 232, 509], "50455115": 490, "5091786": 89, "512": 0, "5147297e": 86, "5162": [115, 232, 509], "52069395e": 128, "52359878": 414, "52928804": 415, "53": 6, "5306": [115, 232, 509], "53702235": 86, "5399045e": 154, "54": [6, 415], "540": 527, "54288406": 415, "54465213": 415, "545": 6, "548739": 491, "54930614": [32, 54], "55": [403, 410, 485], "5555555555555554": 278, "562": 250, "5620499351813308": [12, 13], "56920387": 415, "5707963267948966": [28, 48], "57079633": [21, 31, 53, 414, 527], "5790461": 86, "57904613": 86, "58997253": 415, "591953": 89, "5e": [244, 245], "5j": [260, 396, 494], "6": [0, 4, 16, 23, 24, 25, 33, 34, 36, 41, 55, 58, 60, 65, 67, 69, 76, 78, 79, 85, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 119, 124, 125, 130, 133, 144, 151, 154, 167, 168, 171, 177, 178, 183, 184, 185, 186, 192, 201, 202, 203, 210, 212, 220, 224, 226, 227, 230, 231, 232, 233, 235, 236, 237, 238, 250, 252, 254, 258, 270, 271, 275, 351, 361, 363, 379, 391, 394, 398, 400, 403, 405, 406, 409, 415, 432, 434, 439, 444, 464, 465, 466, 472, 473, 478, 479, 480, 481, 482, 485, 492, 494, 496, 500, 502, 503, 504, 505, 509, 511, 513, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536], "60": [92, 99, 115, 203, 232, 411, 506, 509, 527, 534], "600": 202, "60943791": 93, "6173796": 86, "61799388": 414, "62": 185, "6227766": 169, "62318272": 419, "62341325": 169, "624": 116, "63": 169, "63317787e": 507, "63522211": 415, "63836967": 415, "64": [0, 4, 115, 154, 169, 275, 277, 405, 406, 481], "64000": 115, "65157276": 86, "6515728": 86, "65354985": 86, "65745445": [15, 27], "6580445": 86, "66519143": 414, "6666666666666665": 273, "67": 115, "67305985": 161, "673174": 415, "67718303": 415, "6883078": 86, "69295758": 415, "69314718": [93, 228, 242], "6990877": 415, "6j": [183, 466, 530], "7": [16, 18, 23, 24, 25, 41, 55, 60, 69, 74, 76, 85, 86, 90, 92, 95, 97, 100, 101, 102, 103, 105, 106, 108, 110, 111, 114, 121, 125, 151, 155, 169, 171, 177, 185, 186, 188, 201, 202, 212, 220, 224, 230, 232, 235, 237, 252, 254, 258, 263, 266, 361, 363, 394, 400, 408, 409, 415, 439, 465, 466, 470, 475, 477, 478, 480, 496, 502, 503, 504, 505, 509, 515, 516, 517, 519, 520, 521, 522, 523, 525, 526, 527, 530, 532, 534], "70": [202, 530, 534], "700": 202, "700e": 116, "70710677": [110, 360, 374], "70710678": [209, 213], "70710678j": 213, "70882036": 415, "7110255": 86, "71102554": 86, "71238898": 414, "718281828": [121, 124], "72": 92, "720": [94, 96, 527], "72075441": 250, "72450536": 86, "72538256": [29, 49], "74165739": 224, "742278e": 489, "74596669": [220, 224], "7485727": 86, "74857277": 86, "74921661": 415, "75": [58, 120, 130, 171, 176, 217, 238], "754": 147, "75682673": 490, "75958653": 414, "76096244": 415, "76377462": 415, "77447665": 245, "78539816": [21, 30, 31, 52, 53, 527], "78927254": 415, "79175947": 93, "7937219": 86, "79727215": 86, "7972722": 86, "79769313e": 267, "7j": 408, "8": [4, 16, 18, 23, 24, 41, 55, 62, 64, 73, 76, 85, 92, 100, 101, 102, 103, 105, 106, 110, 111, 113, 115, 116, 125, 128, 130, 144, 145, 151, 154, 169, 171, 177, 183, 186, 187, 188, 201, 211, 212, 224, 228, 230, 231, 232, 233, 235, 236, 237, 238, 250, 252, 254, 363, 379, 394, 400, 405, 406, 407, 409, 415, 439, 458, 465, 466, 478, 480, 483, 489, 496, 505, 509, 511, 513, 515, 516, 517, 519, 520, 521, 525, 526, 527, 528, 531, 532, 534], "80": [113, 115, 534], "8000": 454, "8012391e": 86, "80226506": 415, "8058837395885292": 237, "8104691": 86, "81715362": 415, "827941": [169, 250], "82842712": [214, 216], "8399546e": 86, "84086883": 86, "84288406": 415, "84401099": 415, "84743374": 415, "84803548": 224, "85": 115, "86": 185, "87649168": 244, "88": 114, "88079259": 180, "88178420e": 128, "881943016134134": 237, "88194302": 237, "88997253": 415, "8900264": 86, "89002645": 86, "89920014": 419, "8f": 113, "8j": 530, "9": [4, 16, 23, 24, 41, 55, 76, 85, 86, 92, 95, 97, 100, 101, 102, 103, 105, 108, 110, 111, 115, 117, 125, 128, 131, 132, 137, 148, 154, 156, 164, 169, 171, 177, 188, 201, 212, 213, 218, 220, 224, 226, 227, 230, 231, 232, 235, 237, 250, 252, 266, 267, 361, 394, 409, 415, 417, 419, 439, 465, 466, 478, 496, 497, 502, 509, 515, 516, 517, 519, 520, 521, 522, 525, 526, 527, 528, 532, 534], "90": [21, 99, 413, 480, 534], "9011005": 86, "917152": 508, "92387953": 214, "92387953j": 214, "9305482": 86, "93548928": 490, "9377134e": 86, "9387854e": 86, "9393724": 86, "9393725": 86, "94": 115, "94591015": 93, "95": 218, "9520904e": 86, "95799250e": 128, "968541": 86, "9685411": 86, "9724453": 86, "98": [219, 253], "98024613": 250, "9875833": 86, "99": [114, 242, 411], "9909503": 86, "99095035": 86, "99322285": [15, 27], "994938": 86, "9949381": 86, "9951523": 86, "99532227": 120, "996272": 508, "99822295": [29, 49], "99853728": 120, "999": [116, 186], "9990000e": 267, "99959305": 120, "99989938": 120, "9999": 267, "99997791": 120, "9999999": 86, "99999994": 86, "999999e": 188, "A": [10, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 108, 110, 111, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 179, 180, 181, 183, 184, 186, 187, 191, 193, 194, 195, 196, 203, 204, 205, 206, 207, 208, 212, 214, 215, 216, 218, 222, 223, 224, 227, 228, 232, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 256, 258, 260, 262, 263, 266, 270, 271, 275, 277, 346, 351, 359, 361, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 408, 413, 414, 415, 417, 434, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 464, 465, 466, 468, 470, 473, 476, 477, 480, 483, 487, 488, 489, 490, 491, 495, 496, 497, 498, 502, 504, 505, 507, 508, 509, 510, 512, 514, 516, 518, 520, 522, 523, 528, 531, 532, 534, 535, 536, 551], "AND": [17, 61, 62, 64, 65, 67, 187, 246, 247, 248, 249], "And": [4, 50, 51, 102, 110, 346, 516, 520], "As": 524, "Be": 213, "Being": 3, "But": [4, 113], "By": [33, 34, 44, 51, 92, 110, 129, 133, 135, 139, 141, 145, 169, 218, 238, 250, 253, 255, 257, 261, 268, 269, 272, 273, 274, 275, 276, 277, 278, 346, 471, 478, 492, 501, 505, 514, 516, 518, 520, 529, 531], "For": [0, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 356, 359, 360, 361, 368, 374, 376, 379, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 544, 551], "If": [4, 10, 12, 13, 17, 18, 22, 23, 25, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 51, 58, 59, 71, 76, 78, 79, 86, 90, 92, 93, 94, 95, 96, 97, 100, 101, 105, 106, 109, 110, 111, 113, 114, 115, 116, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 151, 157, 158, 160, 165, 169, 171, 175, 176, 177, 178, 180, 183, 184, 185, 186, 188, 192, 195, 196, 197, 208, 210, 218, 220, 221, 222, 223, 224, 226, 227, 230, 232, 234, 235, 237, 238, 239, 250, 251, 255, 256, 257, 258, 259, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 363, 381, 402, 403, 407, 410, 411, 415, 437, 459, 466, 467, 469, 471, 472, 473, 474, 478, 481, 482, 484, 493, 496, 499, 500, 501, 503, 504, 505, 506, 509, 510, 511, 512, 513, 524, 527, 528, 529, 530, 531, 532, 533, 534, 544, 551], "In": [4, 10, 33, 34, 59, 86, 92, 94, 95, 96, 97, 115, 116, 134, 135, 136, 139, 141, 171, 208, 215, 223, 227, 245, 250, 270, 271, 273, 275, 277, 407, 410, 415, 459, 464, 465, 473, 474, 503, 505, 523], "It": [4, 10, 17, 22, 23, 24, 33, 34, 76, 94, 95, 96, 97, 107, 109, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 171, 186, 214, 216, 245, 253, 257, 258, 268, 269, 270, 271, 272, 273, 274, 276, 278, 400, 407, 473, 474, 485, 495, 501, 503, 505, 529, 551], "Its": [76, 233, 411, 511], "NOT": [62, 64, 187, 246, 247, 248, 249], "No": [43, 44, 115, 208], "Not": [17, 22, 44, 191, 267, 270, 271, 272, 274, 275, 277, 407], "OR": [22, 61, 62, 64, 65, 67, 187, 246, 247, 248, 249], "On": 4, "One": [55, 56, 57, 92, 112, 113, 139, 225, 400, 473], "Ones": 38, "Or": [171, 513], "That": 252, "The": [3, 4, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 76, 77, 78, 79, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 184, 187, 188, 190, 191, 192, 193, 194, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 223, 224, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 255, 256, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 346, 351, 360, 363, 368, 370, 374, 379, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 418, 420, 421, 431, 436, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 533, 534, 535, 536, 544, 547, 551], "Then": [10, 45, 47, 252], "There": [10, 238, 524], "These": [4, 23, 113, 115, 116, 123, 252, 265, 411, 506, 516, 520, 544, 547], "To": [4, 133, 139, 141, 154, 394, 527], "With": [33, 34, 58, 90, 96, 97, 177, 220, 224, 237, 255, 261, 268, 269, 275, 277, 407, 503, 532], "_": [0, 176, 500, 513], "__array_interface__": 113, "__bool__": 544, "__dlpack__": 160, "__dlpack_device__": 160, "__eq__": [110, 113, 149, 415], "__ge__": [110, 113, 149, 415], "__getitem__": [110, 113, 149], "__gt__": [110, 113, 149, 415], "__iter__": 149, "__le__": [110, 113, 149, 415], "__len__": [110, 113], "__lt__": [110, 113, 149, 415], "__main__": 0, "__name__": 0, "__ne__": [110, 113, 149, 415], "__next__": 149, "__setitem__": [110, 149], "__sycl_usm_array_interface__": 46, "_core": 113, "_dtypes_list": 0, "_f": 224, "a1": [39, 40], "a2": [39, 40], "a_": [10, 224], "a_ax": [232, 509], "a_i": [236, 531], "a_k": 10, "a_m": 10, "a_resamp": 139, "ab": [6, 10, 13, 18, 188, 224], "abc": 115, "abcd": 116, "abl": 224, "about": [45, 47, 110, 147, 213, 357, 400, 472, 544], "abov": [3, 14, 15, 26, 27, 28, 29, 32, 48, 49, 54, 93, 101, 104, 131, 136, 141, 145, 184, 212, 227, 235, 251, 267, 469, 514, 515, 519], "absolut": [6, 12, 18, 21, 59, 127, 168, 188, 203, 228, 276, 278, 408, 467, 501, 527, 529, 551], "accept": [24, 115, 225, 415, 516, 520], "access": [10, 102, 103, 146, 252, 516, 520, 544], "accord": [17, 22, 58, 66, 72, 113, 145, 147, 213, 214, 215, 216, 251, 257, 258, 273, 276, 278, 400, 469, 476, 501, 529], "accordingli": [92, 272, 274], "account": [464, 473], "accumul": [93, 94, 95, 96, 97, 115, 175, 235, 270, 271, 275, 277, 407, 503, 511], "accur": [113, 124, 171, 242, 244], "accuraci": [134, 135, 136, 139, 141], "achiev": 115, "aco": [6, 26], "acosh": [6, 27], "across": [105, 176, 270, 271, 275, 277], "activ": 4, "actual": [113, 175, 176, 208, 223], "ad": [18, 59, 113, 116, 123, 139, 188, 211, 228, 245, 527, 547], "add": [6, 86, 113, 551], "addit": [24, 86, 93, 208, 273, 524], "address": 113, "adjac": [212, 235, 495, 527], "advanc": 115, "advers": 115, "advis": 4, "affect": [25, 105, 115, 146, 175, 176], "after": [112, 146, 393, 400, 434, 478], "after_1": 400, "after_n": 400, "ag": 113, "against": [18, 33, 34, 68, 69, 70, 76, 90, 170, 188, 220, 224, 226, 237, 255, 261, 268, 269, 275, 277, 407, 411, 503, 506], "ai": [3, 411, 506], "ai_max": 506, "ai_min": 506, "ainv": [217, 233], "al": 10, "algebra": [537, 547], "algorithm": [10, 35, 115, 116, 128, 134, 142, 493], "alia": [10, 14, 15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 62, 63, 64, 66, 78, 79, 108, 118, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 147, 167, 187, 205, 263, 279, 398, 402, 405, 406, 415, 445, 448, 450, 464, 470, 473, 476, 482, 512, 522, 527, 533, 536], "alias": [9, 133, 134, 139, 141, 490], "align": 113, "all": [4, 6, 9, 18, 21, 22, 23, 39, 40, 44, 51, 58, 77, 86, 90, 99, 106, 110, 112, 113, 115, 116, 121, 122, 124, 126, 131, 132, 136, 137, 140, 141, 145, 146, 151, 152, 153, 161, 162, 164, 169, 171, 178, 181, 183, 201, 208, 210, 222, 226, 237, 238, 250, 255, 258, 261, 268, 269, 272, 274, 346, 349, 356, 370, 400, 407, 417, 466, 467, 478, 482, 485, 499, 503, 524, 526, 531, 533, 544, 551], "allclos": [6, 39, 188, 217, 226, 227, 229, 230, 234], "alloc": [3, 4, 23, 25, 38, 42, 43, 44, 45, 46, 47, 51, 58, 83, 93, 101, 102, 104, 110, 117, 118, 126, 130, 144, 148, 161, 162, 163, 164, 165, 166, 167, 169, 180, 181, 184, 195, 196, 238, 239, 250, 251, 252, 257, 258, 260, 273, 276, 278, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 469, 499, 501, 514, 516, 520, 528, 529, 531, 535, 536], "allow": [41, 51, 96, 97, 100, 110, 115, 175, 176, 192, 245, 252, 258, 346, 376, 505, 544], "almost": [36, 213, 516], "along": [3, 4, 17, 19, 20, 22, 23, 24, 33, 34, 35, 41, 58, 77, 78, 79, 90, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 110, 111, 112, 114, 125, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 151, 152, 153, 157, 158, 163, 169, 171, 177, 178, 184, 186, 224, 227, 232, 233, 234, 235, 236, 237, 238, 250, 251, 255, 256, 257, 258, 259, 261, 262, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 343, 344, 345, 352, 353, 364, 366, 371, 372, 380, 383, 385, 387, 388, 390, 400, 403, 407, 409, 410, 411, 464, 469, 471, 478, 479, 480, 482, 485, 492, 493, 496, 500, 501, 503, 505, 506, 509, 510, 511, 513, 516, 517, 520, 521, 524, 526, 527, 529, 531, 532, 533, 544], "alpha": [416, 421, 422, 438, 441], "alreadi": [4, 10, 43, 44, 55, 56, 57, 399, 400, 524], "also": [3, 4, 10, 14, 15, 16, 18, 21, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 63, 65, 66, 67, 84, 86, 108, 110, 113, 115, 119, 123, 131, 136, 140, 141, 142, 145, 154, 156, 157, 158, 159, 163, 165, 168, 171, 172, 173, 174, 175, 179, 188, 192, 203, 205, 206, 207, 208, 244, 245, 252, 256, 262, 263, 265, 266, 379, 394, 395, 405, 406, 453, 470, 476, 490, 502, 505, 522, 524, 544], "alter": 105, "altern": [3, 4, 17, 22, 94, 95, 96, 97, 109, 110, 253, 255, 257, 258, 261, 270, 271, 273, 275, 276, 277, 278, 389, 407, 501, 503, 529], "although": [21, 113, 135, 136, 137, 510], "alwai": [4, 10, 14, 15, 26, 27, 28, 29, 30, 32, 35, 42, 48, 49, 51, 52, 54, 105, 110, 111, 114, 127, 154, 160, 177, 214, 216, 276, 278, 346, 394, 473, 494, 501, 529, 532], "amax": [6, 60, 255], "ambigu": 544, "amin": [6, 261], "among": 114, "amplitud": 10, "an": [0, 3, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 88, 89, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 198, 201, 203, 204, 205, 206, 207, 210, 211, 212, 215, 218, 222, 223, 224, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 286, 345, 346, 347, 348, 351, 361, 364, 368, 370, 372, 375, 376, 379, 380, 381, 382, 386, 387, 389, 391, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 422, 423, 425, 434, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 544, 551], "anaconda": 3, "analog": [129, 131, 133, 135, 136, 138], "analysi": 10, "analyt": [3, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54], "angl": [6, 10, 14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 98, 99, 183, 413, 414, 466, 467, 527, 551], "ani": [3, 6, 17, 18, 23, 24, 38, 42, 43, 44, 45, 46, 47, 51, 68, 69, 70, 83, 101, 104, 106, 110, 113, 115, 116, 129, 131, 135, 136, 141, 145, 146, 166, 167, 169, 171, 176, 178, 190, 198, 199, 221, 234, 238, 250, 252, 272, 274, 346, 368, 400, 415, 459, 472, 490, 495, 528, 544], "anoth": [4, 85, 86, 110, 125, 135, 136, 160, 351, 372, 403, 410, 479], "answer": 417, "anti": [105, 146, 212, 490], "anyth": 113, "ap": 218, "apart": 513, "api": [0, 2, 3, 6, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 92, 94, 95, 96, 97, 101, 102, 104, 105, 110, 113, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 210, 212, 219, 220, 225, 226, 235, 236, 237, 238, 239, 250, 252, 253, 260, 346, 351, 396, 397, 398, 399, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 511, 514, 516, 520, 528, 530, 531, 535, 536], "appear": [123, 152, 153, 524], "append": [0, 6, 63, 100, 106, 114, 116, 123, 134, 135, 136, 186, 205, 212], "appli": [24, 33, 34, 35, 58, 72, 100, 115, 232, 267, 465, 474, 475, 493, 509, 513], "applic": [10, 113, 490], "apply_along_axi": [6, 547], "apply_over_ax": [6, 24], "approach": [110, 113, 134, 135, 136, 379], "appropri": [4, 33, 34, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 170, 234, 268, 269, 272, 274, 415, 443, 446, 474, 505, 544], "approxim": [147, 513], "ar": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 126, 127, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 168, 169, 171, 172, 173, 174, 175, 176, 179, 185, 187, 188, 191, 192, 193, 194, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 230, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 369, 370, 379, 391, 392, 393, 394, 395, 400, 401, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 438, 440, 441, 443, 446, 447, 449, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 474, 476, 477, 478, 481, 482, 483, 484, 485, 487, 488, 489, 492, 493, 495, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 509, 511, 513, 517, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534, 544, 551], "arang": [0, 6, 16, 33, 34, 36, 41, 55, 56, 57, 58, 60, 76, 84, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 115, 119, 121, 122, 124, 125, 128, 150, 151, 154, 159, 167, 168, 169, 171, 175, 177, 184, 185, 186, 201, 202, 203, 204, 212, 219, 220, 224, 232, 235, 237, 238, 241, 242, 246, 247, 248, 249, 250, 252, 253, 255, 259, 261, 263, 266, 354, 363, 395, 398, 400, 403, 405, 406, 410, 414, 439, 470, 472, 473, 475, 478, 480, 485, 496, 502, 509, 511, 513, 516, 517, 520, 521, 522, 526, 532, 534, 536], "arbitrari": [50, 109, 113, 115, 185, 253, 475, 516, 520], "arbitrarili": 115, "arc": [21, 28, 30, 48, 52], "arcco": [6, 14, 15, 27, 28, 30, 31, 48, 52, 53, 88], "arccosh": [6, 14, 15, 26, 29, 32, 49, 54, 89], "arcsin": [6, 14, 26, 29, 30, 31, 48, 49, 52, 53, 489], "arcsinh": [6, 15, 27, 28, 32, 48, 49, 54, 491], "arctan": [6, 14, 21, 26, 28, 31, 32, 48, 52, 53, 54, 507], "arctan2": [6, 21, 28, 30, 48, 52, 53], "arctanh": [6, 15, 27, 29, 30, 31, 49, 52, 53, 54, 508], "area": 513, "arg": [24, 68, 69, 110, 201, 361, 415], "arg1": 200, "arg2": 200, "argmax": [0, 6, 34, 110, 268, 411, 506, 544], "argmin": [6, 33, 110, 269, 506, 544], "argpartit": [6, 35, 411, 506, 544], "argsort": [6, 110, 402, 411, 484, 493, 506, 512, 544], "argument": [0, 10, 12, 13, 14, 15, 16, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 76, 78, 79, 84, 88, 89, 98, 99, 108, 109, 110, 113, 116, 120, 121, 122, 124, 127, 148, 154, 155, 156, 157, 158, 159, 168, 174, 179, 180, 183, 187, 199, 200, 203, 204, 205, 210, 212, 219, 223, 224, 225, 232, 235, 236, 241, 242, 243, 244, 245, 252, 253, 256, 262, 263, 264, 266, 361, 376, 389, 392, 393, 400, 404, 405, 406, 408, 410, 413, 414, 466, 467, 468, 470, 473, 475, 476, 477, 483, 487, 488, 489, 490, 491, 495, 500, 502, 507, 508, 509, 513, 522, 523, 531, 544, 551], "argwher": [6, 394], "ari": [41, 55, 56, 57, 111, 114, 177, 496, 532], "arithmet": [58, 169, 257, 258, 273, 276, 278, 404, 501, 503, 529, 537, 547], "around": [6, 110, 169, 400, 410, 465, 481], "arr": [23, 24, 44, 100, 103, 113, 176, 186, 412, 439, 464, 465, 517, 521, 526], "arr2": [113, 526], "arr_t": [51, 110, 346], "arrai": [0, 2, 3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 286, 343, 344, 345, 346, 347, 348, 351, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 547, 551], "array2str": 6, "array_equ": [6, 186], "array_equiv": [6, 39], "array_lik": [23, 38, 42, 43, 44, 45, 46, 47, 50, 58, 83, 85, 101, 104, 114, 125, 166, 167, 169, 186, 190, 198, 232, 238, 250, 391, 400, 403, 410, 411, 415, 480, 486, 492, 505, 509, 528], "array_of_diagon": 105, "array_repr": 6, "array_split": [6, 78, 79, 496], "array_str": 6, "array_util": 71, "arrays_and_dtyp": 475, "art": 10, "asanyarrai": [6, 43, 44, 47, 472], "asarrai": [4, 6, 42, 44, 45, 47, 50, 391, 472, 492], "asarray_chkfinit": [6, 42, 43], "ascend": [214, 216, 484], "ascii": 113, "ascontiguousarrai": [6, 42, 43, 44, 47, 472], "asfarrai": [42, 43], "asfortranarrai": [6, 42, 43, 44, 45, 472], "asin": [6, 28], "asinh": [6, 29], "asmatrix": 6, "asnumpi": 110, "aspect": 113, "assembl": [78, 79, 112, 178, 482, 500, 526, 533], "assert": 258, "assign": [110, 356, 379, 516, 520], "associ": [58, 175, 176, 544], "assum": [10, 58, 92, 116, 133, 139, 141, 212, 222, 226, 230, 252, 513], "astyp": [6, 86, 110, 169, 394], "atan": [6, 30], "atan2": [6, 31], "atanh": [6, 32], "atleast_1d": [6, 56, 57, 123], "atleast_2d": [6, 55, 57, 123], "atleast_3d": [6, 55, 56, 123], "atol": [18, 188], "attain": 0, "attempt": [109, 223], "attribut": [110, 113, 118, 147, 167, 182, 227, 398, 536, 537], "automat": [175, 176], "avail": [2, 3, 4, 10, 87, 91, 113, 120, 264, 268, 269, 272, 274, 275, 537, 544], "averag": [6, 24, 110, 257, 258, 273, 365, 503, 547], "avg": 58, "avoid": [38, 43, 56, 57, 133, 139, 141, 473], "aweight": 91, "ax": [17, 22, 24, 33, 34, 58, 90, 92, 93, 106, 109, 110, 115, 123, 129, 131, 132, 135, 136, 137, 140, 141, 143, 145, 151, 171, 185, 210, 220, 224, 229, 232, 233, 234, 235, 237, 251, 253, 254, 255, 257, 258, 261, 265, 268, 269, 272, 273, 274, 275, 276, 277, 278, 386, 389, 399, 400, 402, 407, 469, 474, 478, 479, 480, 499, 501, 503, 504, 509, 510, 511, 512, 524, 529, 531], "axi": [17, 19, 20, 22, 23, 24, 33, 34, 35, 41, 58, 77, 78, 79, 90, 92, 93, 94, 95, 96, 97, 100, 105, 106, 110, 111, 112, 114, 115, 123, 125, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 151, 152, 153, 157, 158, 163, 169, 171, 177, 178, 184, 186, 210, 218, 224, 232, 236, 237, 238, 250, 251, 253, 255, 256, 257, 258, 261, 262, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 341, 342, 343, 344, 345, 352, 353, 359, 364, 365, 366, 370, 371, 372, 375, 380, 381, 382, 383, 385, 387, 389, 390, 400, 401, 402, 403, 407, 409, 410, 411, 464, 469, 471, 473, 474, 478, 479, 480, 482, 485, 492, 493, 496, 499, 500, 501, 503, 504, 505, 506, 509, 510, 511, 512, 513, 524, 526, 527, 529, 531, 532, 533, 544], "axis1": [105, 110, 354, 386, 388, 504, 511], "axis2": [105, 110, 354, 386, 388, 504, 511], "axisa": 92, "axisb": 92, "axisc": 92, "axiserror": [35, 493], "b": [10, 16, 18, 23, 24, 33, 34, 39, 40, 61, 67, 77, 78, 79, 85, 92, 95, 96, 97, 109, 110, 112, 113, 115, 116, 119, 161, 162, 172, 173, 178, 185, 186, 188, 192, 202, 206, 207, 210, 211, 218, 219, 220, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 246, 248, 253, 254, 255, 258, 261, 393, 395, 399, 405, 406, 416, 475, 482, 495, 500, 509, 510, 518, 530, 531, 533, 551], "b_ax": [232, 509], "b_i": [236, 531], "back": [110, 163, 359, 464, 473, 474, 479, 518], "backend": [2, 170, 418, 420, 421, 431, 436, 452], "backward": [10, 51, 110, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 171, 346, 473, 478, 479], "bad": 427, "baltimor": 224, "bandlimit": 490, "bartlett": 6, "base": [0, 4, 59, 113, 115, 122, 125, 154, 169, 175, 176, 230, 240, 241, 242, 243, 244, 245, 250, 251, 253, 403, 405, 406, 410, 412, 531], "base_repr": [6, 59], "basic": [72, 115, 544, 547], "batch": 237, "bc": [211, 228], "bcde": 116, "becaus": [10, 17, 22, 133, 139, 141, 527, 544], "becom": [10, 110, 175, 389], "been": [112, 180, 411, 479, 506], "befor": [4, 23, 35, 78, 79, 93, 110, 114, 134, 135, 136, 152, 153, 186, 234, 251, 255, 261, 276, 278, 370, 381, 400, 407, 469, 478, 479, 493, 501, 503, 510, 529, 530], "before_1": 400, "before_n": 400, "begin": [114, 116, 169, 238, 250, 400, 485], "behav": [186, 239, 410], "behavior": [35, 110, 143, 235, 267, 351, 474, 493, 510], "behind": [110, 370], "being": [3, 86, 113, 157, 158, 256, 262, 400], "belong": [107, 175], "below": [0, 4, 9, 14, 26, 28, 29, 32, 48, 49, 54, 86, 101, 104, 113, 139, 212, 222, 224, 235, 514, 515, 519, 527, 544], "bessel": 180, "best": 116, "beta": [6, 426], "between": [18, 25, 41, 71, 72, 86, 106, 114, 147, 162, 165, 171, 185, 186, 188, 238, 250, 400, 432, 446, 495, 502, 513, 527], "beyond": [4, 478], "bia": 91, "big": 113, "bin": [59, 60, 107, 128, 130, 144, 175, 176, 453], "bin_edg": [175, 176], "binari": [59, 61, 62, 63, 64, 65, 66, 67, 161, 162, 164, 165, 187, 205, 476], "binary_repr": [6, 61, 62, 63, 64, 65, 66, 67, 187, 205, 476], "bincount": [6, 107, 175], "binomi": [6, 434], "bins_0": 176, "bins_1": 176, "bit": [59, 61, 62, 63, 64, 65, 66, 67, 113, 147, 182, 187, 205, 246, 248, 249, 275, 277, 476, 488, 537, 547], "bitwis": [61, 65, 67], "bitwise_and": [6, 62, 64, 65, 67, 187, 246], "bitwise_count": 6, "bitwise_invert": [6, 64, 187], "bitwise_left_shift": [6, 205], "bitwise_not": 6, "bitwise_or": [6, 61, 62, 64, 67, 187, 248], "bitwise_right_shift": [6, 476], "bitwise_xor": [6, 61, 62, 64, 65, 187, 249], "biufcmmosuv": 113, "blackman": 6, "block": [6, 78, 79, 112, 146, 178, 202, 482, 500, 526, 533], "bmat": 6, "bool": [9, 17, 18, 21, 22, 33, 34, 35, 38, 39, 40, 43, 46, 51, 58, 72, 85, 86, 90, 93, 96, 97, 100, 107, 110, 113, 116, 119, 146, 160, 169, 172, 173, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 220, 222, 224, 226, 230, 237, 238, 250, 251, 255, 257, 258, 259, 261, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 346, 394, 395, 407, 469, 473, 485, 488, 493, 501, 503, 505, 524, 528, 529, 544], "bool_": 9, "boolean": [61, 62, 64, 65, 67, 85, 93, 96, 97, 100, 113, 125, 154, 160, 180, 184, 187, 188, 191, 193, 194, 195, 196, 197, 201, 246, 248, 251, 252, 257, 258, 273, 275, 276, 278, 394, 403, 469, 501, 505, 529], "boolean_sequ": 201, "both": [10, 16, 18, 23, 31, 39, 40, 53, 58, 61, 63, 65, 66, 67, 76, 84, 92, 108, 109, 119, 135, 142, 154, 156, 157, 158, 159, 168, 172, 173, 174, 179, 185, 188, 202, 203, 204, 205, 206, 207, 219, 224, 232, 244, 245, 246, 248, 249, 253, 256, 262, 263, 266, 277, 393, 395, 405, 406, 470, 473, 476, 502, 509, 511, 516, 518, 520, 522, 530, 531, 534], "bound": [410, 411, 465, 484, 505, 506], "boundari": [171, 410, 465], "branch": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54], "briefli": 544, "broadcast": [16, 17, 22, 33, 34, 40, 58, 68, 69, 70, 76, 85, 90, 108, 115, 125, 154, 157, 158, 179, 195, 196, 219, 220, 224, 226, 237, 249, 251, 253, 255, 256, 257, 258, 261, 262, 266, 268, 269, 273, 275, 276, 277, 278, 405, 406, 407, 410, 411, 469, 471, 501, 502, 503, 506, 510, 522, 529, 531, 534], "broadcast_arrai": [6, 69, 70], "broadcast_shap": 6, "broadcast_to": [6, 68, 69, 510], "brought": 10, "buffer": [46, 94, 95, 96, 97, 110, 160, 161, 162, 164, 165, 239, 255, 261, 270, 271], "buffer_lik": 161, "buffererror": 160, "build": 547, "build_loc": 4, "built": [59, 113], "busday_count": 6, "busday_offset": 6, "byte": [6, 51, 71, 110, 113, 115, 161, 162, 239, 346, 362, 367], "byteord": 113, "byteswap": 6, "bz2": 239, "c": [2, 4, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 92, 97, 98, 99, 108, 109, 110, 113, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 148, 154, 155, 156, 157, 158, 159, 166, 167, 168, 170, 172, 173, 174, 179, 180, 183, 185, 187, 191, 192, 193, 194, 202, 203, 204, 205, 206, 207, 211, 218, 223, 224, 228, 232, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 256, 262, 263, 266, 346, 351, 359, 373, 376, 392, 393, 394, 395, 397, 398, 404, 405, 406, 408, 413, 414, 464, 465, 466, 468, 470, 472, 473, 474, 476, 477, 483, 487, 488, 489, 490, 491, 495, 497, 498, 502, 507, 508, 509, 510, 522, 523, 524, 525, 531, 534, 535, 536, 551], "c_contigu": [45, 47, 110, 351, 472], "ca": 82, "calcul": [10, 12, 13, 16, 21, 31, 53, 58, 92, 93, 95, 97, 106, 108, 114, 115, 119, 121, 122, 124, 128, 137, 154, 155, 156, 159, 171, 176, 179, 213, 214, 215, 216, 218, 224, 226, 242, 244, 245, 251, 253, 257, 258, 263, 266, 273, 276, 278, 395, 400, 405, 406, 407, 469, 470, 501, 502, 522, 529, 530, 537, 551], "call": [10, 21, 23, 31, 33, 34, 35, 45, 47, 53, 60, 113, 134, 135, 136, 139, 142, 163, 186, 213, 215, 223, 231, 252, 258, 286, 394, 499, 505, 510, 513, 551], "callabl": [163, 252], "cambridg": 10, "can": [0, 3, 4, 10, 16, 18, 23, 24, 25, 31, 38, 39, 40, 42, 43, 44, 45, 46, 47, 50, 51, 53, 58, 59, 61, 62, 63, 64, 65, 66, 67, 72, 83, 84, 86, 92, 101, 102, 104, 105, 108, 109, 110, 113, 115, 116, 117, 118, 119, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 144, 146, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 178, 179, 181, 184, 185, 187, 188, 190, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 217, 218, 221, 222, 224, 226, 232, 234, 235, 238, 239, 244, 245, 246, 248, 249, 250, 252, 253, 256, 260, 262, 263, 266, 275, 277, 346, 351, 379, 381, 392, 393, 394, 395, 396, 397, 398, 404, 405, 406, 411, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 464, 465, 470, 472, 473, 476, 495, 502, 505, 506, 509, 511, 513, 514, 516, 520, 521, 522, 524, 528, 530, 534, 535, 536, 544, 551], "can_cast": [6, 547], "cannot": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 78, 79, 268, 269, 473, 496, 499, 500], "capabl": [25, 38, 42, 43, 45, 47, 58, 127, 169, 238, 250, 253, 531], "cardin": 490, "cardinali": 490, "care": [25, 213], "cartesian": 259, "case": [4, 17, 22, 25, 33, 34, 38, 42, 43, 44, 45, 47, 58, 83, 92, 94, 95, 96, 97, 101, 104, 106, 110, 115, 116, 117, 118, 126, 130, 133, 138, 142, 144, 161, 162, 163, 164, 166, 167, 169, 171, 181, 213, 227, 230, 232, 238, 239, 245, 250, 260, 270, 271, 275, 277, 361, 396, 397, 398, 407, 464, 473, 474, 503, 509, 514, 527, 528, 535, 536, 544], "cast": [17, 22, 51, 72, 78, 79, 85, 93, 94, 95, 96, 97, 110, 115, 154, 178, 186, 213, 251, 253, 257, 258, 267, 270, 271, 273, 275, 276, 277, 278, 346, 407, 469, 482, 500, 501, 503, 529, 531, 533], "cat": [417, 434], "cauchi": 453, "cbrt": [6, 497], "cdef": 116, "cdot": [232, 236, 509, 531], "cdoubl": 9, "ceil": [6, 37, 148, 155, 156, 477, 481, 523], "center": [129, 130, 131, 132, 136, 137, 144], "central": [171, 435, 436], "certain": [113, 252], "ch": 10, "chain": [109, 110, 115, 116], "chang": [51, 83, 92, 110, 113, 115, 125, 270, 271, 346, 359, 384, 389, 392, 403, 404, 410, 411, 412, 464, 473, 474, 479, 527, 547], "char": 113, "charact": [113, 162], "check": [17, 22, 42, 43, 44, 72, 133, 190, 192, 198, 208, 226, 229, 544], "check_valid": 433, "chi": [419, 435], "chisquar": 6, "choic": [6, 75, 110, 128, 129, 131, 134, 135, 136, 140, 141, 143, 145, 214, 216, 347], "choicelist": 485, "choleski": 6, "choos": [6, 21, 28, 30, 48, 52, 110, 116, 485, 534, 544], "chosen": [36, 175, 524, 534], "chunk": 60, "circ": 551, "circl": [228, 513], "clamp": [410, 411, 505, 506], "clariti": 146, "class": [3, 4, 110, 113, 149, 161, 162, 163, 165, 184, 239, 415, 443, 514, 547], "classic": 115, "clear": [113, 204, 544], "clip": [6, 110, 410, 411, 465, 505, 506, 544], "close": [14, 15, 21, 26, 27, 28, 30, 48, 50, 51, 52, 110, 115, 123, 183, 238, 346, 415, 443, 466, 467, 477, 481, 513], "closer": 523, "cloud": 3, "cmake": 4, "co": [6, 14, 15, 26, 27, 28, 48, 89, 215, 489, 507, 513], "coars": [225, 399], "code": [46, 113, 200, 472], "codeplai": 4, "coeffici": [86, 218, 229, 234], "coerc": [46, 161, 162, 163, 164, 165, 239], "coin": 417, "col": 184, "collaps": [110, 359, 524], "column": [6, 42, 43, 44, 45, 47, 50, 51, 77, 78, 79, 86, 94, 95, 96, 97, 105, 110, 112, 126, 146, 152, 153, 171, 177, 178, 181, 213, 214, 218, 223, 227, 230, 346, 464, 465, 472, 482, 496, 500, 514, 516, 520, 525, 528, 533], "column_stack": [6, 78, 79, 112, 178, 482, 500, 533], "com": 4, "combin": [0, 113, 123, 131, 136, 141, 145, 171], "combinatori": 116, "come": 524, "comma": [113, 115], "command": 4, "common": [134, 135, 136, 168, 203, 232, 394, 509], "common_typ": 6, "compani": [417, 434], "compar": [18, 35, 39, 119, 157, 158, 176, 188, 225, 256, 262, 493], "comparison": [2, 119, 172, 173, 206, 207, 395, 537, 547], "compat": [3, 4, 10, 17, 22, 51, 58, 92, 94, 95, 96, 97, 105, 110, 210, 212, 219, 220, 225, 226, 235, 236, 237, 251, 253, 257, 258, 272, 273, 274, 276, 278, 346, 399, 469, 473, 501, 511, 529, 530, 531, 547], "compil": [4, 113, 170, 472], "complement": [59, 527], "complementari": [156, 527], "complet": [3, 4, 116, 162, 163, 227, 479, 544], "complex": [10, 12, 13, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 38, 39, 48, 49, 52, 53, 54, 72, 93, 109, 110, 113, 116, 120, 127, 128, 129, 131, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 147, 154, 157, 158, 183, 189, 190, 197, 198, 204, 213, 214, 215, 216, 219, 227, 228, 230, 236, 251, 253, 256, 262, 267, 276, 278, 349, 350, 408, 466, 467, 469, 494, 501, 524, 529, 530, 531, 544, 547], "complex128": [9, 58, 475], "complex64": [9, 58, 71, 110, 154, 380], "compliant": 110, "complic": [115, 551], "compon": [10, 39, 92, 132, 137, 144, 147, 183, 222, 232, 267, 466, 509], "compos": 84, "composit": [95, 97, 202, 503, 513], "compress": [6, 125, 485, 505, 544], "comput": [4, 10, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 58, 60, 61, 62, 64, 65, 67, 73, 80, 81, 86, 88, 89, 93, 94, 95, 96, 97, 106, 107, 115, 121, 122, 123, 124, 127, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 155, 171, 172, 173, 174, 175, 176, 183, 184, 187, 202, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 246, 247, 248, 249, 251, 253, 257, 258, 263, 270, 271, 272, 273, 274, 275, 276, 277, 278, 392, 399, 404, 408, 466, 468, 469, 470, 477, 481, 483, 487, 488, 489, 491, 497, 501, 503, 507, 508, 509, 513, 516, 520, 529, 531], "compute_uv": [209, 230, 231], "concat": [6, 79], "concaten": [6, 77, 78, 112, 178, 186, 482, 496, 500, 506, 526, 533], "concept": [25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 535, 536, 544], "cond": [6, 217], "condit": [36, 51, 109, 110, 125, 209, 217, 223, 346, 394, 403, 410, 412, 485, 534], "condlist": 485, "confus": 159, "conj": [6, 81, 110, 133, 183, 208, 213, 408], "conjug": [6, 10, 80, 109, 110, 139, 142, 183, 208, 213, 214, 215, 216, 219, 236, 253, 349, 408, 530, 531], "consecut": [106, 114, 171], "conserv": 259, "consid": [18, 25, 38, 39, 42, 43, 45, 47, 116, 144, 169, 188, 191, 214, 216, 222, 238, 250, 253, 415, 443, 474, 495, 524, 531], "consist": [39, 40, 114, 128, 129, 131, 134, 135, 136, 140, 141, 143, 145, 162, 176, 232, 234, 238, 506, 509], "constant": [9, 113, 171, 400], "constant_valu": 400, "constraint": 58, "construct": [42, 43, 44, 75, 101, 104, 105, 110, 113, 126, 161, 162, 163, 164, 165, 181, 201, 204, 239, 260, 347, 396, 485, 490, 510, 511, 534, 537], "constructor": 544, "consum": [110, 367], "contain": [10, 12, 13, 14, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 44, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 84, 85, 86, 88, 89, 92, 93, 105, 108, 110, 113, 119, 121, 122, 124, 129, 130, 131, 134, 139, 142, 144, 150, 154, 155, 156, 157, 158, 159, 160, 165, 170, 171, 172, 173, 175, 176, 179, 183, 184, 187, 205, 206, 207, 210, 212, 214, 227, 230, 232, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 256, 257, 262, 263, 266, 268, 269, 272, 273, 274, 276, 278, 376, 392, 394, 395, 402, 404, 405, 406, 408, 415, 466, 468, 469, 470, 476, 477, 481, 483, 487, 488, 489, 490, 491, 497, 498, 501, 502, 507, 508, 509, 512, 516, 517, 520, 521, 522, 523, 529, 544], "content": [45, 110, 258, 452], "context": 10, "contigu": [42, 43, 44, 45, 47, 71, 109, 110, 115, 192, 223, 373, 464, 472, 473], "continu": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 415, 447, 490], "contourf": 259, "contract": [115, 116, 232, 509], "contrari": [210, 212, 219, 235, 236], "contrast": [115, 410], "contribut": [10, 58, 175, 176], "control": [4, 51, 72, 78, 79, 85, 110, 115, 178, 253, 346, 482, 500, 531, 533], "conveni": [110, 389, 415], "convent": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 109, 115, 116, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 185, 219, 232, 234, 253, 399, 509, 531], "convers": [51, 110, 115, 346, 537], "convert": [23, 33, 34, 38, 42, 43, 44, 45, 46, 47, 50, 55, 56, 57, 83, 98, 99, 101, 104, 113, 115, 116, 123, 166, 167, 169, 186, 190, 198, 238, 250, 413, 414, 465, 472, 525, 527, 528], "convolut": [10, 82, 87], "convolv": [6, 87], "coolei": 10, "coordin": [90, 163, 171, 184, 201, 259, 465, 525], "copi": [6, 23, 25, 35, 38, 39, 42, 43, 44, 45, 46, 47, 51, 55, 56, 57, 85, 100, 101, 102, 104, 105, 110, 113, 117, 118, 125, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 186, 238, 239, 250, 252, 258, 259, 260, 267, 286, 346, 359, 361, 370, 376, 379, 396, 397, 398, 401, 403, 404, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 464, 472, 473, 474, 484, 493, 499, 514, 515, 516, 519, 520, 528, 535, 536, 544], "copysign": [6, 392, 404], "copyto": [6, 110, 125, 351, 403], "core": [3, 115, 531, 544], "corner": [129, 131, 135, 136, 400], "corrcoef": [6, 91], "correct": [12, 13, 14, 15, 16, 21, 23, 26, 27, 28, 29, 30, 31, 32, 36, 37, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 78, 79, 80, 81, 84, 88, 89, 98, 99, 108, 119, 121, 122, 124, 127, 133, 139, 141, 148, 154, 155, 156, 157, 158, 159, 168, 172, 173, 174, 179, 180, 183, 187, 191, 193, 194, 203, 204, 205, 206, 207, 229, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 256, 262, 263, 266, 392, 393, 395, 404, 405, 406, 408, 413, 414, 466, 468, 470, 472, 476, 477, 481, 483, 487, 488, 489, 490, 491, 495, 497, 498, 500, 502, 507, 508, 522, 523], "correctli": [21, 28, 30, 33, 34, 48, 52, 90, 220, 224, 237, 255, 261, 268, 269, 275, 277, 394, 407, 503], "correl": [6, 86, 547], "correspond": [6, 10, 25, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 51, 76, 78, 79, 83, 98, 99, 101, 102, 104, 105, 110, 111, 117, 118, 126, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 177, 181, 184, 201, 210, 213, 214, 232, 236, 238, 239, 250, 252, 253, 260, 346, 351, 355, 396, 397, 398, 402, 413, 414, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 478, 485, 486, 496, 501, 509, 512, 513, 514, 516, 520, 528, 529, 531, 532, 535, 536, 544], "correspondingli": [10, 496], "cosh": [6, 15, 27, 88, 491, 508], "cosin": [14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 489, 491, 507, 508], "cost": [115, 116], "costli": 116, "could": [110, 133, 139, 141, 381], "count": [17, 22, 60, 90, 107, 113, 116, 151, 161, 162, 164, 165, 171, 175, 176, 394, 407, 417, 492, 503, 524, 537, 547], "count_nonzero": [6, 394], "counterclockwis": [152, 153, 480], "counterpart": [10, 133, 139, 141, 544], "cov": [6, 86, 433], "covari": [86, 91], "cover": [516, 520, 547], "cpu": [4, 25, 38, 42, 43, 44, 45, 47, 83, 87, 91, 101, 104, 117, 118, 120, 126, 130, 144, 161, 162, 163, 164, 166, 167, 169, 181, 238, 239, 250, 260, 264, 275, 396, 397, 398, 514, 528, 535, 536], "creat": [3, 4, 25, 38, 40, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 103, 104, 105, 110, 113, 116, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 267, 346, 351, 396, 397, 398, 400, 411, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 511, 514, 516, 517, 520, 521, 528, 535, 536, 544, 547], "creation": [113, 116, 537, 544, 547, 551], "crop": [128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145], "cross": [6, 87, 201], "csingl": 9, "ct": 10, "ctype": 472, "cube": [73, 154, 497], "cubic": 116, "cuda": 4, "cumprod": [6, 96, 110, 270, 544], "cumsum": [6, 97, 106, 110, 271, 503, 513, 544], "cumul": [93, 94, 95, 96, 97, 106, 110, 270, 271, 352, 353, 503, 513], "cumulative_prod": [6, 94], "cumulative_sum": [6, 95], "cupi": [2, 537], "current": [10, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 84, 88, 89, 98, 99, 108, 110, 113, 116, 121, 122, 124, 127, 148, 154, 155, 156, 157, 158, 159, 162, 168, 174, 176, 179, 181, 187, 203, 204, 205, 241, 242, 243, 244, 245, 256, 262, 263, 264, 266, 379, 392, 393, 400, 404, 405, 406, 408, 413, 414, 468, 470, 472, 476, 477, 483, 487, 488, 489, 491, 495, 502, 507, 508, 522, 523], "curv": 513, "custom": 544, "customarili": 10, "cut": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 218, 531], "cutoff": 226, "cycl": [130, 144, 201, 474], "cyclic": 410, "cython": 4, "d": [0, 17, 22, 24, 25, 58, 77, 78, 79, 86, 94, 95, 101, 102, 103, 104, 105, 109, 110, 112, 113, 126, 130, 132, 137, 144, 146, 150, 152, 153, 165, 177, 178, 181, 185, 201, 211, 212, 214, 215, 219, 223, 224, 228, 232, 235, 253, 259, 270, 271, 277, 359, 394, 405, 406, 407, 410, 420, 464, 473, 482, 484, 486, 500, 503, 505, 509, 510, 511, 518, 524, 528, 531, 533, 544], "d0": [415, 442, 444], "d1": [415, 444], "d3": 102, "data": [1, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 98, 99, 101, 104, 107, 108, 109, 110, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 133, 139, 141, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 191, 193, 194, 195, 196, 198, 203, 204, 205, 206, 207, 212, 218, 225, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 262, 263, 264, 266, 267, 268, 269, 272, 273, 274, 275, 276, 278, 346, 376, 389, 391, 392, 393, 395, 397, 398, 403, 404, 405, 406, 408, 410, 411, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 495, 497, 498, 499, 500, 501, 502, 506, 507, 508, 511, 514, 522, 523, 529, 531, 533, 534, 535, 536, 537, 547], "datatyp": [113, 222], "date": 4, "datetim": 113, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [91, 110, 276, 278, 383, 390, 501, 529], "decai": 428, "decim": [37, 59, 110, 147, 148, 377, 477, 481], "decomposit": [208, 217, 222, 226, 230, 231, 547], "decompress": 239, "decreas": [107, 513], "decreasingli": [10, 129, 131, 135, 136], "deem": 160, "def": [0, 24, 400], "default": [3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 186, 187, 188, 191, 193, 194, 195, 196, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 220, 222, 223, 224, 226, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 351, 359, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 419, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 454, 456, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 544], "default_rng": 6, "defg": 116, "defici": 222, "defin": [10, 31, 53, 92, 100, 113, 118, 128, 157, 158, 167, 174, 175, 176, 186, 210, 212, 224, 236, 256, 262, 267, 398, 404, 467, 480, 531, 536, 544], "definit": [92, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 155, 208, 513], "deg": [21, 414], "deg2rad": [6, 413, 414, 527], "degre": [6, 21, 98, 276, 278, 413, 414, 457, 480, 501, 527, 529, 551], "del": 551, "delet": [6, 23, 186], "delta": [10, 276, 278, 501, 527, 529], "demonstr": [0, 4, 113], "denot": [180, 236, 531], "dens": [184, 201, 260], "densiti": 175, "depend": [4, 36, 105, 127, 133, 139, 141, 212, 214, 218, 224, 227, 229, 230, 238, 275, 277, 485, 534], "depth": [77, 78, 79, 111, 112, 178, 482, 496, 500, 533], "deriv": 171, "descend": 230, "descr": 113, "describ": [93, 113, 224, 235, 251, 469, 547], "descript": [93, 113, 134, 136, 175, 251, 469, 544], "design": [10, 59], "desir": [25, 38, 42, 43, 45, 47, 50, 70, 117, 118, 126, 134, 135, 136, 166, 167, 169, 181, 238, 250, 397, 398, 464, 510, 514, 535, 536], "destin": [78, 79, 178, 265, 410, 411, 482, 500, 506, 533], "destruct": 551, "det": [6, 228], "detail": [37, 129, 131, 135, 136, 140, 141, 143, 145, 160, 220, 237, 481, 516, 517, 520, 521, 524, 544], "determin": [14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 63, 65, 66, 67, 73, 84, 88, 89, 98, 99, 108, 121, 122, 124, 156, 157, 158, 159, 162, 163, 165, 179, 205, 211, 212, 218, 227, 228, 235, 240, 241, 242, 243, 244, 245, 253, 256, 262, 263, 266, 393, 405, 406, 413, 414, 465, 468, 470, 476, 483, 485, 487, 489, 490, 491, 495, 497, 498, 502, 507, 508, 511, 522, 523, 525, 531], "devel": 4, "develop": [3, 4], "deviat": [110, 257, 273, 276, 278, 383, 415, 430, 437, 501, 529], "devic": [0, 2, 3, 25, 38, 42, 43, 44, 45, 46, 47, 51, 58, 83, 93, 101, 102, 104, 110, 115, 117, 118, 126, 127, 130, 144, 148, 160, 161, 162, 163, 164, 165, 166, 167, 169, 180, 181, 184, 238, 239, 250, 251, 252, 253, 257, 258, 260, 273, 276, 278, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 469, 499, 501, 514, 516, 520, 528, 529, 531, 535, 536], "df": [419, 435, 457, 458], "dfden": [423, 436], "dfnum": [423, 436], "dft": [10, 128, 133, 134, 138, 139, 142], "di": [102, 103], "diag": [6, 24, 104, 105, 115, 126, 152, 153, 181, 213, 215, 230, 485, 511], "diag_indic": [6, 103, 146], "diag_indices_from": [6, 102, 146], "diagflat": [6, 101, 105, 511], "diagon": [6, 101, 102, 103, 104, 110, 115, 126, 146, 181, 208, 214, 215, 216, 235, 252, 388, 485, 511, 514, 515, 516, 517, 519, 520, 521, 544], "dice": 432, "dict": [113, 400], "dictionari": 113, "diff": [6, 95, 97, 114, 171, 175], "differ": [3, 10, 18, 25, 38, 41, 42, 43, 44, 45, 47, 58, 83, 93, 95, 96, 97, 101, 104, 106, 110, 113, 114, 117, 118, 126, 129, 130, 134, 135, 137, 140, 143, 144, 147, 152, 153, 154, 161, 162, 163, 164, 166, 167, 169, 171, 181, 186, 188, 216, 224, 235, 238, 239, 250, 251, 253, 260, 351, 396, 397, 398, 403, 405, 406, 411, 469, 474, 480, 502, 506, 514, 516, 520, 527, 528, 535, 536, 547], "differenti": 490, "digit": [6, 10, 60, 147, 175], "dim": [18, 465], "dimens": [17, 22, 23, 24, 33, 34, 38, 55, 56, 57, 58, 77, 78, 79, 85, 90, 91, 92, 96, 97, 102, 105, 106, 110, 111, 113, 123, 135, 136, 148, 152, 153, 171, 178, 184, 185, 201, 210, 212, 220, 222, 224, 227, 231, 232, 235, 236, 237, 251, 254, 255, 257, 258, 259, 260, 261, 265, 268, 269, 272, 273, 274, 275, 276, 277, 278, 359, 363, 368, 379, 391, 394, 396, 407, 411, 415, 445, 447, 448, 450, 464, 465, 469, 473, 480, 486, 496, 499, 500, 501, 503, 504, 505, 506, 509, 510, 511, 516, 517, 520, 521, 524, 525, 526, 529, 531, 532, 544, 547], "dimension": [2, 4, 24, 35, 60, 82, 87, 90, 93, 96, 97, 100, 102, 103, 104, 105, 106, 107, 110, 114, 115, 128, 129, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 161, 162, 164, 171, 177, 184, 186, 201, 210, 218, 225, 227, 233, 234, 251, 255, 259, 260, 261, 268, 269, 272, 274, 276, 278, 382, 391, 396, 399, 407, 469, 493, 501, 503, 505, 510, 513, 524, 529, 530, 532, 537], "direct": [10, 92, 106, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 152, 153, 171, 210, 393, 480], "directli": [113, 163, 184, 250, 394, 506], "directori": 170, "dirichlet": 6, "discard": 523, "discont": 527, "discontinu": 527, "discret": [3, 82, 87, 95, 97, 106, 114, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 171, 415, 490, 537, 547], "dispers": 460, "displac": [110, 384], "disregard": 474, "distanc": [171, 495], "distinct": [157, 158, 256, 262, 474], "distinguish": 113, "distribut": [3, 4, 250, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 547], "divid": [6, 41, 111, 112, 156, 159, 177, 263, 470, 496, 522, 532], "divis": [108, 156, 159, 263, 405, 406, 470, 496, 522, 523], "divisor": [168, 203, 276, 278, 501, 529], "divmod": [6, 544], "dlpack": 160, "dmlc": 160, "dn": [415, 442, 444], "do": [3, 4, 113, 252, 258, 417, 479, 513], "docstr": 544, "document": [0, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 359, 360, 361, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 544], "doe": [23, 25, 41, 72, 100, 110, 115, 125, 127, 142, 157, 158, 160, 186, 227, 267, 270, 271, 361, 403, 474, 496, 505], "domain": [10, 133, 138], "done": [3, 51, 110, 115, 234, 346, 524, 527], "dot": [6, 110, 115, 116, 185, 208, 215, 217, 223, 226, 227, 229, 230, 232, 233, 234, 236, 253, 509, 530, 531], "doubl": [9, 232, 428, 509], "down": 153, "dp": [108, 211, 214, 228, 229, 405, 406, 502, 522], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 268, 269, 272, 274, 275, 346, 351, 396, 397, 398, 409, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 535, 536], "dpnp": [0, 2, 3, 4, 10, 537, 544, 547, 548, 551], "dpnp_arrai": [25, 38, 42, 43, 44, 45, 47, 51, 83, 101, 102, 104, 117, 118, 126, 130, 144, 147, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 182, 184, 238, 239, 250, 252, 260, 279, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 535, 536, 537], "dpnp_iface_arraycr": [260, 396], "draw": [415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "drawn": [415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 438, 440, 441, 443, 446, 449, 455, 456, 457, 458, 459, 460, 461, 462, 463, 485], "drill": [417, 434], "driver": 2, "drop": [3, 113], "dsplit": [6, 78, 79, 112, 496], "dst": 85, "dstack": [6, 77, 78, 79, 178, 482, 496, 500, 533], "dt": [113, 513], "dt2": 113, "dtype": [0, 9, 12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 78, 79, 80, 81, 84, 86, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 108, 110, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 181, 182, 184, 186, 187, 191, 193, 194, 195, 196, 203, 204, 205, 206, 207, 223, 226, 230, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 352, 353, 365, 371, 380, 383, 385, 388, 390, 392, 393, 395, 397, 398, 404, 405, 406, 407, 408, 413, 414, 415, 437, 443, 459, 468, 469, 470, 472, 475, 476, 477, 481, 482, 483, 487, 488, 489, 490, 491, 494, 495, 497, 498, 500, 501, 502, 503, 505, 507, 508, 511, 514, 515, 519, 522, 523, 529, 531, 532, 533, 535, 536, 544], "due": [142, 551], "dump": 6, "dx": [171, 513], "dy": 171, "dz": 171, "e": [9, 10, 15, 27, 29, 49, 63, 93, 94, 96, 105, 113, 117, 118, 123, 126, 129, 133, 134, 135, 136, 139, 141, 142, 154, 162, 166, 167, 171, 181, 205, 213, 228, 233, 237, 240, 258, 397, 398, 415, 467, 471, 474, 504, 514, 526, 535, 536], "ea": 116, "each": [0, 12, 13, 14, 15, 16, 21, 24, 26, 27, 28, 29, 30, 31, 32, 41, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 80, 81, 84, 86, 88, 89, 94, 95, 96, 97, 102, 105, 107, 108, 110, 111, 113, 116, 119, 121, 122, 124, 129, 131, 133, 135, 136, 139, 140, 141, 143, 145, 152, 153, 154, 155, 156, 159, 163, 171, 172, 173, 175, 176, 177, 180, 183, 187, 191, 193, 194, 201, 205, 206, 207, 210, 213, 214, 215, 216, 218, 231, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 263, 265, 266, 267, 377, 392, 394, 395, 400, 404, 405, 406, 408, 411, 417, 434, 465, 466, 468, 470, 471, 474, 476, 477, 478, 481, 483, 487, 488, 489, 491, 496, 497, 498, 500, 502, 506, 507, 508, 510, 513, 516, 517, 520, 521, 522, 523, 524, 525, 531, 532, 544], "easier": 505, "easiest": [4, 400], "easili": [0, 176], "edg": [76, 107, 175, 176, 400], "edge_ord": 171, "ediff1d": [6, 106, 171], "effect": [116, 154, 157, 158, 256, 262, 405, 406, 527], "effici": [10, 128, 142, 162, 222, 226, 230], "efgh": 116, "eig": [6, 214, 215, 216], "eigenvalu": [213, 214, 215, 216, 547], "eigenvector": [213, 214, 215, 216], "eigh": [6, 213, 215, 216], "eight": 224, "eigval": [6, 213, 214, 216], "eigvalsh": [6, 213, 214, 215], "einstein": [109, 115, 116, 185, 232, 234, 253, 399, 509, 531], "einsum": [6, 109, 116, 185, 232, 234, 253, 399, 509, 531], "einsum_path": [6, 115], "either": [39, 40, 47, 58, 92, 93, 105, 113, 129, 131, 133, 135, 136, 139, 141, 143, 145, 146, 171, 180, 185, 212, 214, 216, 224, 227, 251, 268, 269, 272, 274, 275, 277, 465, 469, 474, 484, 485, 506, 513], "element": [4, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 44, 48, 49, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 84, 85, 88, 89, 93, 94, 95, 96, 97, 100, 103, 105, 106, 107, 108, 110, 113, 114, 116, 119, 121, 122, 124, 125, 126, 127, 129, 131, 135, 136, 140, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 171, 172, 173, 174, 175, 176, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 204, 205, 206, 207, 208, 210, 212, 215, 221, 232, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 259, 261, 262, 263, 264, 266, 267, 270, 271, 272, 274, 275, 276, 277, 278, 341, 342, 349, 350, 352, 353, 355, 356, 359, 361, 362, 365, 367, 369, 370, 375, 376, 377, 378, 380, 383, 384, 387, 390, 392, 393, 394, 395, 403, 404, 405, 406, 407, 408, 410, 412, 464, 466, 467, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 501, 502, 503, 505, 507, 508, 509, 510, 511, 513, 515, 517, 519, 521, 522, 523, 524, 525, 527, 529, 531, 534, 544, 547, 551], "element_count": [110, 380, 492], "elimin": 24, "ellipsi": 115, "els": [0, 113, 228, 284], "elsewher": [126, 181, 514, 534], "empti": [4, 6, 38, 110, 118, 129, 131, 135, 136, 140, 141, 143, 145, 162, 166, 167, 218, 356, 397, 398, 400, 403, 496, 535, 536, 544], "empty_lik": [6, 38, 117, 167, 398, 536], "enabl": [146, 222, 226, 230], "encount": [270, 271, 272, 274, 485], "end": [23, 25, 71, 100, 105, 113, 114, 116, 134, 169, 186, 238, 250, 400], "end_tim": 0, "end_valu": 400, "endian": 113, "endpoint": [25, 169, 238, 250, 513], "engin": 451, "enlarg": 474, "enough": 175, "ensur": 472, "entir": [58, 93, 133, 175, 176, 251, 257, 272, 273, 274, 276, 278, 400, 469, 501, 529], "entiti": 474, "entri": [41, 100, 110, 111, 113, 117, 125, 133, 139, 141, 146, 151, 152, 153, 177, 382, 496, 499, 531, 532], "enumer": 160, "env": 4, "environ": 4, "ep": [147, 222, 226, 393, 467, 495], "epsilon": [222, 467], "epsneg": 147, "equal": [6, 17, 18, 22, 24, 35, 39, 40, 41, 58, 60, 63, 66, 78, 79, 87, 91, 95, 97, 110, 111, 126, 169, 171, 172, 173, 175, 176, 177, 178, 188, 190, 198, 200, 205, 206, 207, 212, 221, 226, 227, 234, 238, 250, 263, 370, 395, 400, 415, 425, 459, 470, 476, 477, 481, 482, 487, 490, 493, 496, 499, 500, 514, 516, 520, 526, 532, 533], "equal_nan": [18, 39, 188, 524], "equat": [218, 229, 233, 234, 547], "equiv": [51, 72, 78, 79, 85, 110, 115, 178, 221, 253, 346, 482, 500, 531, 533], "equival": [10, 16, 17, 19, 20, 22, 24, 33, 34, 35, 37, 40, 58, 59, 83, 92, 93, 98, 99, 100, 108, 109, 110, 111, 112, 116, 123, 125, 150, 157, 158, 159, 177, 201, 231, 232, 233, 237, 251, 254, 263, 266, 286, 341, 342, 354, 368, 376, 379, 389, 391, 394, 399, 402, 404, 413, 414, 415, 443, 469, 470, 473, 480, 481, 486, 493, 502, 503, 505, 509, 512, 522, 524, 526, 531, 532, 544, 551], "error": [59, 93, 111, 115, 120, 133, 138, 177, 213, 251, 465, 469, 496, 499, 532, 537, 544], "essenti": 4, "estim": [91, 176, 417, 434, 513], "et": 10, "etc": [10, 38, 43, 113, 129, 131, 135, 136, 140, 141, 143, 145, 434], "euclidean": 218, "euler_gamma": 9, "evalu": [17, 18, 22, 110, 115, 116, 119, 180, 190, 192, 198, 232, 234, 259, 341, 342, 399, 485, 509], "even": [10, 110, 113, 130, 132, 133, 134, 137, 138, 139, 141, 142, 144, 190, 192, 198, 258, 363, 400, 477, 481], "evenli": [25, 169, 238, 250, 477, 513], "event": 245, "everi": [59, 71, 141, 411, 506], "everywher": [139, 490], "exact": [125, 223, 403], "exactli": [10, 50, 165, 415, 443, 485], "examin": 218, "exampl": [2, 3, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 351, 354, 356, 359, 360, 361, 363, 368, 370, 374, 376, 379, 380, 381, 384, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 544, 551], "exce": [245, 496], "except": [4, 12, 13, 14, 15, 16, 17, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 78, 79, 80, 81, 83, 84, 88, 89, 98, 99, 106, 107, 108, 109, 110, 117, 118, 119, 121, 122, 124, 126, 127, 140, 141, 148, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 177, 178, 179, 181, 187, 191, 193, 194, 203, 204, 205, 206, 207, 223, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 255, 256, 257, 261, 262, 263, 266, 272, 273, 274, 275, 276, 277, 278, 346, 361, 392, 393, 395, 397, 398, 404, 405, 406, 407, 408, 413, 414, 464, 468, 470, 471, 472, 476, 477, 483, 487, 488, 489, 491, 493, 495, 496, 497, 498, 501, 502, 503, 507, 508, 522, 523, 529, 531, 535, 536, 547], "exclud": [12, 13, 23, 238, 415, 459], "exclus": [415, 443], "execut": [3, 4, 24, 42, 43, 44, 87, 91, 120, 163, 264, 275, 418, 420, 421, 431, 436, 452, 551], "executor": 0, "exist": [10, 77, 78, 79, 112, 113, 123, 160, 178, 186, 482, 496, 500, 526, 533, 547], "exp": [6, 10, 122, 124, 128, 228, 242, 244, 251], "exp2": [6, 121, 124], "expand": [106, 123], "expand_dim": [6, 33, 34], "expect": [4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 80, 81, 84, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 108, 109, 113, 119, 121, 122, 124, 127, 139, 148, 154, 155, 156, 157, 158, 159, 168, 172, 173, 174, 179, 180, 183, 187, 188, 191, 193, 194, 203, 204, 205, 206, 207, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 258, 261, 262, 263, 266, 270, 271, 273, 275, 276, 277, 278, 392, 393, 395, 404, 405, 406, 407, 408, 413, 414, 466, 468, 469, 470, 476, 477, 481, 483, 487, 488, 489, 490, 491, 495, 497, 498, 501, 502, 503, 507, 508, 522, 523, 529, 534], "explain": [131, 136, 141, 145, 544], "explan": 113, "explicit": 115, "explicitli": [105, 129, 131, 135, 136, 140, 141, 143, 145], "exploit": [10, 142], "explor": [116, 417, 434], "expm1": [6, 121, 122, 242], "expon": [10, 121, 122, 124, 154, 204, 221, 244, 245, 251, 405, 406, 441, 547], "exponenti": [6, 10, 116, 244, 245, 251, 428, 454], "expos": [161, 544], "express": [10, 14, 15, 24, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 115, 116, 204, 239, 551], "extend": [10, 113, 202, 400, 544], "extens": [0, 1, 3, 4, 9, 170, 239, 537], "extra": [113, 139, 165], "extract": [6, 101, 104, 105, 115, 126, 150, 181, 184, 252, 403, 485, 505, 511], "extrapol": 474, "extrema": 547, "ey": [6, 71, 80, 81, 90, 110, 135, 136, 157, 158, 181, 185, 202, 217, 221, 222, 233, 234, 235, 249, 256, 262, 486, 511], "f": [0, 6, 10, 12, 13, 14, 15, 16, 21, 24, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 98, 99, 108, 110, 113, 115, 117, 118, 119, 121, 122, 124, 126, 127, 130, 142, 144, 148, 154, 155, 156, 157, 158, 159, 166, 167, 168, 171, 172, 173, 174, 179, 180, 183, 187, 191, 192, 193, 194, 203, 204, 205, 206, 207, 221, 224, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 256, 262, 263, 266, 346, 351, 359, 392, 393, 395, 397, 398, 404, 405, 406, 408, 413, 414, 436, 464, 465, 466, 468, 470, 472, 473, 476, 477, 483, 487, 488, 489, 490, 491, 495, 497, 498, 502, 507, 508, 518, 522, 523, 525, 531, 534, 535, 536], "f0": 113, "f1": 113, "f2": 113, "f4": 72, "f8": [72, 113], "f_contigu": [45, 47, 192, 472], "f_k": 10, "fab": [6, 12, 13], "fact": 215, "factor": [10, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 208, 227], "fail": [110, 379, 417], "fallback": [213, 215, 418, 420, 421, 431, 436, 452], "fals": [17, 18, 19, 20, 21, 22, 33, 34, 35, 38, 39, 40, 43, 45, 47, 51, 58, 61, 62, 64, 67, 68, 70, 72, 83, 86, 90, 91, 93, 95, 96, 97, 100, 107, 110, 113, 115, 116, 118, 119, 125, 146, 160, 163, 167, 169, 172, 173, 175, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 206, 207, 208, 209, 220, 222, 224, 226, 230, 231, 237, 238, 246, 247, 248, 249, 250, 251, 255, 257, 258, 259, 261, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 284, 341, 342, 343, 344, 346, 364, 365, 366, 371, 383, 385, 390, 394, 395, 398, 407, 409, 469, 472, 473, 485, 488, 493, 501, 503, 524, 528, 529, 534, 536], "famili": 10, "fanci": 505, "fashion": [245, 544], "fast": [10, 128, 129, 131, 135, 136, 141, 142, 145], "faster": [10, 24, 59, 157, 158], "fastest": [110, 192, 359, 464, 473], "fb": [116, 518], "featur": 113, "fetch": 473, "few": 146, "fft": [6, 547], "fft2": [6, 128, 131, 135], "fftfreq": [6, 10, 128, 132, 137, 144], "fftn": [6, 128, 129, 136, 142, 145], "fftshift": [6, 10, 129, 131, 136, 137], "fh": 162, "field": [113, 259], "field1": 113, "file": [161, 162, 164, 165, 170, 239], "filenam": [162, 239], "fill": [6, 23, 38, 110, 117, 118, 146, 166, 167, 175, 176, 259, 267, 351, 397, 398, 474, 514, 535, 536], "fill_diagon": 6, "fill_valu": [166, 167], "filt": 518, "filter": [10, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 490, 514, 516, 520, 528, 535, 536], "final": [4, 10, 86, 141, 142, 143, 145, 169, 250], "find": [36, 60, 86, 107, 110, 127, 175, 222, 226, 230, 378, 393, 394, 471, 484, 493, 495, 524, 547], "fine": 4, "finfo": [226, 393, 467, 495], "finfo_object": 147, "finit": [44, 191, 193, 194, 195, 196, 267, 495], "first": [16, 17, 18, 22, 24, 31, 33, 34, 35, 39, 40, 53, 58, 61, 63, 65, 66, 67, 71, 77, 78, 79, 84, 86, 92, 93, 96, 97, 105, 108, 109, 110, 113, 116, 119, 122, 129, 131, 133, 135, 136, 151, 154, 156, 157, 158, 159, 168, 171, 172, 173, 175, 176, 177, 179, 180, 185, 186, 188, 192, 200, 202, 203, 205, 206, 207, 210, 212, 219, 223, 232, 233, 235, 236, 239, 244, 245, 246, 248, 249, 252, 253, 255, 256, 258, 259, 261, 262, 263, 266, 268, 269, 359, 395, 399, 400, 403, 405, 406, 407, 464, 470, 473, 476, 478, 480, 482, 484, 485, 493, 494, 498, 502, 503, 504, 506, 509, 511, 522, 524, 526, 530, 531, 532, 533], "fit": [218, 471], "fix": [6, 37, 74, 105, 113, 155, 410, 477, 481, 523], "flag": [45, 47, 110, 113, 192, 351, 472], "flanneri": 10, "flat": [33, 34, 110, 114, 149, 359, 361, 464, 465, 471, 525], "flatnonzero": [6, 394], "flatten": [6, 23, 33, 34, 35, 78, 79, 90, 94, 95, 100, 101, 104, 105, 110, 114, 146, 150, 175, 176, 186, 237, 255, 258, 261, 268, 269, 270, 271, 275, 277, 358, 373, 381, 394, 399, 411, 464, 465, 471, 478, 493, 505, 506, 511, 524, 525, 530], "flexibl": [109, 113, 162, 223], "flip": [6, 62, 64, 105, 146, 152, 153, 187, 212, 417, 480], "fliplr": [6, 105, 146, 151, 153, 212, 480], "flipud": [6, 105, 146, 151, 152, 212, 480], "float": [12, 13, 21, 25, 31, 42, 43, 46, 53, 58, 72, 84, 93, 113, 117, 118, 122, 126, 127, 130, 144, 147, 148, 154, 161, 162, 163, 164, 165, 166, 167, 168, 171, 175, 176, 180, 181, 183, 204, 218, 221, 222, 224, 226, 237, 238, 239, 244, 245, 250, 251, 255, 257, 258, 261, 267, 273, 276, 278, 393, 397, 398, 405, 406, 415, 419, 444, 445, 447, 448, 450, 453, 454, 456, 459, 466, 467, 468, 469, 483, 490, 501, 514, 527, 529, 535, 536, 544, 547], "float16": [9, 154], "float32": [0, 9, 44, 46, 51, 60, 72, 86, 94, 95, 96, 97, 110, 113, 115, 154, 346, 393, 415, 437, 442, 444, 445, 447, 448, 450, 456, 459, 472, 475], "float64": [0, 9, 46, 51, 58, 72, 110, 113, 115, 346, 415, 416, 422, 423, 424, 426, 428, 429, 430, 437, 438, 441, 442, 444, 445, 447, 448, 449, 450, 455, 456, 457, 458, 459, 460, 461, 462, 463, 467, 475, 490, 495, 532], "float_pow": [6, 405, 406], "floor": [6, 37, 74, 148, 156, 263, 470, 477, 481, 523], "floor_divid": [6, 263, 470], "flop": 116, "flush": 162, "fmax": [6, 158, 255, 256, 262, 272, 405, 406], "fmin": [6, 157, 256, 261, 262, 274, 405, 406], "fmod": [6, 263, 405, 406, 470], "fn": 163, "fname": 239, "follow": [4, 10, 24, 58, 113, 123, 139, 147, 160, 182, 214, 216, 224, 226, 232, 400, 472, 509, 544, 547], "forc": [113, 115], "forg": 4, "form": [10, 23, 38, 42, 43, 44, 45, 46, 47, 59, 77, 83, 101, 104, 110, 112, 115, 116, 135, 136, 139, 166, 167, 169, 190, 198, 201, 212, 220, 231, 235, 238, 250, 254, 389, 400, 474, 482, 528, 533], "format": [113, 160, 162, 165, 547], "format_float_posit": 6, "format_float_scientif": 6, "former": [14, 26, 28, 29, 30, 32, 48, 49, 52, 54, 411, 506], "forth": [232, 509], "fortran": [47, 51, 110, 192, 346, 359, 464, 465, 472, 473, 525], "forward": [10, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 171], "found": [4, 484, 544], "four": [415, 444], "fourier": [128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 537, 547], "fourth": 129, "frac": [10, 513], "fraction": [264, 523], "free": [110, 376], "freedom": [276, 278, 457, 501, 529], "freq": [130, 132, 137, 144], "freq_spectrum": 133, "frequenc": [10, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144], "freshli": [195, 196, 531], "frexp": [6, 204], "fro": [209, 220, 224, 237], "frobeniu": [209, 224], "from": [3, 10, 14, 15, 17, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 68, 72, 75, 78, 79, 83, 85, 93, 98, 99, 101, 102, 104, 105, 110, 112, 113, 115, 117, 118, 122, 125, 126, 130, 134, 143, 144, 145, 151, 154, 160, 161, 162, 163, 164, 165, 166, 167, 171, 175, 178, 181, 184, 186, 201, 204, 213, 215, 216, 222, 223, 235, 239, 251, 252, 259, 260, 347, 351, 382, 387, 396, 397, 398, 400, 403, 407, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 469, 473, 474, 475, 480, 482, 484, 485, 498, 499, 500, 503, 505, 506, 511, 514, 516, 518, 520, 521, 524, 526, 527, 528, 533, 534, 535, 536, 547], "from_": 72, "from_dlpack": 6, "frombuff": [6, 162, 164, 165, 239], "fromfil": [6, 161, 164, 165], "fromfunct": [6, 42, 43, 44], "fromit": [6, 42, 43, 44, 161, 162, 165], "frompyfunc": 6, "fromregex": [6, 239], "fromstr": [6, 161, 162, 164, 239], "front": [59, 518], "full": [6, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 359, 360, 361, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "full_lik": [6, 38, 118, 166, 398, 536], "full_matric": 230, "fulli": [113, 258], "func1d": 24, "function": [0, 2, 3, 10, 12, 13, 14, 15, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 83, 87, 91, 93, 96, 97, 98, 99, 105, 108, 110, 115, 117, 118, 120, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 139, 141, 142, 145, 146, 154, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 174, 175, 176, 180, 181, 192, 201, 210, 212, 213, 215, 219, 220, 223, 224, 225, 231, 232, 235, 236, 237, 239, 242, 244, 245, 251, 252, 254, 259, 263, 264, 275, 341, 342, 351, 354, 361, 376, 379, 389, 397, 398, 400, 405, 406, 411, 413, 414, 415, 418, 420, 421, 431, 436, 452, 464, 469, 470, 472, 474, 481, 482, 487, 490, 501, 505, 506, 509, 510, 516, 517, 520, 521, 522, 526, 529, 533, 534, 535, 536, 537, 544, 547], "fundament": [10, 113], "further": [100, 516, 520], "futur": [113, 176], "fweight": 91, "g": [4, 10, 113, 117, 118, 126, 166, 167, 181, 224, 397, 398, 415, 514, 535, 536, 551], "g181011438e8": 6, "gamma": [6, 455], "gauss": 10, "gaussian": [415, 437, 461], "gc": 116, "gcd": [6, 203], "gen": 115, "gender": 113, "gener": [4, 10, 35, 58, 59, 86, 113, 134, 139, 142, 145, 169, 185, 213, 214, 215, 216, 220, 226, 227, 237, 239, 250, 415, 417, 420, 451, 464, 495, 513, 516, 520, 528, 544, 547], "genfromtxt": [6, 239], "geometr": [6, 169, 238], "geomspac": [6, 238, 250], "get": [25, 38, 42, 43, 44, 45, 46, 47, 83, 101, 102, 103, 104, 110, 117, 118, 126, 130, 133, 139, 141, 144, 154, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 231, 236, 238, 239, 250, 252, 260, 351, 379, 396, 397, 398, 400, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 506, 514, 516, 517, 520, 521, 528, 531, 535, 536, 544], "get_arrai": 110, "get_bit_gener": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 415], "get_sycl_devic": 415, "get_sycl_queu": 415, "getbufs": 6, "geterr": 6, "geterrcal": 6, "getfield": [6, 113], "getter": [110, 379], "gid": 176, "github": 160, "give": [10, 104, 110, 154, 176, 389, 473, 486, 492, 524], "given": [17, 18, 22, 23, 24, 25, 33, 34, 37, 38, 39, 42, 43, 45, 47, 51, 58, 59, 77, 83, 90, 91, 94, 95, 96, 97, 106, 109, 110, 112, 113, 114, 116, 117, 118, 125, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 157, 158, 166, 167, 169, 171, 175, 176, 186, 188, 217, 224, 232, 236, 238, 250, 252, 255, 256, 258, 259, 261, 262, 270, 271, 272, 274, 275, 276, 277, 278, 343, 344, 346, 352, 353, 366, 371, 372, 377, 380, 383, 385, 390, 394, 397, 398, 403, 407, 409, 410, 415, 420, 442, 459, 469, 471, 472, 473, 477, 478, 479, 480, 482, 484, 485, 492, 496, 501, 503, 505, 509, 510, 513, 514, 524, 526, 529, 531, 533, 535, 536, 544], "global": 0, "golub": 224, "good": 427, "gpu": [0, 3, 4, 25, 38, 42, 43, 44, 45, 47, 83, 101, 104, 117, 118, 126, 130, 144, 161, 162, 163, 164, 166, 167, 169, 181, 238, 239, 250, 260, 396, 397, 398, 514, 528, 535, 536], "grade": 113, "gradient": [6, 106, 114, 218], "graphic": 4, "great": 10, "greater": [6, 63, 66, 110, 111, 119, 156, 173, 205, 206, 207, 222, 227, 370, 395, 400, 476, 485, 487, 499, 527], "greater_equ": [6, 119, 172, 206, 207, 395], "greatest": [156, 168, 203], "greedi": [115, 116], "grid": [42, 43, 44, 163, 184, 225, 259, 260, 396, 399], "group": [36, 394], "guarante": [113, 472, 473], "guid": [2, 3], "gumbel": 6, "gz": 239, "h": [170, 208, 224, 227, 259], "ha": [4, 10, 12, 13, 14, 15, 17, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 48, 49, 52, 54, 58, 65, 86, 93, 94, 95, 96, 97, 107, 113, 119, 123, 133, 138, 139, 163, 171, 172, 173, 178, 180, 183, 189, 190, 197, 198, 206, 207, 215, 228, 230, 235, 251, 257, 258, 263, 270, 271, 273, 275, 276, 277, 278, 395, 400, 407, 466, 467, 468, 469, 470, 471, 479, 483, 485, 499, 500, 501, 503, 504, 505, 510, 511, 525, 529, 544], "had": [411, 506], "hadamard": 116, "half": [15, 27, 129, 131, 132, 133, 135, 136, 238, 415, 445, 447, 448, 450, 459, 504], "ham": 6, "han": 6, "hand": [92, 210, 234], "handl": [25, 113, 127, 239, 394, 411, 465, 505, 506, 547], "happen": [51, 58, 110, 346, 417, 513], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 113, "have": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 48, 49, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 73, 74, 77, 78, 79, 80, 81, 84, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 108, 109, 112, 113, 119, 121, 122, 124, 127, 135, 136, 145, 147, 148, 154, 155, 156, 157, 158, 159, 168, 172, 173, 174, 178, 179, 180, 183, 187, 188, 191, 193, 194, 195, 196, 203, 204, 205, 206, 207, 212, 218, 220, 223, 225, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 256, 257, 258, 262, 263, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 392, 393, 395, 403, 404, 405, 406, 407, 408, 413, 414, 434, 466, 468, 469, 470, 471, 472, 473, 476, 477, 481, 482, 483, 487, 488, 489, 490, 491, 495, 497, 498, 500, 501, 502, 503, 507, 508, 510, 522, 523, 527, 529, 531, 533, 544], "hd": 116, "header": 170, "heapsort": [35, 493], "heavisid": 6, "hello": 113, "help": 551, "helper": 547, "henc": [123, 171], "here": [6, 113, 115, 133, 138, 139, 516, 520], "hermit": [214, 216], "hermitian": [133, 138, 139, 141, 142, 208, 213, 214, 215, 216, 222, 226, 230, 231, 547], "hfft": [6, 10, 138], "hierarchi": 200, "high": [71, 139, 415, 443, 446, 459], "higher": [24, 110, 115, 177, 186, 363, 530, 532], "highest": 128, "highli": 162, "hist": [175, 453], "hist_0": 176, "hist_1": 176, "histogram": [6, 60, 107, 176, 484, 547], "histogram2d": 6, "histogram_bin_edg": [6, 175], "histogramdd": [6, 175], "hold": [76, 94, 95, 96, 97, 175, 224, 258, 270, 271, 275, 277, 464, 511], "homogen": 113, "hopkin": 224, "horizont": [77, 78, 79, 105, 112, 146, 151, 177, 178, 212, 480, 482, 496, 500, 533], "host": [3, 4, 25, 38, 42, 43, 44, 45, 46, 47, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 514, 516, 520, 528, 535, 536], "household": 227, "how": [0, 4, 113, 139, 142, 171, 410, 411, 465, 505, 506, 516, 520], "howev": [110, 381, 505], "hsplit": [6, 78, 79, 496], "hstack": [6, 77, 78, 79, 112, 482, 496, 500, 533], "http": [4, 160], "hyperbol": [14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 489, 491, 507, 508, 547], "hypergeometr": 6, "hypot": [6, 469], "hypotenus": [179, 469], "i": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 286, 346, 351, 361, 363, 370, 376, 379, 381, 384, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 544, 551], "i0": 6, "i1": [110, 113, 384], "i2": [110, 113, 384], "i3": [110, 384], "i4": [72, 113], "i7": 115, "i8": [72, 113], "i_0": 180, "iaxi": 400, "iaxis_pad_width": 400, "icpx": 4, "icx": 4, "id": [17, 22], "ideal": 490, "ident": [3, 6, 17, 22, 24, 44, 93, 113, 126, 137, 146, 229, 236, 454, 531], "identifi": 113, "idx": 186, "ieee": 147, "ifft": [6, 128, 135, 136, 138, 139, 144], "ifft2": [6, 129, 134, 136], "ifftn": [6, 131, 134, 135], "ifftshift": [6, 10, 132, 136], "ignor": [33, 34, 92, 113, 157, 158, 165, 175, 176, 255, 256, 257, 261, 262, 268, 269, 272, 273, 274, 276, 278, 501, 529], "ihfft": [6, 133], "ii": [24, 115, 438], "iinfo": 432, "iinfo_object": 182, "ij": [115, 116, 259], "ijk": 115, "il": 116, "il1": 516, "il2": 516, "illustr": 215, "ilm": 115, "im": [225, 399], "imag": [6, 10, 21, 39, 110, 466, 467, 474, 544], "imaginari": [21, 39, 110, 139, 157, 158, 183, 189, 190, 197, 198, 213, 214, 216, 221, 256, 262, 267, 360, 466, 467, 494, 524], "implement": [3, 4, 6, 46, 128, 160], "impli": [113, 464], "implicit": 115, "import": [0, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 351, 354, 356, 359, 360, 361, 363, 368, 370, 374, 379, 380, 381, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 440, 449, 453, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "improv": 115, "in1d": 6, "in_array1": 120, "includ": [4, 10, 17, 22, 23, 25, 38, 42, 43, 44, 45, 46, 47, 58, 83, 93, 96, 97, 101, 104, 107, 115, 116, 127, 166, 167, 169, 170, 175, 176, 190, 198, 226, 238, 250, 251, 257, 258, 272, 273, 274, 276, 278, 415, 459, 469, 490, 501, 528, 529], "include_initi": [93, 96, 97], "inclus": [415, 443, 446, 485], "increas": [107, 113, 123, 134, 139, 175, 400, 474, 528], "ind": [35, 107, 233, 410, 411, 516, 517, 520, 521], "independ": 210, "index": [4, 23, 33, 34, 35, 36, 75, 110, 113, 116, 126, 129, 135, 143, 150, 160, 184, 186, 192, 201, 259, 268, 269, 347, 359, 361, 384, 394, 410, 411, 464, 465, 473, 474, 484, 485, 496, 505, 506, 516, 520, 524, 525, 534, 537, 547], "index_arrai": [33, 34, 35], "indic": [6, 10, 24, 33, 34, 35, 36, 41, 60, 93, 96, 97, 100, 102, 103, 107, 110, 111, 113, 115, 116, 125, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 150, 160, 163, 175, 177, 186, 233, 234, 252, 253, 260, 268, 269, 343, 344, 345, 369, 372, 378, 387, 394, 402, 410, 411, 465, 484, 487, 488, 493, 496, 505, 506, 512, 516, 517, 520, 521, 524, 525, 531, 532, 534], "indices_or_sect": [41, 111, 177, 496, 532], "indirect": [35, 493], "individu": 425, "inequ": 395, "inexact": [154, 267, 275, 277], "inf": [9, 14, 15, 18, 26, 27, 28, 31, 32, 42, 43, 44, 48, 53, 54, 84, 108, 188, 191, 193, 194, 195, 196, 209, 220, 224, 237, 240, 241, 243, 256, 262, 267, 268, 269, 272, 274, 277, 408, 495, 497, 522], "infer": [44, 93, 251, 469, 473], "infin": [14, 15, 17, 22, 26, 27, 28, 29, 30, 32, 44, 48, 49, 52, 54, 156, 191, 193, 194, 195, 196, 263, 267, 272, 274, 277, 470, 523, 547], "infinit": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 209, 224, 490], "infj": [29, 30, 49, 52], "info": 6, "inform": [0, 45, 47, 110, 113, 133, 139, 141, 147, 357, 472, 544, 547], "initi": [19, 20, 93, 96, 97, 110, 117, 165, 255, 261, 272, 274, 275, 277, 364, 366, 371, 385, 407, 415, 503], "inner": [6, 24, 92, 115, 116, 219, 223, 253, 399], "innermost": [212, 220, 235, 254], "input": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 73, 74, 76, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 219, 220, 222, 224, 225, 227, 228, 230, 231, 232, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 359, 368, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 437, 443, 459, 464, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 522, 523, 524, 527, 528, 529, 530, 531, 532, 535, 536], "insert": [6, 23, 24, 33, 34, 100, 105, 107, 110, 115, 123, 169, 175, 238, 250, 268, 269, 272, 274, 378, 411, 473, 484, 485, 547], "instal": 2, "instanc": [3, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 104, 110, 117, 118, 126, 130, 133, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 181, 184, 238, 239, 250, 252, 253, 260, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 531, 535, 536], "instead": [36, 51, 105, 109, 110, 115, 123, 155, 169, 175, 176, 184, 192, 223, 238, 245, 250, 255, 261, 346, 394, 407, 465, 474, 503, 544], "instruct": 4, "insuffici": 59, "int": [9, 17, 22, 23, 24, 25, 33, 34, 35, 37, 38, 41, 46, 58, 59, 60, 69, 70, 78, 79, 90, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 110, 111, 113, 117, 118, 119, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 161, 162, 163, 164, 165, 166, 167, 169, 171, 175, 176, 177, 181, 182, 184, 186, 210, 212, 218, 221, 224, 232, 233, 234, 235, 236, 237, 238, 250, 251, 252, 255, 257, 258, 261, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 361, 368, 380, 389, 391, 397, 398, 400, 401, 402, 407, 410, 411, 415, 443, 446, 465, 469, 471, 473, 474, 478, 479, 480, 481, 492, 493, 496, 499, 500, 501, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 529, 531, 532, 535, 536, 544], "int16": 113, "int32": [0, 9, 46, 72, 113, 117, 118, 126, 161, 164, 166, 167, 181, 239, 275, 277, 397, 398, 415, 417, 425, 427, 432, 434, 440, 443, 459, 475, 503, 514, 535, 536], "int64": [0, 9, 72, 113, 275, 277, 475], "int8": [113, 407], "int_": 9, "int_0": 513, "int_t": 513, "intc": 9, "integ": [25, 37, 41, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 74, 93, 94, 95, 96, 97, 107, 110, 111, 113, 148, 151, 154, 155, 156, 160, 168, 175, 177, 180, 182, 187, 201, 203, 204, 205, 221, 224, 232, 233, 235, 237, 251, 255, 257, 261, 263, 270, 271, 272, 273, 274, 275, 276, 277, 278, 381, 389, 405, 406, 407, 410, 415, 443, 446, 451, 465, 469, 470, 471, 473, 476, 477, 478, 480, 481, 484, 485, 486, 496, 498, 501, 503, 505, 509, 511, 523, 524, 525, 527, 529, 532, 544], "integer_lik": [232, 509], "integr": [3, 4, 58, 93, 95, 97, 154, 175, 251, 257, 258, 264, 273, 276, 278, 405, 406, 469, 501, 503, 513, 529], "intel": [3, 115], "intend": [110, 389], "intent": 154, "interchang": [110, 265, 386, 504], "interfac": [0, 161], "interior": 171, "intermedi": [94, 96, 115, 116], "intern": [35, 415, 493], "interp": 6, "interpol": [139, 474, 490], "interpret": [2, 42, 43, 44, 50, 70, 83, 110, 113, 133, 139, 141, 161, 201, 252, 361, 394, 410, 544], "intersect1d": 6, "interv": [10, 14, 15, 25, 26, 27, 28, 30, 48, 52, 107, 123, 169, 238, 250, 415, 443, 445, 447, 448, 450, 458, 459, 504], "intp": [275, 277], "intrins": 544, "introduc": 478, "introduct": 10, "introselect": [110, 370, 401], "inv": [6, 209, 226], "invers": [10, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 204, 217, 226, 233, 234, 242, 461, 489, 491, 507, 508, 524], "invert": [6, 62, 64, 217, 226, 233], "invok": 544, "involv": 233, "io": [160, 239], "irfft": [6, 130, 133, 138, 140, 141, 142, 144], "irfft2": [6, 139, 141, 143], "irfftn": [6, 139, 140, 145], "irrespect": 35, "is_busdai": 6, "isalignedstruct": 113, "isbuiltin": 113, "isclos": [6, 18], "iscomplex": [6, 190, 197], "iscomplexobj": [6, 189, 198], "isdtyp": 6, "isfinit": [6, 193, 194, 195, 196, 267, 272, 274, 277], "isfortran": 6, "isin": 6, "isinf": [6, 191, 194, 195, 196, 267], "isn": 113, "isnan": [6, 191, 193, 195, 196, 267, 270, 271, 272, 274, 275, 277], "isnat": [6, 194], "isneginf": [6, 191, 193, 194, 196, 267], "isposinf": [6, 191, 193, 194, 195, 267], "isreal": [6, 189, 198], "isrealobj": [6, 190, 197], "isscalar": 6, "issu": 135, "issubdtyp": 6, "item": [6, 36, 110, 161, 162, 164, 524, 537], "item_dtyp": 113, "item_hasobject": 113, "item_is_point": 113, "items": [71, 110, 113], "iter": [6, 42, 43, 44, 110, 116, 149, 161, 162, 164, 165, 358, 359, 411, 464, 474, 506, 526, 547], "its": [4, 6, 10, 12, 13, 17, 22, 35, 58, 101, 110, 133, 139, 141, 147, 175, 176, 181, 213, 214, 215, 216, 223, 226, 234, 257, 273, 276, 278, 389, 402, 452, 464, 469, 473, 493, 501, 512, 513, 514, 529, 544], "itself": [51, 110, 113, 204, 267, 346, 544], "iu": 252, "iu1": [252, 520], "iu2": 520, "ix_": 6, "ixgrid": 201, "j": [38, 80, 81, 110, 115, 129, 131, 133, 134, 135, 136, 138, 139, 142, 143, 145, 154, 163, 183, 184, 202, 208, 213, 214, 224, 225, 232, 235, 243, 253, 267, 389, 399, 408, 411, 466, 494, 498, 506, 509], "j1": 202, "jame": 10, "ji": 115, "jil": 115, "jj": 24, "jk": [115, 116], "jl": 116, "john": [10, 224], "join": [77, 78, 79, 112, 178, 186, 482, 496, 500, 526, 533, 547], "jump": [98, 413], "just": [71, 77, 105, 113, 129, 135, 140, 142, 143, 186], "k": [10, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 98, 99, 101, 104, 108, 110, 115, 118, 119, 121, 122, 124, 126, 127, 148, 154, 155, 156, 157, 158, 159, 167, 168, 172, 173, 174, 179, 180, 183, 187, 191, 193, 194, 202, 203, 204, 205, 206, 207, 218, 227, 229, 230, 231, 232, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 256, 262, 263, 266, 286, 346, 351, 392, 393, 395, 398, 404, 405, 406, 408, 413, 414, 464, 466, 468, 470, 476, 477, 480, 483, 487, 488, 489, 490, 491, 495, 497, 498, 502, 507, 508, 509, 514, 515, 516, 517, 519, 520, 521, 522, 523, 527, 531, 534, 536, 551], "kaiser": 6, "kappa": 460, "keep": [50, 51, 110, 346, 524], "keepdim": [17, 19, 20, 22, 33, 34, 58, 90, 110, 220, 224, 237, 251, 255, 257, 258, 261, 268, 269, 272, 273, 274, 275, 276, 277, 278, 341, 342, 343, 344, 364, 365, 366, 371, 383, 385, 390, 407, 409, 411, 469, 501, 503, 506, 529], "kei": [3, 35, 110, 113, 149, 291, 336, 493], "kernel": 490, "key2": 113, "keyword": [10, 12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 83, 84, 88, 89, 92, 98, 99, 101, 102, 104, 108, 110, 117, 118, 121, 122, 124, 126, 127, 130, 144, 148, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 171, 174, 179, 181, 184, 187, 203, 204, 205, 210, 212, 219, 225, 235, 236, 239, 241, 242, 243, 244, 245, 252, 253, 256, 260, 262, 263, 264, 266, 267, 351, 392, 393, 396, 397, 398, 400, 404, 405, 406, 408, 413, 414, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 468, 470, 473, 476, 477, 483, 487, 488, 489, 491, 495, 502, 507, 508, 514, 516, 520, 522, 523, 528, 531, 534, 535, 536, 544], "ki": 115, "kind": [35, 51, 72, 78, 79, 85, 93, 110, 113, 115, 147, 178, 180, 223, 251, 253, 345, 346, 370, 381, 401, 469, 473, 482, 493, 500, 531, 533, 547], "kk": 24, "kl": [10, 115, 116], "known": [10, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 162, 453], "kron": 6, "kroneck": 202, "kth": [110, 370, 401], "kwarg": [12, 13, 14, 15, 16, 24, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 84, 88, 89, 98, 99, 108, 110, 119, 121, 122, 124, 127, 148, 154, 155, 156, 157, 158, 159, 163, 168, 172, 173, 174, 179, 187, 191, 193, 194, 203, 204, 205, 206, 207, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 256, 262, 263, 264, 266, 317, 348, 392, 393, 395, 400, 404, 405, 406, 408, 413, 414, 468, 470, 476, 477, 483, 487, 488, 489, 491, 495, 497, 498, 502, 507, 508, 522, 523], "l": [10, 41, 113, 208, 214, 216, 235], "la": [213, 215, 216], "label": 115, "laid": 47, "lam": 440, "lambda": 163, "lanczo": 490, "lapack": [213, 215], "laplac": 6, "laptop": 4, "larg": [10, 98, 113, 175, 226, 267, 413, 527, 551], "larger": [115, 128, 129, 131, 134, 135, 136, 138, 140, 141, 142, 143, 145, 147, 474, 511, 527], "largest": [10, 116, 142, 147, 155, 182, 218, 224, 263, 267, 470], "largest_singular_valu": 226, "last": [17, 22, 23, 24, 35, 60, 71, 92, 105, 106, 110, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 151, 169, 171, 185, 192, 212, 223, 231, 232, 235, 238, 250, 253, 359, 363, 400, 407, 464, 473, 478, 484, 493, 499, 503, 509, 526, 527, 531], "later": [400, 551], "latest": [4, 160], "latter": [14, 26, 28, 29, 30, 32, 48, 49, 52, 54, 157, 158, 256, 262, 411, 506], "layout": [4, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 98, 99, 108, 110, 115, 117, 118, 119, 121, 122, 124, 126, 127, 148, 154, 155, 156, 157, 158, 159, 166, 167, 168, 172, 173, 174, 179, 180, 183, 187, 191, 193, 194, 203, 204, 205, 206, 207, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 256, 262, 263, 266, 351, 357, 392, 393, 395, 397, 398, 404, 405, 406, 408, 413, 414, 464, 466, 468, 470, 472, 473, 476, 477, 483, 487, 488, 489, 490, 491, 495, 497, 498, 502, 507, 508, 522, 523, 531, 534, 535, 536, 537], "lcm": [6, 168], "ldexp": 6, "ldot": 10, "lead": [134, 135, 136, 270, 271, 518], "learn": [3, 4, 245], "least": [55, 56, 57, 58, 59, 103, 112, 113, 116, 123, 146, 152, 157, 158, 162, 190, 218, 227, 256, 262, 482, 533], "left": [10, 30, 33, 34, 37, 52, 63, 66, 90, 105, 107, 110, 152, 153, 205, 215, 220, 224, 237, 255, 261, 268, 269, 275, 277, 378, 407, 458, 476, 481, 484, 503, 513, 528], "left_shift": [6, 63, 66, 476], "leg": [179, 469], "legaci": 451, "legal": 186, "len": [100, 110, 113, 131, 132, 133, 136, 138, 139, 140, 141, 145, 184, 218, 255, 259, 260, 261, 309, 486, 528], "length": [25, 41, 58, 59, 60, 94, 95, 96, 97, 106, 119, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 165, 169, 171, 175, 178, 213, 230, 231, 232, 250, 255, 258, 259, 261, 270, 271, 400, 411, 418, 473, 475, 482, 484, 485, 486, 499, 506, 509, 510, 533], "less": [6, 94, 95, 96, 97, 110, 119, 172, 173, 175, 176, 207, 218, 226, 235, 270, 271, 275, 277, 363, 395, 407, 485, 487, 503, 511], "less_equ": [6, 119, 172, 173, 206, 395], "let": [236, 417, 473, 531], "level": [537, 544], "level_zero": [25, 38, 42, 43, 44, 45, 47, 83, 101, 104, 117, 118, 126, 130, 144, 161, 162, 163, 164, 166, 167, 169, 181, 238, 239, 250, 260, 396, 397, 398, 514, 528, 535, 536], "lexicograph": 524, "lexsort": [6, 35, 493], "li": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 478, 479], "lib": 71, "librari": [3, 4, 544], "light": 10, "like": [25, 38, 42, 43, 45, 47, 51, 55, 56, 57, 77, 100, 110, 112, 115, 117, 126, 141, 161, 162, 163, 164, 165, 166, 169, 181, 186, 238, 239, 250, 252, 346, 359, 368, 391, 397, 411, 415, 459, 464, 472, 473, 506, 535, 547], "likewis": [61, 65, 67], "limit": [3, 4, 12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 80, 81, 83, 84, 87, 88, 89, 91, 98, 99, 108, 110, 113, 117, 118, 119, 120, 121, 122, 124, 126, 127, 147, 148, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 179, 181, 182, 187, 191, 193, 194, 203, 204, 205, 206, 207, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 255, 256, 257, 261, 262, 263, 264, 266, 268, 269, 272, 273, 274, 275, 276, 277, 278, 346, 348, 392, 393, 395, 397, 398, 401, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 438, 440, 441, 443, 446, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 468, 470, 472, 476, 477, 483, 487, 488, 489, 490, 491, 493, 495, 497, 498, 501, 502, 503, 507, 508, 522, 523, 529, 531, 535, 536], "linalg": [6, 92, 105, 109, 115, 116, 253, 254, 399, 498, 509, 511, 530, 531], "line": [218, 239], "linear": [10, 82, 87, 218, 229, 250, 400, 537, 547], "linear_ramp": 400, "linspac": [0, 6, 25, 120, 169, 225, 250, 259, 399, 490, 513, 527], "linux": 4, "list": [3, 6, 9, 23, 38, 41, 42, 43, 44, 45, 47, 55, 56, 57, 68, 78, 79, 83, 101, 104, 110, 111, 112, 113, 115, 116, 132, 137, 146, 166, 167, 169, 171, 177, 178, 190, 198, 232, 238, 239, 250, 253, 258, 389, 402, 465, 471, 472, 474, 475, 482, 485, 496, 500, 509, 512, 525, 526, 528, 531, 532, 533, 534], "list_pickl": 113, "littl": 113, "ln": 250, "load": [6, 162, 239], "loadtxt": [6, 162], "loan": 224, "loc": [415, 426, 428, 429, 437, 461], "local": 4, "locat": [0, 4, 170, 195, 196, 252, 399, 426, 428, 484, 531], "log": [6, 124, 169, 228, 238, 241, 242, 243, 244, 250, 251, 430], "log10": [6, 240, 242, 243], "log1p": [6, 122, 124, 240, 241, 243], "log2": [6, 240, 241, 242, 245], "log_bas": 250, "logabsdet": 228, "logaddexp": [6, 93, 245, 251], "logaddexp2": [6, 244, 251], "logarithm": [93, 211, 228, 238, 240, 241, 242, 243, 244, 245, 251, 431, 547], "logic": [17, 22, 246, 247, 248, 249, 537, 547], "logical_and": [6, 61, 247, 248, 249], "logical_not": [6, 62, 64, 187, 246, 248, 249], "logical_or": [6, 65, 246, 247, 249], "logical_xor": [6, 67, 246, 247, 248], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 169, 238], "logsumexp": [93, 244, 245], "lomax": 438, "long": [113, 221], "longer": [133, 139, 551], "look": [393, 506], "loop": [24, 115], "loos": 114, "lorentz": 453, "lose": [133, 139, 141], "low": [71, 129, 131, 135, 136, 415, 443, 446, 459, 544], "lower": [101, 126, 175, 176, 200, 208, 214, 216, 252, 514, 515, 516, 517, 520, 521], "lowest": [58, 115, 116, 168, 203, 415, 443], "lstsq": 6, "m": [4, 10, 24, 91, 112, 113, 115, 126, 129, 131, 133, 135, 136, 139, 140, 141, 145, 151, 152, 153, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 235, 252, 253, 254, 258, 411, 480, 485, 505, 506, 514, 515, 516, 517, 519, 520, 521], "machin": [4, 10, 147, 182, 218, 245, 467], "machineri": 113, "made": [38, 43, 55, 113, 160, 202, 267, 473, 496], "magnitud": [12, 13, 84, 127, 408], "mai": [17, 21, 22, 51, 72, 76, 78, 79, 85, 95, 97, 110, 113, 115, 116, 123, 129, 131, 133, 134, 135, 136, 138, 139, 142, 145, 171, 176, 178, 209, 213, 214, 218, 220, 224, 227, 245, 250, 253, 267, 273, 276, 278, 346, 379, 411, 464, 467, 474, 482, 490, 500, 510, 531, 533, 544], "main": [101, 102, 103, 104, 105, 126, 146, 181, 212, 216, 235, 252, 511, 514, 515, 516, 519, 520], "mainstai": 10, "maintain": [35, 107, 110, 113, 175, 378, 484, 493, 506], "major": [4, 42, 43, 44, 45, 47, 50, 51, 110, 346, 394, 464, 465, 472, 525], "make": [45, 47, 77, 113, 225, 259, 399, 472, 490, 524, 527], "manag": 0, "mandelbrot": [225, 399], "mani": [10, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 464, 544], "manipul": [3, 102, 537, 547], "mantissa": 204, "manual": [4, 113, 510], "mappingproxi": 113, "mask": [100, 113, 201, 252, 394, 403, 412, 505, 516, 520], "mask_func": 252, "mask_indic": [6, 516, 520], "mass": 175, "match": [12, 13, 43, 78, 79, 85, 90, 93, 106, 113, 160, 162, 171, 185, 232, 251, 253, 410, 411, 469, 500, 505, 506, 509, 534], "math": [10, 120], "mathbf": [236, 531], "mathemat": [224, 537, 547], "matlab": 159, "matmul": [6, 109, 227, 230, 530], "matplotlib": [259, 453], "matric": [146, 163, 184, 201, 211, 212, 213, 215, 217, 220, 222, 224, 226, 227, 228, 230, 231, 235, 253, 254, 259, 547], "matrix": [86, 91, 109, 110, 115, 185, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 235, 253, 254, 259, 363, 498, 519, 528, 530, 531, 537, 547], "matrix_norm": [6, 224], "matrix_pow": [6, 498], "matrix_rank": 6, "matrix_transpos": 6, "matter": 524, "max": [0, 6, 19, 33, 60, 76, 110, 147, 157, 158, 175, 176, 182, 218, 222, 224, 226, 256, 261, 262, 272, 348, 432, 506, 510, 527, 544], "max_arg": 0, "max_val": 0, "maxima": [157, 255, 256], "maximum": [0, 6, 19, 33, 34, 76, 110, 116, 157, 158, 255, 261, 262, 268, 269, 272, 274, 343, 364, 400, 405, 406, 409, 411, 527], "may_share_memori": 6, "md": 224, "mean": [3, 6, 10, 25, 38, 40, 42, 43, 44, 45, 46, 47, 51, 58, 83, 90, 101, 102, 104, 110, 115, 117, 118, 126, 129, 130, 131, 135, 136, 140, 141, 142, 143, 144, 145, 161, 162, 163, 164, 165, 166, 167, 171, 181, 184, 209, 224, 239, 252, 258, 260, 273, 276, 278, 346, 351, 359, 389, 396, 397, 398, 400, 415, 428, 430, 433, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 460, 461, 464, 473, 480, 501, 503, 514, 516, 520, 528, 529, 535, 536, 544], "meaningfulli": 544, "meant": 544, "median": [0, 6, 400], "meet": [38, 485], "memori": [3, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 98, 99, 108, 110, 113, 115, 117, 118, 119, 121, 122, 124, 126, 127, 148, 154, 155, 156, 157, 158, 159, 160, 166, 167, 168, 172, 173, 174, 179, 180, 183, 187, 191, 192, 193, 194, 203, 204, 205, 206, 207, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 256, 258, 259, 262, 263, 266, 351, 357, 384, 392, 393, 395, 397, 398, 404, 405, 406, 408, 413, 414, 464, 466, 468, 470, 472, 473, 476, 477, 483, 487, 488, 489, 490, 491, 495, 497, 498, 502, 507, 508, 522, 523, 531, 534, 535, 536, 537, 551], "mergesort": [35, 493], "mersenn": 415, "mesh": 201, "meshgrid": [6, 163, 184, 201, 260, 396], "met": [109, 223], "meta": 113, "metadata": 113, "method": [10, 17, 19, 20, 22, 35, 51, 83, 109, 110, 113, 149, 160, 162, 222, 226, 230, 254, 346, 351, 361, 368, 376, 379, 391, 394, 402, 415, 473, 486, 503, 505, 512, 537], "mgrid": [129, 131, 140, 143, 184, 201], "mgridclass": 260, "middl": [10, 105, 129, 131, 135, 136, 215, 258], "might": [115, 134, 135, 136], "min": [6, 20, 34, 76, 110, 147, 157, 158, 175, 176, 182, 209, 212, 218, 224, 227, 230, 231, 255, 256, 262, 274, 348, 506, 544], "min_scalar_typ": 6, "minima": [158, 261, 262], "minimum": [6, 20, 33, 34, 38, 60, 76, 110, 154, 157, 158, 255, 256, 261, 268, 269, 272, 274, 344, 366, 400, 405, 406, 409], "minlength": 60, "mintypecod": 6, "minu": [59, 124, 156, 263, 470, 523], "mirror": 400, "miscellan": [2, 537, 547], "mise": 460, "miss": 239, "mix": [219, 253], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 125, 470, 527], "mode": [75, 82, 87, 110, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 227, 347, 372, 387, 400, 410, 411, 453, 458, 465, 484, 505, 506], "model": [4, 417], "modf": 6, "modifi": [83, 105, 146, 180, 258, 400, 452], "modul": [128, 170, 537], "modulu": [159, 263, 470], "moment": 86, "monoton": [107, 175], "moor": 226, "more": [0, 3, 4, 35, 38, 55, 56, 57, 96, 97, 112, 113, 115, 116, 124, 140, 143, 152, 153, 160, 162, 176, 178, 184, 204, 210, 212, 218, 219, 221, 222, 223, 225, 226, 230, 232, 235, 236, 242, 244, 474, 480, 500, 509, 513, 524, 527, 544, 551], "most": [3, 4, 23, 60, 105, 106, 113, 116, 128, 134, 267, 415, 451, 474, 499], "move": [110, 265, 370, 402, 478, 479, 512, 524], "moveaxi": [6, 402, 478, 479, 512, 526], "msg": 0, "mt": [110, 254], "mt19937": 451, "mu": [426, 430, 437, 460], "multi": [2, 110, 184, 201, 210, 260, 384, 396, 465, 524, 537], "multi_dot": [6, 109, 115, 116], "multi_index": 465, "multiarrai": 113, "multidimension": [175, 185, 534], "multinomi": 6, "multipl": [4, 10, 24, 33, 34, 35, 41, 58, 78, 79, 86, 92, 93, 111, 113, 115, 129, 131, 135, 136, 140, 141, 143, 145, 168, 176, 177, 178, 186, 201, 203, 210, 213, 214, 215, 216, 217, 223, 251, 255, 257, 261, 272, 273, 274, 276, 278, 464, 469, 482, 485, 493, 496, 500, 501, 513, 524, 526, 529, 532, 533, 537], "multipli": [6, 94, 115, 204, 215, 275, 407], "multivalu": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54], "multivari": 433, "multivariate_norm": 6, "must": [12, 13, 14, 15, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 73, 74, 76, 77, 78, 79, 80, 81, 84, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 106, 108, 109, 112, 121, 122, 123, 124, 127, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 152, 154, 155, 156, 157, 158, 159, 162, 165, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 183, 187, 191, 193, 194, 195, 196, 203, 204, 205, 206, 207, 208, 210, 212, 223, 224, 225, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 258, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 392, 393, 395, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 466, 468, 469, 470, 471, 476, 477, 478, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 495, 497, 498, 500, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 522, 523, 529, 531, 533, 534], "mx": 218, "mxn": [212, 220, 235, 254], "my_func": 24, "n": [0, 4, 10, 36, 41, 59, 95, 97, 102, 103, 106, 107, 110, 111, 112, 113, 114, 123, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 163, 171, 177, 181, 201, 212, 218, 220, 221, 222, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 252, 253, 254, 258, 259, 276, 278, 389, 400, 402, 403, 410, 411, 417, 432, 434, 444, 454, 484, 486, 496, 498, 501, 504, 505, 506, 509, 512, 513, 514, 515, 516, 517, 519, 520, 521, 528, 529, 531, 532, 544], "n1": 259, "n2": [239, 259], "n3": 259, "naiv": 116, "name": [0, 6, 24, 113, 226, 490], "namedtupl": 227, "nan": [9, 14, 15, 17, 18, 22, 26, 27, 28, 29, 30, 32, 33, 34, 39, 42, 43, 44, 48, 49, 52, 54, 108, 154, 157, 158, 188, 191, 193, 194, 195, 196, 241, 255, 256, 257, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 405, 406, 407, 495, 497, 501, 522, 524, 529, 547], "nan_to_num": 6, "nanargmax": [6, 33, 269], "nanargmin": [6, 34, 268], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 157, 158, 255, 256, 262, 274], "nanmean": [6, 257, 276, 278, 501, 529], "nanmedian": 6, "nanmin": [6, 157, 158, 256, 261, 262, 272], "nanpercentil": 6, "nanprod": [6, 407], "nanquantil": 6, "nanstd": [6, 257, 273, 278, 501, 529], "nansum": 6, "nanvar": [6, 257, 273, 276, 501, 529], "nat": 194, "nativ": 113, "native_cod": 113, "native_dt": 113, "natur": [228, 240, 241, 242, 243, 244, 245, 251], "nbad": 427, "nbyte": 110, "nd": [110, 361], "ndarrai": [2, 3, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 548], "ndim": [6, 36, 38, 45, 47, 55, 56, 57, 91, 102, 105, 110, 113, 146, 202, 224, 230, 231, 254, 255, 261, 397, 402, 510, 512, 535], "ndindex": 24, "ndmin": 38, "ne": 490, "nearest": [37, 74, 148, 155, 156, 263, 470, 477, 481, 495, 523], "necessari": [4, 17, 22, 25, 38, 42, 43, 45, 47, 55, 85, 94, 95, 96, 97, 114, 125, 133, 139, 141, 146, 160, 169, 238, 250, 253, 257, 258, 270, 271, 273, 275, 276, 277, 278, 407, 474, 501, 503, 529, 551], "necessarili": [213, 215], "need": [4, 38, 43, 60, 105, 115, 170, 258, 472, 505, 506, 534], "needs_init": 113, "needs_pyapi": 113, "neg": [6, 10, 17, 22, 37, 59, 60, 84, 104, 105, 107, 110, 123, 126, 129, 131, 134, 135, 136, 139, 142, 151, 154, 165, 171, 175, 191, 193, 194, 195, 196, 221, 232, 267, 272, 274, 276, 277, 278, 379, 404, 405, 406, 407, 410, 411, 434, 465, 481, 501, 503, 505, 506, 509, 511, 529], "negat": 485, "negative_binomi": 6, "neginf": 267, "neither": [109, 157, 158, 219, 230, 253, 272, 274], "nest": [46, 112, 178, 482, 500, 526, 533], "nested_it": 6, "net": [157, 158, 256, 262], "never": 527, "new": [23, 24, 38, 51, 68, 69, 70, 77, 78, 79, 90, 93, 94, 95, 96, 97, 100, 105, 110, 112, 113, 114, 117, 118, 123, 157, 158, 160, 164, 165, 166, 167, 169, 178, 181, 186, 238, 250, 251, 252, 256, 258, 262, 265, 270, 271, 275, 277, 346, 376, 379, 389, 397, 398, 402, 469, 473, 474, 478, 479, 482, 496, 500, 510, 512, 526, 533, 534, 535, 536, 544], "new_dtyp": 113, "new_ord": 113, "new_shap": 474, "newaxi": 123, "newbyteord": 113, "newli": [12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 48, 49, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 98, 99, 108, 110, 117, 118, 119, 121, 122, 124, 126, 127, 148, 154, 155, 156, 157, 158, 159, 166, 167, 168, 172, 173, 174, 179, 180, 183, 187, 191, 193, 194, 203, 204, 205, 206, 207, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 256, 262, 263, 266, 346, 351, 392, 393, 395, 397, 398, 404, 405, 406, 408, 413, 414, 466, 468, 470, 476, 477, 483, 487, 488, 489, 490, 491, 495, 497, 498, 502, 507, 508, 522, 523, 531, 535, 536], "newshap": 473, "next": [4, 147, 393], "nextaft": 6, "ngood": 427, "ni": [24, 259, 411, 505, 506], "nine": 417, "ninja": 4, "nj": [24, 411, 505, 506], "njm": 115, "nk": [24, 411, 505, 506], "nl": 10, "nlk": 115, "nn": 259, "noisi": 218, "non": [25, 36, 38, 42, 43, 44, 45, 46, 47, 51, 58, 60, 83, 90, 101, 102, 104, 107, 110, 117, 118, 125, 126, 130, 139, 142, 144, 150, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 175, 176, 181, 184, 189, 191, 201, 210, 232, 238, 239, 250, 252, 260, 267, 268, 269, 272, 274, 276, 278, 346, 351, 369, 379, 394, 396, 397, 398, 403, 405, 406, 415, 435, 436, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 501, 509, 514, 516, 520, 528, 529, 534, 535, 536], "nonc": [435, 436], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 186, 187, 191, 193, 194, 195, 196, 203, 204, 205, 206, 207, 209, 218, 220, 222, 223, 224, 226, 230, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 361, 364, 365, 366, 370, 371, 372, 375, 376, 377, 378, 381, 382, 383, 385, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 476, 477, 478, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 511, 512, 513, 514, 516, 520, 522, 523, 524, 525, 527, 528, 529, 531, 533, 534, 535, 536, 544], "nonneg": 60, "nonzero": [6, 36, 90, 110, 150, 201, 534, 544], "nor": [157, 158, 215, 272, 274], "norm": [6, 10, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 209, 215, 218, 220, 237, 547], "normal": [6, 91, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 175, 213, 214, 227, 236, 245, 415, 430, 433, 444, 456, 465, 490, 531], "not_equ": [6, 119, 172, 173, 206, 207], "note": [12, 13, 14, 15, 16, 17, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 50, 52, 53, 54, 59, 62, 63, 64, 66, 78, 79, 83, 92, 98, 100, 105, 107, 108, 110, 113, 115, 116, 123, 125, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 155, 157, 158, 161, 162, 163, 164, 165, 175, 184, 186, 187, 191, 204, 205, 210, 212, 213, 220, 224, 232, 237, 239, 250, 258, 263, 266, 276, 277, 278, 351, 376, 394, 400, 402, 403, 405, 406, 410, 413, 418, 420, 421, 431, 436, 464, 470, 472, 473, 474, 476, 480, 490, 493, 495, 501, 502, 504, 509, 510, 512, 513, 522, 524, 526, 527, 529, 530], "notic": [113, 139, 142], "notimplementederror": [12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 80, 81, 83, 84, 88, 89, 98, 99, 108, 110, 117, 118, 119, 121, 122, 124, 126, 127, 148, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 179, 181, 187, 191, 193, 194, 203, 204, 205, 206, 207, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 255, 256, 257, 261, 262, 263, 266, 272, 273, 274, 276, 277, 278, 346, 392, 393, 395, 397, 398, 404, 405, 406, 407, 408, 413, 414, 464, 468, 470, 472, 476, 477, 483, 487, 488, 489, 491, 493, 495, 497, 498, 501, 502, 503, 507, 508, 522, 523, 529, 531, 535, 536], "now": [17, 22, 45, 47, 86, 102, 215, 218, 252], "np": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 351, 354, 356, 359, 360, 361, 363, 368, 370, 374, 379, 380, 381, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 407, 408, 409, 410, 411, 413, 414, 440, 449, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "nr": 10, "nsamp": 427, "nsampl": 427, "nth": [232, 509], "nuc": [220, 224, 237], "nuclear": 224, "num": [0, 59, 113, 120, 169, 238, 250, 513, 527], "number": [10, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 37, 38, 44, 48, 49, 52, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 90, 102, 104, 106, 107, 110, 113, 114, 115, 116, 123, 126, 127, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 145, 147, 148, 156, 161, 162, 164, 165, 169, 171, 175, 176, 181, 182, 187, 188, 189, 190, 191, 198, 201, 204, 205, 209, 217, 222, 224, 227, 228, 230, 233, 234, 238, 245, 250, 263, 267, 270, 271, 272, 274, 275, 276, 277, 278, 368, 377, 380, 391, 394, 400, 402, 403, 407, 408, 415, 417, 427, 451, 470, 471, 474, 476, 477, 478, 479, 480, 481, 488, 492, 495, 501, 504, 510, 512, 514, 523, 524, 528, 529, 544, 547], "number_of_dimens": [110, 368, 391], "numer": [3, 4, 10, 12, 13, 14, 15, 16, 18, 26, 27, 28, 29, 30, 32, 37, 48, 49, 52, 54, 80, 81, 84, 88, 89, 108, 113, 119, 121, 124, 134, 135, 136, 139, 141, 156, 157, 158, 172, 173, 183, 188, 191, 193, 194, 206, 207, 224, 225, 240, 241, 242, 243, 256, 262, 266, 392, 395, 404, 405, 406, 408, 466, 477, 481, 487, 488, 489, 491, 502, 507, 508, 522, 547], "numpi": [0, 1, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 355, 356, 359, 360, 361, 368, 374, 379, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 544, 547], "nvidia": 4, "nx": 259, "ny": 259, "nyquist": [10, 129, 131, 132, 133, 134, 135, 136, 139, 141, 142, 144], "o": [4, 17, 22, 113], "obj": [33, 34, 35, 100, 113, 160, 175, 186], "object": [25, 38, 42, 43, 44, 45, 46, 47, 50, 51, 83, 101, 102, 104, 110, 113, 117, 118, 123, 126, 130, 144, 147, 149, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 182, 184, 186, 209, 214, 224, 232, 238, 239, 250, 252, 260, 346, 351, 361, 376, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 473, 509, 514, 516, 520, 528, 535, 536, 544], "observ": 86, "obsolet": 192, "obtain": [10, 105, 208, 212, 235, 394], "obviou": 10, "occupi": [147, 182], "occur": [23, 51, 72, 78, 79, 85, 100, 110, 115, 178, 186, 213, 253, 267, 346, 482, 500, 531, 533], "occurr": [33, 34, 60, 107, 175, 268, 269, 524], "odd": [10, 130, 133, 137, 138, 139, 141, 142, 144, 258, 400], "off": [25, 133, 138, 212, 213, 218, 235], "offset": [105, 110, 113, 161, 162, 212, 235, 252, 354, 388, 511, 516, 517, 520, 521], "often": [100, 174], "ogrid": [184, 201, 534], "ogridclass": 396, "oil": [417, 434], "old": 474, "omit": [415, 443], "onc": 217, "one": [3, 4, 33, 34, 35, 38, 40, 46, 55, 56, 57, 58, 82, 85, 87, 90, 96, 97, 100, 110, 113, 117, 119, 123, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 152, 153, 154, 157, 158, 162, 166, 171, 176, 178, 181, 184, 186, 190, 201, 215, 220, 221, 224, 232, 237, 240, 241, 243, 252, 255, 256, 259, 260, 261, 262, 268, 269, 275, 277, 351, 359, 361, 362, 394, 396, 398, 403, 407, 434, 465, 479, 485, 493, 499, 500, 503, 505, 509, 513, 516, 517, 520, 521, 524, 535, 544], "oneapi": [4, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 535, 536], "onedpl": 4, "onemkl": [4, 213, 215], "ones": [6, 38, 45, 47, 58, 93, 96, 97, 100, 108, 110, 115, 117, 118, 119, 123, 126, 145, 166, 167, 179, 181, 202, 218, 222, 225, 251, 252, 270, 275, 398, 399, 402, 407, 469, 475, 479, 512, 514, 522, 535, 536], "ones_lik": [6, 38, 118, 167, 397, 536], "onli": [10, 17, 22, 25, 33, 34, 35, 38, 41, 42, 43, 45, 47, 51, 55, 58, 59, 83, 87, 91, 96, 97, 110, 113, 115, 116, 117, 118, 126, 132, 142, 146, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 175, 176, 184, 192, 208, 214, 216, 219, 222, 224, 225, 226, 227, 230, 238, 239, 250, 252, 253, 255, 257, 261, 267, 268, 269, 272, 273, 274, 275, 276, 278, 346, 361, 379, 381, 397, 398, 401, 403, 404, 407, 415, 437, 443, 459, 464, 472, 473, 490, 493, 501, 503, 506, 520, 524, 527, 529, 531, 534, 535, 536, 544], "open": [162, 184, 201, 238, 396, 415, 445, 447, 448, 450, 459, 504], "opencl": [25, 38, 42, 43, 44, 45, 47, 83, 101, 104, 117, 118, 126, 130, 144, 161, 162, 163, 164, 166, 167, 169, 181, 238, 239, 250, 260, 396, 397, 398, 514, 528, 535, 536], "oper": [10, 16, 24, 61, 62, 63, 64, 65, 66, 67, 108, 113, 115, 116, 119, 123, 146, 156, 159, 172, 173, 187, 205, 206, 207, 208, 246, 248, 253, 255, 261, 263, 266, 267, 268, 269, 392, 395, 404, 405, 406, 410, 470, 476, 502, 510, 522, 524, 526, 527, 531, 537, 547], "operand": [115, 116, 232, 234, 399, 509], "opposit": [10, 113, 125, 133, 138, 403, 464], "optim": [4, 115, 116, 175, 176], "option": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 186, 187, 188, 191, 193, 194, 195, 196, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 220, 222, 223, 224, 226, 227, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 351, 359, 389, 392, 393, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 535, 536, 551], "ord": [220, 224, 237], "order": [10, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 98, 99, 105, 107, 108, 110, 113, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 129, 131, 134, 135, 136, 139, 141, 145, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 166, 167, 168, 171, 172, 173, 174, 175, 179, 180, 183, 187, 191, 192, 193, 194, 203, 204, 205, 206, 207, 209, 212, 213, 214, 215, 216, 220, 224, 230, 232, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 256, 259, 262, 263, 265, 266, 286, 345, 346, 351, 359, 370, 373, 376, 378, 381, 389, 392, 393, 394, 395, 397, 398, 401, 402, 404, 405, 406, 408, 413, 414, 464, 465, 466, 468, 470, 472, 473, 474, 476, 477, 480, 483, 484, 487, 488, 489, 490, 491, 493, 495, 497, 498, 502, 507, 508, 509, 512, 522, 523, 524, 525, 528, 531, 534, 535, 536, 547], "ordin": [218, 229], "ordinari": [139, 185, 208], "orient": [92, 411, 506], "origin": [68, 105, 110, 133, 139, 141, 220, 224, 237, 259, 265, 275, 277, 473, 474, 478, 524], "ortho": [10, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145], "orthogon": [215, 227], "orthonorm": 227, "other": [40, 51, 68, 69, 70, 106, 110, 113, 134, 135, 136, 139, 141, 155, 163, 181, 213, 215, 223, 224, 265, 282, 283, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 346, 415, 459, 474, 479, 524, 531, 537, 547], "otherwis": [3, 12, 13, 14, 15, 16, 17, 18, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 98, 99, 101, 106, 108, 110, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 148, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 179, 180, 181, 185, 187, 191, 193, 194, 203, 204, 205, 206, 207, 218, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 261, 262, 263, 264, 266, 268, 269, 272, 273, 274, 275, 276, 277, 278, 346, 376, 392, 393, 395, 397, 398, 404, 405, 406, 407, 408, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 469, 470, 471, 472, 473, 476, 477, 483, 484, 487, 488, 489, 491, 493, 495, 497, 498, 499, 501, 502, 503, 507, 508, 511, 522, 523, 529, 531, 534, 535, 536], "otim": [232, 509], "out": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 217, 219, 220, 223, 224, 225, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 341, 342, 343, 344, 347, 348, 351, 352, 353, 359, 361, 364, 365, 366, 371, 377, 383, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 522, 523, 527, 528, 529, 530, 531, 533, 534, 535, 536], "outer": [6, 92, 105, 115, 116, 202], "output": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 108, 109, 110, 113, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 144, 145, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 179, 180, 181, 183, 184, 187, 188, 189, 191, 193, 194, 201, 203, 204, 205, 206, 207, 223, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 269, 270, 271, 273, 275, 276, 277, 278, 346, 351, 392, 393, 395, 396, 397, 398, 404, 405, 406, 407, 408, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 470, 471, 473, 476, 477, 481, 483, 485, 487, 488, 489, 490, 491, 493, 495, 497, 498, 499, 501, 502, 503, 505, 507, 508, 510, 511, 514, 516, 520, 522, 523, 524, 527, 528, 529, 531, 534, 535, 536, 547, 551], "outsid": [175, 176], "over": [10, 17, 22, 24, 58, 60, 93, 94, 95, 96, 97, 109, 110, 115, 116, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 149, 151, 163, 169, 175, 176, 185, 210, 220, 224, 232, 236, 237, 238, 250, 251, 253, 255, 257, 259, 261, 270, 271, 272, 273, 274, 275, 276, 277, 278, 359, 407, 411, 415, 442, 447, 458, 459, 464, 469, 474, 501, 503, 505, 506, 509, 513, 527, 529, 531, 547], "overal": [129, 131, 135, 136, 140, 141, 143, 145], "overflow": 154, "overlin": [236, 531], "overrid": [92, 118, 167, 398, 536], "overview": 2, "overwrite_input": 258, "p": [10, 209, 218, 221, 417, 420, 425, 431, 434, 527], "pack": [105, 464, 547], "packag": [0, 3], "packbit": 6, "pad": [6, 113, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 474], "pad_valu": 400, "pad_width": 400, "padder": 400, "padding_func": 400, "page": [3, 547], "pair": [10, 116, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 210, 213], "parallel": [1, 3, 4, 9, 537], "paramet": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 351, 356, 359, 361, 376, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "parameter": [415, 437, 459], "parametr": 513, "pareto": 6, "pars": [162, 239], "part": [3, 10, 14, 15, 21, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 110, 139, 157, 158, 183, 189, 190, 197, 198, 213, 214, 216, 252, 256, 262, 264, 360, 374, 400, 466, 467, 494, 516, 520, 523, 524, 544], "partial": [35, 258, 493], "particular": [113, 223], "particularli": 115, "partit": [6, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 493, 514, 516, 520, 528, 535, 536, 544], "pass": [25, 38, 42, 43, 44, 45, 46, 47, 83, 101, 102, 104, 110, 113, 117, 118, 126, 130, 144, 161, 162, 163, 164, 165, 166, 167, 176, 181, 184, 201, 218, 239, 252, 260, 267, 351, 376, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 472, 514, 516, 517, 520, 521, 528, 531, 535, 536], "past": 71, "path": [4, 115, 116, 162, 239], "path_info": 116, "pathlib": 239, "pattern": 58, "pearson": 86, "penros": 226, "per": [115, 130, 144, 465], "percentil": [6, 258], "perf_count": 0, "perform": [17, 22, 43, 44, 60, 76, 106, 115, 129, 131, 134, 135, 136, 140, 141, 143, 145, 151, 208, 231, 407, 503], "perhap": 472, "period": [10, 527], "permit": 162, "permut": [6, 110, 115, 265, 389, 402, 512, 547], "permute_dim": [6, 512], "perpendicular": 92, "pg": 224, "phase": [10, 21, 527], "phase_deg": 527, "pi": [0, 9, 10, 14, 26, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 98, 99, 128, 413, 489, 490, 491, 507, 508, 513, 527, 551], "pickl": [162, 239], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 17, 18, 22, 23, 24, 37, 76, 78, 79, 94, 95, 96, 97, 100, 109, 110, 123, 125, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 160, 184, 186, 188, 253, 255, 257, 258, 261, 267, 270, 271, 273, 275, 276, 277, 278, 359, 379, 381, 389, 396, 400, 407, 410, 411, 452, 473, 474, 478, 481, 493, 500, 501, 503, 505, 511, 529, 544], "plane": 480, "platform": [94, 95, 96, 97, 113, 270, 271, 275, 277, 407, 503], "pleas": [0, 3, 41, 111, 115, 175, 177, 532, 544], "plot": 453, "plt": [259, 453], "plu": [240, 241, 243], "plugin": 4, "point": [10, 12, 13, 21, 25, 31, 37, 42, 43, 53, 58, 71, 84, 93, 113, 117, 118, 122, 126, 127, 128, 133, 134, 138, 139, 140, 141, 142, 147, 148, 154, 161, 162, 163, 165, 166, 167, 171, 180, 181, 183, 204, 218, 221, 238, 239, 244, 245, 251, 257, 258, 267, 273, 276, 278, 393, 397, 398, 415, 444, 456, 466, 468, 469, 481, 483, 484, 490, 501, 513, 514, 529, 535, 536, 547], "pointer": [71, 113], "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 80, 81, 84, 88, 89, 98, 99, 108, 110, 119, 121, 122, 124, 127, 148, 154, 155, 156, 157, 158, 159, 168, 172, 173, 174, 179, 180, 183, 187, 191, 193, 194, 203, 204, 205, 206, 207, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 256, 262, 263, 266, 392, 393, 395, 404, 405, 406, 408, 413, 414, 415, 442, 466, 468, 470, 476, 477, 481, 483, 487, 488, 489, 490, 491, 495, 497, 498, 502, 507, 508, 522, 523], "portion": [175, 176], "posinf": 267, "posit": [6, 10, 17, 18, 22, 25, 37, 42, 43, 44, 59, 73, 84, 104, 105, 110, 123, 126, 127, 129, 131, 134, 135, 136, 139, 142, 144, 147, 154, 162, 188, 191, 193, 194, 195, 196, 208, 221, 233, 265, 267, 272, 274, 277, 370, 384, 392, 402, 417, 441, 478, 479, 481, 483, 485, 497, 498, 511, 512], "possess": 213, "possibl": [10, 50, 51, 56, 57, 60, 110, 111, 115, 116, 123, 157, 158, 171, 175, 177, 252, 346, 376, 402, 411, 464, 473, 496, 499, 504, 505, 506, 512, 532], "possibli": 46, "pow": [6, 406, 544], "power": [6, 10, 122, 128, 154, 221, 405, 498, 528], "pre": 176, "precis": [12, 13, 58, 94, 95, 96, 97, 113, 115, 147, 154, 183, 218, 235, 252, 270, 271, 275, 277, 407, 466, 503, 511], "predecessor": 527, "prefer": [75, 83, 100, 110, 351, 379, 394, 464], "prepend": [38, 106, 114, 510], "present": [25, 38, 42, 43, 44, 45, 46, 47, 83, 101, 102, 104, 110, 113, 117, 118, 126, 130, 144, 161, 162, 163, 164, 165, 166, 167, 181, 184, 239, 252, 260, 272, 274, 277, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 514, 516, 520, 528, 535, 536], "preserv": [51, 55, 56, 57, 76, 110, 113, 115, 151, 152, 153, 154, 214, 215, 216, 258, 346, 464, 472, 511, 524], "press": [10, 224], "prevent": 115, "previou": [58, 400], "print": [0, 4, 44, 58, 82, 107, 113, 116, 415, 434, 439], "print_device_info": 0, "printabl": 116, "printopt": 6, "prior": 106, "prob1": [244, 245], "prob12": [244, 245], "prob2": [244, 245], "probabl": [175, 245, 258, 417, 425, 434], "proce": 544, "process": [10, 490], "processor": 115, "prod": [6, 94, 96, 110, 233, 234, 275, 544], "produc": [10, 36, 113, 239, 411, 484, 506], "product": [86, 92, 94, 96, 109, 110, 115, 116, 185, 201, 202, 210, 219, 223, 225, 229, 232, 233, 234, 236, 253, 266, 270, 275, 352, 399, 407, 509, 530, 531, 547], "program": [4, 155, 537, 547], "progress": [169, 238], "project": [4, 113, 236, 408, 531], "promot": [14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 61, 63, 65, 66, 67, 72, 73, 84, 88, 89, 98, 99, 108, 121, 122, 124, 154, 156, 157, 158, 159, 169, 179, 205, 238, 240, 241, 242, 243, 244, 245, 250, 253, 256, 262, 263, 266, 393, 405, 406, 413, 414, 468, 470, 475, 476, 483, 487, 489, 490, 491, 495, 497, 498, 502, 507, 508, 510, 522, 523, 531], "promote_typ": 6, "propag": [113, 157, 158, 255, 256, 261, 262, 270, 271, 272, 274, 275, 277], "proper": [157, 158, 213, 215], "properti": [10, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 214, 216, 227, 238, 239, 250, 252, 260, 280, 346, 351, 355, 357, 358, 360, 362, 363, 367, 368, 374, 379, 380, 384, 389, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 535, 536, 544], "proport": 490, "protocol": [46, 113, 160], "prototyp": 118, "provid": [0, 6, 10, 33, 34, 38, 59, 78, 79, 85, 93, 110, 111, 115, 116, 123, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 164, 175, 176, 178, 195, 196, 222, 226, 251, 268, 269, 272, 274, 275, 277, 415, 443, 446, 469, 472, 482, 500, 505, 513, 524, 531, 533, 534, 551], "pseudo": [226, 415], "ptp": 6, "pure": [10, 133, 139, 141, 142], "purpos": [36, 218, 224], "put": [6, 10, 110, 125, 133, 139, 141, 403, 411, 506, 544], "put_along_axi": [6, 410, 506], "putmask": [6, 410], "pval": 432, "py": 4, "pypi": 4, "pyplot": [259, 453], "pytest": 4, "python": [0, 2, 3, 46, 59, 110, 113, 159, 160, 263, 361, 470, 471, 544], "q": [215, 221, 227, 234, 258], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [21, 28, 30, 48, 52, 129], "quantil": 6, "quaternion": 221, "question": 101, "queue": [25, 38, 42, 43, 44, 45, 46, 47, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 535, 536], "quick": [2, 3], "quickest": 464, "quickli": [201, 551], "quicksort": [35, 493], "quotient": [31, 53], "r": [86, 92, 99, 227], "r1": 86, "r2": [86, 227], "r3": 86, "rad": 99, "rad2deg": [6, 98, 99, 527], "radian": [6, 14, 15, 21, 26, 27, 28, 30, 31, 48, 52, 53, 98, 99, 413, 527, 551], "radixsort": [35, 493], "rais": [12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 80, 81, 83, 84, 85, 88, 89, 93, 98, 99, 107, 108, 109, 110, 111, 117, 118, 119, 121, 122, 124, 126, 127, 148, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 177, 179, 181, 187, 191, 193, 194, 203, 204, 205, 206, 207, 221, 223, 224, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 261, 262, 263, 266, 268, 269, 272, 273, 274, 276, 277, 278, 346, 347, 363, 392, 393, 395, 397, 398, 404, 405, 406, 407, 408, 413, 414, 464, 465, 468, 469, 470, 472, 473, 476, 477, 483, 487, 488, 489, 491, 493, 495, 496, 497, 498, 499, 501, 502, 503, 507, 508, 522, 523, 529, 531, 532, 535, 536, 544], "ramp": 400, "rand": [6, 86, 116, 415, 445, 447, 448, 450], "randint": [6, 110, 361, 415, 446], "randn": [6, 151, 152, 153, 226, 227, 230, 234, 415, 500], "random": [86, 110, 116, 151, 152, 153, 215, 223, 226, 227, 230, 234, 361, 500, 537, 547], "random_integ": [6, 415, 443], "random_sampl": [6, 415, 442, 445, 448, 450], "randomli": 439, "randomst": 443, "ranf": 6, "rang": [0, 59, 107, 164, 175, 176, 232, 245, 402, 409, 410, 434, 439, 465, 471, 500, 509, 512, 527, 547], "rank": [123, 125, 163, 218, 222, 235, 400, 504], "rate": [130, 144], "rather": 394, "ratio": [0, 108, 156, 218, 522, 551], "ration": 547, "ravel": [6, 110, 125, 150, 224, 359, 399, 473, 544], "ravel_multi_index": [6, 525], "raveled_indic": 465, "raw": 227, "rayleigh": 6, "rcond": [218, 226], "re": [33, 34, 101, 139, 478], "read": [101, 105, 110, 113, 161, 162, 164, 165, 239, 359, 464, 473], "readonli": 113, "real": [6, 12, 13, 14, 15, 21, 25, 26, 27, 28, 29, 30, 31, 32, 39, 48, 49, 52, 53, 54, 73, 74, 84, 93, 110, 128, 131, 133, 138, 139, 140, 141, 142, 143, 145, 147, 155, 157, 158, 159, 179, 183, 189, 197, 198, 208, 213, 214, 215, 216, 222, 226, 227, 228, 230, 244, 245, 251, 256, 262, 263, 267, 276, 278, 417, 434, 467, 468, 469, 470, 483, 494, 495, 501, 523, 524, 529, 544, 547], "real_if_clos": [6, 21, 183, 466], "rearrang": [110, 370, 547], "reason": 141, "rebuild": 112, "recal": 113, "recent": [23, 60, 499], "recip": [4, 10], "reciproc": [6, 483, 497], "recommend": [115, 394, 510], "reconstruct": [113, 230, 524], "recov": 10, "reduc": [17, 22, 33, 34, 58, 227, 230, 251, 255, 257, 258, 259, 261, 268, 269, 272, 273, 274, 275, 276, 277, 278, 407, 469, 474, 501, 503, 529], "reduce_hypot": 179, "reduct": [17, 22], "redund": 142, "refer": [0, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 359, 360, 361, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 544], "reflect": [400, 544], "reflect_typ": 400, "reflector": 227, "regardless": [113, 214, 216, 532], "regular": 239, "rel": [18, 35, 110, 188, 212, 222, 235, 384, 478, 479, 493], "relat": 113, "relationship": 86, "relev": [113, 169, 238, 250], "rem": 159, "remain": [17, 22, 58, 116, 143, 145, 175, 251, 257, 258, 265, 273, 276, 278, 469, 473, 501, 529], "remaind": [6, 156, 159, 263, 405, 406], "remov": [24, 33, 34, 98, 100, 105, 110, 123, 139, 212, 235, 382, 407, 413, 499, 503, 531, 547], "reorder": [115, 151, 234, 265], "rep": 510, "repeat": [6, 110, 129, 131, 135, 136, 140, 141, 143, 145, 146, 213, 214, 215, 216, 259, 403, 474, 510, 513, 524, 544], "repeatedli": [24, 115], "repetit": [0, 471, 510], "replac": [3, 10, 24, 46, 76, 125, 267, 270, 271, 403, 411, 420, 473, 485, 544], "replic": 510, "repo": 4, "repr": 323, "repres": [10, 25, 38, 42, 43, 45, 46, 47, 58, 59, 61, 62, 64, 65, 67, 86, 113, 116, 134, 142, 160, 163, 169, 171, 184, 187, 228, 238, 250, 259, 278, 400, 415, 474, 518, 524, 544], "represent": [59, 61, 62, 63, 64, 65, 66, 67, 116, 147, 182, 184, 187, 205, 267, 393, 476, 495, 544], "request": 479, "requir": [4, 6, 38, 43, 44, 45, 47, 51, 96, 97, 110, 113, 115, 127, 184, 267, 346, 379, 400, 473, 474], "res_cpu": 101, "res_host": 101, "resampl": 490, "rese": 451, "reset": 544, "reshap": [0, 6, 16, 33, 34, 36, 55, 57, 58, 101, 102, 103, 105, 108, 109, 110, 111, 112, 115, 123, 125, 132, 137, 151, 159, 177, 184, 185, 186, 201, 202, 212, 219, 220, 224, 232, 235, 237, 252, 253, 255, 261, 266, 354, 359, 363, 379, 389, 400, 403, 439, 464, 472, 474, 478, 480, 502, 509, 511, 513, 516, 517, 520, 521, 522, 524, 526, 532, 544], "resid": [123, 127, 160], "residu": 218, "resiz": [6, 123, 544], "resolut": 147, "resolv": [93, 123, 251, 469], "resourc": 0, "respect": [16, 31, 53, 59, 61, 63, 65, 66, 67, 108, 110, 119, 154, 156, 159, 171, 172, 173, 205, 206, 207, 210, 244, 245, 246, 248, 249, 263, 266, 384, 395, 405, 406, 470, 476, 502, 522, 527], "rest": 41, "restor": 478, "restrict": 236, "result": [0, 4, 10, 17, 22, 31, 33, 34, 36, 38, 53, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 76, 78, 79, 84, 86, 90, 93, 94, 95, 96, 97, 100, 108, 109, 113, 116, 118, 119, 124, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 148, 154, 156, 161, 162, 163, 164, 165, 167, 169, 172, 173, 175, 176, 184, 187, 191, 193, 194, 195, 196, 204, 205, 206, 207, 208, 212, 213, 219, 220, 224, 227, 232, 237, 238, 239, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 258, 261, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 394, 395, 398, 399, 405, 406, 407, 410, 415, 417, 447, 469, 473, 475, 476, 477, 479, 481, 484, 487, 488, 490, 496, 500, 501, 503, 505, 506, 509, 510, 513, 518, 522, 523, 524, 526, 529, 531, 534, 536, 544], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 72, 113, 547], "ret": 414, "retain": 473, "retriev": [105, 113, 212], "retstep": 238, "return": [0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 350, 351, 352, 353, 354, 355, 357, 358, 359, 361, 364, 365, 366, 368, 369, 370, 371, 373, 376, 377, 380, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 414, 415, 418, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 544], "return_count": 524, "return_index": 524, "return_invers": 524, "reus": [160, 176], "revers": [105, 110, 146, 151, 152, 153, 212, 389, 402, 480, 512, 513, 526, 528], "rewrit": 218, "rfft": [6, 10, 130, 133, 138, 139, 140, 141, 143, 144, 145], "rfft2": [6, 140], "rfftfreq": [6, 130], "rfftn": [6, 128, 131, 141, 142, 143], "right": [10, 30, 52, 63, 66, 76, 92, 105, 107, 152, 153, 179, 205, 210, 213, 214, 215, 216, 223, 234, 252, 458, 469, 476, 484, 511, 513, 516, 520, 528], "right_shift": [6, 63, 66, 205], "rightmost": [175, 176, 234], "rint": [6, 37, 74, 148, 155, 481, 523], "rl": [225, 399], "roll": [6, 479], "rollaxi": [6, 478], "root": [6, 73, 179, 209, 468, 469, 483, 497, 498], "rot90": [6, 152, 153], "rotat": [152, 153, 480], "roughli": [113, 218], "round": [6, 25, 37, 74, 110, 133, 138, 148, 155, 156, 168, 213, 263, 470, 477, 523, 544, 547], "routin": [2, 537, 544], "row": [47, 51, 77, 78, 79, 86, 94, 95, 96, 97, 105, 110, 112, 126, 152, 153, 171, 178, 181, 184, 223, 230, 346, 394, 464, 465, 482, 496, 500, 514, 516, 524, 525, 532, 533], "row_stack": [6, 533], "rowvar": [86, 91], "rsqrt": [468, 497], "rtol": [18, 188, 222, 226], "rule": [14, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 58, 61, 63, 65, 66, 67, 72, 73, 84, 85, 88, 89, 92, 95, 97, 98, 99, 108, 121, 122, 124, 156, 157, 158, 159, 169, 179, 205, 210, 238, 240, 241, 242, 243, 244, 245, 250, 251, 253, 256, 257, 258, 262, 263, 266, 273, 276, 278, 393, 405, 406, 413, 414, 468, 469, 470, 475, 476, 483, 487, 489, 490, 491, 495, 497, 498, 501, 502, 503, 507, 508, 513, 522, 523, 529, 531], "run": [0, 4], "runtim": 4, "runtimewarn": [272, 274], "s1": [110, 113, 202, 384], "s10": 113, "s16": 113, "s2": [110, 113, 384], "s25": 113, "s3": [110, 384], "s_": 24, "safe": [51, 72, 78, 79, 85, 110, 115, 178, 253, 346, 482, 500, 531, 533], "sai": 473, "said": 234, "same": [4, 10, 12, 13, 16, 17, 18, 22, 23, 24, 31, 33, 34, 35, 36, 37, 39, 40, 45, 47, 50, 51, 53, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 76, 77, 78, 79, 84, 86, 93, 94, 95, 96, 97, 105, 106, 107, 108, 109, 110, 112, 118, 119, 123, 125, 134, 135, 136, 141, 146, 148, 154, 156, 157, 158, 159, 160, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 183, 185, 187, 188, 195, 196, 197, 202, 203, 204, 205, 206, 207, 210, 212, 215, 221, 226, 227, 231, 232, 235, 244, 245, 246, 248, 249, 251, 255, 256, 257, 258, 261, 262, 263, 266, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 376, 389, 393, 395, 398, 400, 403, 405, 406, 407, 411, 415, 437, 443, 459, 464, 466, 469, 470, 471, 473, 476, 478, 479, 482, 484, 485, 493, 499, 500, 501, 502, 503, 505, 506, 509, 511, 515, 517, 519, 521, 522, 525, 529, 530, 533, 536, 551], "same_kind": [51, 72, 78, 79, 85, 110, 115, 178, 253, 346, 482, 500, 531, 533], "sampl": [10, 130, 137, 139, 142, 144, 169, 171, 175, 238, 250, 411, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 506, 513, 516, 520, 537, 547], "sample_r": 144, "satisfi": [38, 43, 45, 47, 51, 110, 125, 217, 346, 403, 472, 485], "save": [6, 162, 258, 551], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [16, 18, 23, 31, 38, 39, 40, 42, 43, 45, 46, 47, 53, 61, 63, 65, 66, 67, 72, 83, 84, 85, 92, 101, 104, 106, 108, 109, 110, 113, 115, 116, 119, 125, 130, 144, 146, 154, 156, 157, 158, 159, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 179, 185, 186, 188, 190, 198, 199, 202, 203, 204, 205, 206, 207, 219, 229, 232, 238, 244, 245, 246, 248, 249, 250, 252, 253, 256, 259, 262, 263, 266, 356, 361, 391, 393, 395, 400, 403, 405, 406, 410, 411, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 437, 438, 440, 441, 443, 446, 449, 451, 455, 457, 458, 459, 460, 461, 462, 463, 467, 470, 476, 484, 485, 502, 505, 509, 513, 522, 523, 528, 530, 534, 544], "scale": [10, 116, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 169, 202, 227, 238, 250, 415, 422, 424, 426, 427, 428, 429, 437, 449, 454, 461], "scientif": 10, "scipi": 120, "scope": 4, "script": 4, "search": [116, 537, 547], "searchsort": [6, 107, 110, 175, 493, 544], "second": [16, 18, 31, 39, 40, 53, 58, 61, 63, 65, 66, 67, 71, 84, 92, 105, 108, 109, 113, 116, 119, 122, 129, 130, 131, 132, 135, 136, 139, 142, 144, 154, 156, 157, 158, 159, 168, 171, 172, 173, 175, 176, 177, 178, 179, 185, 188, 202, 203, 205, 206, 207, 210, 212, 219, 232, 235, 236, 244, 245, 246, 248, 249, 252, 253, 255, 256, 259, 261, 262, 263, 266, 395, 399, 405, 406, 470, 476, 480, 498, 502, 504, 509, 511, 522, 530, 531], "section": [4, 41, 113, 131, 136, 141, 145, 220, 237, 544], "see": [3, 37, 86, 113, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 160, 175, 218, 220, 237, 400, 432, 481, 516, 517, 520, 521, 524, 544], "seed": [6, 86, 110, 116, 361, 415], "seek": 162, "seldom": 154, "select": [6, 35, 85, 125, 255, 261, 493, 499, 505, 513, 537], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 535, 536], "self": [110, 113, 149, 281, 282, 283, 284, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 358, 415], "semant": 175, "sens": 234, "sep": [162, 165], "separ": [10, 110, 113, 115, 162, 165, 176, 267, 376, 474], "sequenc": [41, 46, 55, 56, 57, 77, 78, 79, 82, 87, 111, 112, 115, 116, 117, 118, 129, 131, 135, 136, 139, 140, 141, 143, 145, 166, 167, 169, 175, 176, 177, 178, 184, 186, 201, 223, 232, 238, 250, 258, 265, 397, 398, 400, 403, 439, 452, 471, 472, 475, 482, 496, 500, 509, 513, 526, 532, 533, 535, 536], "sequenti": [87, 91, 120, 264, 275], "seri": [10, 139, 431], "serv": 526, "set": [10, 24, 33, 34, 35, 38, 51, 60, 75, 86, 90, 101, 102, 104, 107, 110, 113, 115, 117, 166, 175, 176, 181, 184, 220, 222, 224, 225, 226, 237, 238, 255, 261, 268, 269, 277, 336, 346, 347, 358, 379, 397, 398, 399, 400, 407, 485, 487, 488, 493, 503, 516, 520, 535, 536, 544], "set_bit_gener": 6, "set_printopt": 6, "set_stat": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "setfield": [6, 113], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 217, "shape": [4, 6, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 45, 48, 49, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 106, 107, 108, 109, 110, 112, 113, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 154, 155, 156, 157, 158, 159, 163, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 191, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 211, 212, 217, 218, 219, 220, 221, 223, 227, 228, 229, 230, 232, 233, 234, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 368, 376, 380, 382, 389, 391, 392, 393, 395, 396, 397, 398, 400, 402, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 424, 427, 432, 433, 438, 442, 443, 444, 445, 446, 447, 448, 450, 455, 456, 462, 464, 465, 466, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 514, 515, 517, 519, 520, 521, 522, 523, 525, 526, 529, 531, 532, 533, 534, 535, 536, 537, 547], "share": [25, 38, 42, 43, 44, 45, 46, 47, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 514, 516, 520, 528, 535, 536], "shared_bin": 176, "shares_memori": 6, "shift": [10, 63, 66, 129, 131, 132, 136, 137, 205, 476, 478], "short": [490, 523, 531, 544], "shortcut": 400, "shorter": [133, 139], "shorthand": [12, 13, 16, 61, 62, 63, 64, 65, 66, 67, 108, 119, 156, 172, 173, 187, 205, 206, 207, 246, 248, 253, 263, 266, 392, 395, 404, 405, 406, 470, 476, 502, 522, 534], "should": [24, 33, 34, 38, 41, 51, 105, 107, 109, 110, 115, 116, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 159, 162, 170, 175, 186, 201, 218, 221, 232, 253, 265, 268, 269, 272, 274, 346, 378, 400, 432, 465, 473, 474, 484, 495, 505, 509, 511, 525, 527, 531, 544], "show": [9, 40, 113, 146, 179, 249, 259, 267, 270, 271, 272, 274, 277, 453], "show_config": 6, "show_runtim": 6, "shown": 4, "shuffl": 6, "side": [110, 171, 215, 378, 484], "sigma": [430, 437], "sign": [6, 10, 18, 59, 84, 113, 188, 211, 228, 263, 392, 404, 407, 470, 488, 503, 523], "signal": [10, 130, 133, 138, 139, 141, 144, 490, 527], "signatur": [252, 253, 400, 531], "signbit": [6, 487], "signific": 115, "significantli": 59, "signum": 487, "similar": [3, 42, 43, 110, 113, 169, 186, 210, 212, 219, 225, 235, 236, 238, 250, 252, 351, 379, 403, 415, 443, 516, 517, 520, 521], "simpl": [4, 249, 547], "simpli": [103, 110, 162, 175, 176, 204, 389], "sin": [0, 6, 28, 29, 48, 49, 88, 215, 259, 490, 491, 507, 513], "sinc": [6, 86, 110, 139, 213, 215, 381, 394, 526], "sine": [14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 489, 490, 491, 507, 508], "sing": 224, "singl": [9, 10, 35, 69, 70, 77, 86, 110, 115, 116, 171, 186, 223, 232, 255, 261, 361, 382, 407, 415, 434, 443, 444, 445, 446, 447, 448, 450, 456, 503, 509, 513, 531, 544], "singleton": [17, 22, 58, 123, 251, 257, 258, 272, 273, 274, 276, 278, 469, 499, 501, 529], "singular": [217, 218, 222, 224, 226, 230, 231], "sinh": [6, 15, 27, 29, 49, 89, 489, 508], "sinu": 490, "size": [0, 6, 25, 33, 34, 38, 41, 58, 60, 71, 78, 79, 87, 90, 91, 94, 95, 102, 107, 110, 111, 113, 116, 125, 128, 130, 134, 144, 162, 169, 171, 177, 178, 210, 212, 220, 224, 225, 227, 230, 232, 236, 237, 238, 250, 252, 255, 257, 261, 268, 269, 270, 271, 273, 275, 277, 361, 362, 379, 397, 403, 407, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 474, 478, 482, 496, 499, 500, 503, 509, 520, 526, 527, 531, 532, 533, 535, 544], "skip": 105, "slice": [24, 100, 125, 186, 268, 269, 272, 273, 274, 276, 278, 410, 411, 485, 506, 513, 520, 521, 544], "slogdet": [6, 211], "slower": [232, 509], "slowest": [110, 359, 464, 473], "small": [18, 124, 188, 218, 226, 242, 244, 245, 267, 520], "smaller": [106, 110, 128, 129, 131, 134, 135, 136, 138, 140, 141, 142, 143, 145, 147, 218, 263, 370, 403, 470, 527], "smallest": [147, 182, 224, 524], "smallest_norm": 147, "smat": 230, "so": [10, 14, 15, 17, 22, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 58, 113, 119, 133, 138, 154, 175, 186, 198, 232, 238, 245, 251, 257, 258, 259, 273, 276, 278, 453, 469, 501, 509, 510, 529], "softwar": 4, "solut": [218, 229, 474], "solv": [6, 218, 233, 234, 547], "some": [25, 113, 123, 125, 155, 185, 218, 400, 403, 527, 534, 544], "sometim": [174, 544], "somewhat": 221, "sophist": 221, "sort": [6, 24, 35, 41, 110, 111, 177, 230, 258, 345, 370, 402, 484, 494, 496, 506, 512, 513, 524, 532, 537, 544, 547], "sort_complex": 6, "sorter": [110, 378, 484], "sought": 209, "sourc": [4, 17, 18, 19, 20, 22, 23, 24, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 56, 57, 58, 59, 60, 68, 69, 70, 71, 72, 75, 76, 77, 79, 82, 83, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 175, 176, 177, 178, 181, 182, 184, 185, 186, 188, 189, 190, 192, 195, 196, 197, 198, 199, 200, 201, 202, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 391, 394, 397, 398, 399, 400, 401, 403, 407, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 471, 472, 473, 474, 475, 478, 479, 480, 484, 485, 486, 492, 493, 494, 496, 499, 500, 501, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "space": [6, 25, 130, 132, 144, 162, 169, 171, 238, 250, 513, 551], "spars": [184, 259], "speak": 224, "special": [2, 113, 120, 537, 547], "specif": [0, 4, 113, 163], "specifi": [17, 22, 23, 24, 25, 33, 34, 35, 37, 38, 42, 43, 44, 45, 47, 58, 59, 70, 72, 78, 79, 83, 93, 94, 95, 96, 97, 100, 101, 104, 105, 110, 115, 116, 117, 118, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 151, 154, 161, 162, 163, 164, 166, 167, 169, 171, 181, 192, 212, 214, 216, 224, 232, 233, 234, 235, 236, 237, 238, 239, 250, 251, 257, 258, 260, 270, 271, 273, 275, 276, 277, 278, 345, 354, 361, 396, 397, 398, 402, 403, 407, 410, 411, 415, 428, 438, 456, 464, 465, 469, 472, 474, 478, 479, 480, 481, 485, 492, 500, 501, 503, 505, 506, 509, 511, 512, 513, 514, 524, 526, 528, 529, 531, 535, 536], "spectrum": [10, 132, 133, 137, 138], "speed": 115, "speedup": 116, "spell": 394, "split": [6, 41, 78, 79, 111, 112, 177, 178, 482, 500, 526, 532, 533, 547], "spreadsheet": 155, "sqrt": [6, 10, 73, 110, 360, 374, 469, 483, 498], "squar": [6, 73, 179, 181, 208, 209, 213, 214, 215, 217, 218, 221, 228, 233, 234, 252, 276, 278, 419, 435, 468, 469, 483, 485, 497, 501, 517, 521, 528, 529], "squeez": [6, 110, 123, 544], "src": 85, "stabil": [35, 493], "stabl": [35, 493], "stack": [6, 77, 78, 79, 112, 178, 211, 212, 219, 220, 222, 226, 227, 228, 231, 235, 253, 254, 394, 482, 496, 506, 526, 533], "stai": 76, "stand": 171, "standard": [110, 147, 156, 159, 257, 263, 273, 276, 278, 361, 383, 415, 430, 437, 444, 453, 454, 455, 456, 457, 470, 501, 529, 544, 547], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 415, 444], "standard_t": 6, "start": [2, 3, 25, 45, 47, 116, 130, 134, 144, 161, 169, 238, 250, 252, 474, 479, 516, 520], "start_tim": 0, "stat_length": 400, "state": 415, "statist": [400, 537, 547], "std": [6, 110, 257, 273, 276, 278, 529, 544], "stdev": [415, 456], "step": [4, 25, 116, 169, 174, 238, 250], "sticki": 113, "still": [58, 177, 224, 532], "stop": [25, 169, 238, 250], "store": [148, 169, 195, 196, 235, 238, 245, 250, 253, 399, 531], "str": [44, 46, 59, 78, 79, 113, 115, 116, 162, 165, 178, 239, 337, 400, 472, 482, 500, 518, 533], "str_": 113, "straightforward": 184, "strictli": 224, "stride": [50, 51, 110, 346], "string": [25, 38, 42, 43, 44, 45, 46, 47, 51, 59, 61, 62, 63, 64, 65, 66, 67, 83, 101, 102, 104, 110, 113, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 187, 205, 238, 239, 250, 252, 260, 346, 351, 396, 397, 398, 400, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 476, 514, 516, 518, 520, 528, 535, 536, 544], "string_repr": 116, "stringio": 239, "strongli": [4, 510], "struct": 113, "structur": [113, 239], "student": 457, "style": [51, 110, 346, 394, 400, 464, 465, 525], "sub": [41, 78, 79, 100, 105, 111, 113, 115, 177, 178, 234, 235, 482, 496, 500, 511, 514, 526, 532, 533], "subarrai": [100, 113, 184, 524], "subclass": [43, 472], "subdiagon": [212, 235], "subdivid": 113, "subdtyp": 113, "subject": 4, "subok": [12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 38, 48, 49, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 80, 81, 83, 84, 88, 89, 98, 99, 108, 110, 118, 119, 121, 122, 124, 127, 148, 154, 155, 156, 157, 158, 159, 167, 168, 172, 173, 174, 179, 187, 191, 193, 194, 203, 204, 205, 206, 207, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 256, 262, 263, 266, 346, 392, 393, 395, 398, 404, 405, 406, 408, 413, 414, 468, 470, 476, 477, 483, 487, 488, 489, 491, 495, 497, 498, 502, 507, 508, 522, 523, 531, 536], "subscript": [115, 116], "subset": [3, 171, 499, 547], "subtract": [6, 400], "subtyp": 464, "succeed": 114, "success": [44, 417, 425, 434], "suffici": 59, "sugar": [103, 517, 521], "suggest": 105, "suit": 4, "suitabl": [36, 110, 361, 389, 411, 474, 484, 506], "sum": [0, 3, 4, 6, 10, 16, 58, 60, 93, 95, 96, 97, 101, 104, 105, 106, 109, 110, 115, 134, 175, 179, 185, 209, 218, 219, 224, 232, 233, 235, 244, 245, 251, 253, 270, 271, 277, 353, 388, 417, 432, 434, 469, 509, 511, 513, 531, 544, 547], "sum_": [10, 224, 236, 531], "sum_along_diagon": 511, "sum_of_weight": 58, "summari": 537, "summat": [109, 115, 116, 185, 232, 234, 253, 399, 509, 531], "superdiagon": [212, 235], "suppli": [133, 138, 223, 400, 415, 444], "support": [3, 4, 9, 12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 80, 81, 83, 84, 87, 88, 89, 91, 98, 99, 108, 110, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 148, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 179, 181, 186, 187, 191, 193, 194, 203, 204, 205, 206, 207, 210, 212, 219, 225, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 255, 256, 257, 261, 262, 263, 264, 266, 268, 269, 272, 273, 274, 275, 276, 277, 278, 346, 379, 392, 393, 395, 397, 398, 401, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 470, 472, 476, 477, 483, 487, 488, 489, 493, 495, 497, 498, 501, 502, 503, 507, 508, 522, 523, 529, 531, 535, 536, 551], "sure": 472, "surnam": 113, "surpris": [134, 135, 136], "svd": [6, 209, 217, 222, 226, 231], "svdval": 6, "swap": [113, 129, 132, 504], "swapax": [6, 110, 265, 544], "swapped_cod": 113, "swapped_dt": 113, "sy": 113, "sycl": [0, 3, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 535, 536], "sycl_context": 110, "sycl_devic": 110, "sycl_queu": [25, 38, 42, 43, 44, 45, 46, 47, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 535, 536], "sycldevic": [25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 535, 536], "syclqueu": [25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 160, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 346, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 514, 516, 520, 528, 535, 536], "symmetr": [133, 139, 141, 142, 208, 213, 214, 215, 216, 222, 226, 230, 400], "symmetri": [10, 128, 133, 138, 139, 142], "syntact": [103, 517, 521], "syntax": 544, "sys_is_l": 113, "system": [3, 4, 59, 229], "t": [10, 78, 79, 91, 110, 113, 133, 192, 208, 213, 215, 218, 389, 394, 457, 464, 513], "t1": 551, "tabl": [2, 9, 220, 237, 537], "tack": 113, "take": [6, 77, 110, 125, 201, 252, 403, 411, 464, 473, 484, 485, 490, 506, 524, 527, 544, 551], "take_along_axi": [6, 33, 34, 35, 75, 411, 505], "taken": [58, 105, 106, 114, 116, 133, 139, 140, 141, 142, 143, 145, 174, 175, 253, 276, 278, 485, 501, 511, 514, 516, 520, 529, 530, 531], "tall": 146, "tan": [6, 28, 30, 31, 32, 48, 52, 53, 54, 88, 489, 508], "tangent": [14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 489, 491, 507, 508], "tanh": [6, 15, 27, 32, 54, 89, 491, 507], "target": [51, 72, 110, 346, 410], "target_devic": 110, "tau": 227, "tbb": 4, "tempfil": 162, "temporari": [162, 551], "temporaryfil": 162, "ten": 425, "tensor": [46, 110, 115, 116, 160, 232, 233, 234, 268, 269, 272, 274, 275, 409, 509], "tensordot": [6, 109, 115, 185, 233, 234, 253, 399], "tensorinv": [6, 234], "tensorsolv": [6, 233], "term": [10, 16, 108, 116, 128, 129, 131, 134, 135, 136, 139, 142, 266, 502, 522], "test": [0, 2, 17, 18, 22, 119, 172, 173, 189, 191, 193, 194, 195, 196, 206, 207, 275, 394, 395, 417, 544, 547], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [161, 162, 164, 165, 239], "th": [95, 97, 101, 104, 106, 110, 114, 126, 171, 184, 258, 389, 396, 402, 485, 512, 515, 517, 519, 521], "than": [24, 38, 63, 66, 94, 95, 96, 97, 110, 111, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 147, 152, 153, 156, 163, 172, 173, 175, 176, 178, 205, 206, 207, 218, 222, 226, 227, 232, 235, 270, 271, 275, 277, 363, 370, 394, 400, 403, 407, 474, 476, 485, 487, 499, 500, 503, 509, 511, 523, 527, 551], "thei": [18, 40, 113, 188, 192, 204, 215, 218, 232, 482, 484, 509, 513, 516, 520, 527, 528, 533, 544], "them": [77, 222, 226, 544], "theor": 213, "theoret": 116, "therefor": [61, 67, 128, 142, 163, 214, 216, 474], "theta": 513, "thi": [10, 12, 13, 19, 20, 23, 24, 25, 31, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 50, 51, 53, 76, 78, 79, 83, 86, 90, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 150, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 176, 178, 190, 192, 198, 201, 210, 212, 214, 216, 218, 219, 220, 223, 224, 225, 228, 231, 235, 236, 237, 238, 239, 242, 244, 245, 250, 251, 252, 253, 255, 258, 261, 263, 265, 267, 268, 269, 272, 274, 275, 277, 346, 351, 356, 359, 361, 370, 376, 389, 394, 400, 403, 407, 410, 411, 448, 450, 464, 469, 470, 472, 473, 474, 479, 480, 482, 493, 500, 503, 505, 506, 510, 513, 517, 521, 524, 526, 527, 528, 531, 533, 534], "thing": 505, "think": [400, 473], "third": [77, 78, 79, 92, 111, 112, 129, 178, 232, 482, 496, 500, 509, 533], "those": [10, 24, 76, 86, 100, 221, 411], "though": 134, "thousand": 425, "three": [55, 56, 57, 123, 221, 232, 252, 415, 451, 509, 524], "threshold": 222, "through": [43, 113, 176, 201, 213, 215, 218, 252, 472, 544], "throw": 432, "thu": [10, 133, 139, 141, 510], "tile": [6, 471, 547], "time": [0, 10, 16, 18, 31, 39, 40, 53, 61, 63, 65, 66, 67, 84, 106, 108, 109, 119, 129, 131, 133, 135, 136, 138, 140, 141, 143, 145, 154, 156, 157, 158, 159, 168, 172, 173, 174, 179, 185, 186, 188, 194, 202, 203, 204, 205, 206, 207, 218, 222, 226, 232, 244, 245, 246, 248, 249, 256, 262, 263, 266, 393, 395, 400, 405, 406, 417, 432, 470, 476, 480, 490, 502, 506, 509, 510, 522, 524, 530], "time_dpnp": 0, "time_numpi": 0, "timedelta": 113, "timeit": 115, "timestep": 130, "tini": 147, "titl": 113, "tm": 159, "to_begin": 114, "to_devic": [6, 110], "to_end": 114, "tobyt": 6, "todo": 435, "tofil": [6, 162], "togeth": [18, 78, 79, 113, 134, 188, 201, 500, 534], "tol": [222, 433, 467], "toler": [18, 39, 188, 222, 467], "tolist": 6, "too": [4, 129, 131, 135, 136, 140, 141, 143, 145, 534], "toolkit": 3, "tostr": 6, "total": [6, 90, 94, 96, 110, 367, 474, 492, 501, 529], "toward": [37, 74, 148, 155, 156, 175, 176, 263, 393, 470, 477, 480, 481, 523], "trace": [6, 101, 104, 105, 110, 115, 544], "traceback": [23, 60, 499], "trail": 518, "transfer": 110, "transform": [116, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 537, 547], "transpos": [6, 36, 86, 110, 115, 192, 208, 215, 254, 265, 280, 363, 402, 544, 547], "trapezoid": [6, 95, 97, 503], "trapz": 6, "treat": [18, 86, 100, 133, 139, 141, 162, 171, 188, 214, 216, 218, 223, 239, 258, 270, 271, 275, 277, 407, 411, 484, 506, 510, 524, 527, 544], "tri": 6, "trial": 417, "triangl": [101, 179, 252, 469, 514, 515, 516, 517, 519, 520, 521], "triangular": [6, 208, 214, 216, 227, 252, 516, 517, 520, 521], "trigonometr": [14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 489, 491, 507, 508, 547], "tril": [6, 101, 252, 514, 516, 517, 520], "tril_indic": [6, 252, 517, 520], "tril_indices_from": [6, 521], "trili": 517, "trili1": 517, "trim": [129, 131, 135, 136, 140, 141, 143, 145, 518], "trim_zero": 6, "triu": [6, 101, 252, 514, 516, 520, 521], "triu_indic": [6, 252, 516, 521], "triu_indices_from": [6, 517], "triui": 521, "triuim1": 521, "trivial": [213, 506], "true": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 43, 45, 47, 48, 49, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 95, 96, 97, 98, 99, 107, 108, 110, 113, 115, 116, 119, 121, 122, 123, 124, 125, 127, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 168, 169, 172, 173, 174, 175, 179, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 217, 220, 222, 224, 226, 227, 229, 230, 232, 234, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 284, 341, 342, 346, 351, 364, 365, 366, 371, 383, 385, 390, 392, 393, 394, 395, 403, 404, 405, 406, 407, 408, 411, 413, 414, 420, 468, 469, 470, 472, 473, 476, 477, 483, 485, 487, 488, 489, 491, 493, 495, 497, 498, 501, 502, 503, 506, 507, 508, 509, 513, 522, 523, 524, 526, 528, 529, 531, 534], "true_divid": [6, 108], "trunc": [6, 37, 74, 148, 155, 477, 481], "truncat": [37, 74, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 148, 155, 453, 477, 481, 523], "trust": [268, 269], "truth": [61, 62, 64, 65, 67, 119, 172, 173, 187, 206, 207, 246, 247, 248, 249, 395, 544, 547], "try": [4, 44], "tukei": 10, "tup": [77, 112, 178, 482, 533], "tupl": [17, 22, 23, 24, 33, 34, 38, 42, 43, 44, 45, 47, 58, 69, 70, 71, 83, 90, 93, 101, 102, 103, 104, 110, 113, 116, 123, 132, 137, 151, 160, 163, 166, 167, 169, 171, 175, 176, 178, 184, 190, 198, 201, 202, 224, 227, 234, 237, 238, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 272, 273, 274, 275, 276, 277, 278, 361, 379, 389, 394, 396, 400, 402, 407, 465, 469, 471, 473, 474, 478, 482, 486, 499, 500, 501, 503, 510, 512, 516, 517, 520, 521, 525, 526, 528, 529, 531, 533, 544], "turn": 77, "twister": 415, "two": [10, 18, 39, 55, 56, 59, 61, 62, 64, 65, 67, 82, 86, 87, 92, 104, 105, 106, 109, 110, 113, 115, 116, 123, 128, 129, 131, 134, 135, 136, 139, 140, 141, 143, 145, 157, 158, 171, 185, 187, 188, 202, 204, 212, 214, 218, 220, 223, 225, 229, 231, 232, 235, 246, 248, 249, 253, 254, 255, 256, 258, 261, 262, 265, 272, 274, 363, 370, 386, 399, 400, 415, 444, 464, 477, 480, 481, 485, 504, 509, 511, 516, 517, 520, 521, 530], "type": [0, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 351, 355, 359, 361, 368, 376, 380, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 547], "type_nam": 0, "typeerror": [58, 60, 85, 110, 160, 204, 379], "typenam": 6, "typestr": 113, "typic": [18, 133, 188, 484, 544], "u": [113, 208, 214, 216, 230, 252, 275, 277, 524], "u1": [113, 161, 162], "u16": 113, "u4": 72, "u8": 113, "ufunc": [2, 537, 544], "uint64": 113, "uint8": [113, 161, 162], "uk": 10, "un": 113, "unalt": 400, "unari": 544, "unchang": 145, "undefin": [21, 110, 258, 370, 400], "under": [220, 237], "underli": [61, 65, 67, 464, 473], "undo": [10, 136], "undocu": 113, "unexpect": [275, 277], "unicod": 113, "uniform": [6, 113, 171, 175, 176, 250, 415, 442, 445, 447, 448, 450], "uniformli": [250, 415, 459], "uniniti": [38, 117, 118, 166, 397, 535], "union1d": 6, "uniqu": [6, 58, 60, 93, 107, 113, 251, 257, 265, 273, 276, 278, 400, 469, 471, 501, 529], "unique_al": 6, "unique_count": [6, 524], "unique_indic": 524, "unique_invers": [6, 524], "unique_valu": 6, "unit": [110, 130, 144, 201, 213, 221, 228, 384], "unitari": [10, 171, 227, 230], "uniti": 175, "univ": 10, "univers": [2, 224, 537, 544], "unless": [17, 22, 51, 94, 95, 96, 97, 110, 115, 175, 213, 222, 224, 250, 270, 271, 275, 277, 346, 407, 503, 524, 531], "unlik": [110, 144, 376, 379], "unmodifi": 176, "unpackbit": 6, "unravel": 525, "unravel_index": [6, 33, 34, 465], "unraveled_coord": 525, "unsaf": [51, 72, 78, 79, 85, 110, 115, 178, 253, 346, 482, 500, 531, 533], "unscal": 10, "unsign": [113, 407, 503], "unspecifi": 473, "unstack": [6, 178, 482, 500, 533], "unsupport": [12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 84, 88, 89, 98, 99, 108, 121, 122, 124, 127, 148, 154, 155, 156, 157, 158, 159, 160, 168, 174, 179, 187, 203, 204, 205, 241, 242, 243, 244, 245, 256, 262, 263, 264, 266, 392, 393, 404, 405, 406, 408, 413, 414, 468, 470, 476, 477, 483, 487, 488, 489, 491, 495, 502, 507, 508, 522, 523], "until": [116, 478, 479], "unwrap": [6, 98, 413], "up": [4, 10, 113, 115, 153, 506, 517, 524], "upcast": 38, "updat": 4, "uplo": [214, 216], "upon": [110, 384], "upper": [101, 126, 175, 176, 208, 214, 216, 227, 252, 514, 516, 517, 519, 520, 521], "url": 4, "us": [4, 10, 16, 23, 24, 25, 31, 36, 38, 42, 43, 44, 45, 46, 47, 50, 51, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 76, 78, 79, 83, 86, 92, 94, 95, 96, 97, 100, 101, 102, 104, 105, 108, 110, 113, 115, 116, 117, 118, 119, 123, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 155, 156, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 181, 184, 185, 187, 192, 201, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 218, 222, 223, 224, 226, 232, 235, 238, 239, 245, 246, 248, 250, 252, 253, 255, 257, 258, 259, 260, 261, 263, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 286, 346, 351, 359, 379, 392, 394, 395, 396, 397, 398, 400, 403, 404, 405, 406, 407, 411, 415, 418, 420, 421, 431, 436, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 456, 459, 464, 467, 470, 471, 472, 473, 474, 476, 478, 484, 485, 487, 490, 494, 501, 502, 503, 505, 506, 509, 510, 511, 513, 514, 516, 517, 520, 521, 522, 524, 525, 528, 529, 531, 534, 535, 536, 544, 551], "usabl": 154, "usag": [3, 4, 130, 144], "use_getitem": 113, "use_setitem": 113, "user": [113, 267, 400], "usm": [25, 38, 42, 43, 44, 45, 46, 47, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 499, 514, 516, 520, 528, 535, 536], "usm_ndarrai": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 356, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 536], "usm_typ": [25, 38, 42, 43, 44, 45, 46, 47, 83, 101, 102, 104, 110, 117, 118, 126, 130, 144, 161, 162, 163, 164, 165, 166, 167, 169, 181, 184, 238, 239, 250, 252, 260, 351, 396, 397, 398, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 514, 516, 520, 528, 535, 536], "usual": [102, 110, 113, 180, 219, 253, 379], "util": 537, "v": [82, 101, 104, 110, 113, 213, 214, 236, 258, 378, 410, 484, 531], "v0": 6, "v10": 113, "v13": 6, "v2": 6, "v_sort": 258, "val": [110, 146, 149, 336, 372, 403], "valid": [87, 123, 252, 504, 516, 517, 520, 521], "valu": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 45, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 101, 106, 107, 108, 110, 113, 115, 117, 118, 119, 121, 122, 124, 125, 126, 127, 133, 134, 139, 141, 142, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 179, 181, 183, 184, 186, 187, 188, 190, 191, 193, 194, 197, 198, 201, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 221, 222, 224, 226, 228, 229, 230, 231, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 261, 262, 263, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 282, 283, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 343, 344, 346, 348, 351, 356, 358, 370, 372, 379, 392, 393, 394, 395, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 425, 442, 443, 459, 466, 468, 469, 470, 471, 472, 473, 476, 477, 478, 481, 483, 484, 485, 487, 488, 489, 490, 493, 495, 497, 498, 501, 502, 503, 505, 506, 507, 508, 511, 513, 516, 520, 522, 523, 524, 527, 529, 531, 534, 535, 536, 544, 547], "value2": 113, "valueerror": [23, 38, 43, 44, 110, 160, 224, 268, 269, 363, 473, 496, 499], "van": 224, "vander": 6, "vandermond": 528, "var": [6, 110, 257, 273, 276, 278, 501, 544], "vararg": 171, "vari": [10, 17, 21, 22, 105, 116, 129, 131, 133, 134, 135, 136, 138, 139, 142, 145, 163, 184, 192, 209, 212, 213, 214, 218, 220, 224, 267, 273, 276, 278, 464, 467, 490], "variabl": [60, 86, 91, 218, 229], "varianc": [110, 257, 273, 276, 278, 390, 501, 529, 547], "variou": [224, 490, 551], "vdot": [6, 109, 236, 253, 531], "vecdot": [6, 530], "vector": [92, 115, 163, 184, 185, 201, 209, 210, 219, 222, 223, 224, 225, 230, 231, 236, 237, 253, 258, 259, 399, 400, 530, 531, 547], "vector_norm": [6, 224], "vendor": 4, "veri": [3, 10, 18, 186, 188, 225, 259, 267, 399], "verif": 0, "verifi": 208, "version": [4, 90, 92, 105, 110, 113, 150, 253, 258, 358, 394, 399, 465, 511, 525, 530, 531], "vertic": [77, 78, 79, 105, 112, 146, 151, 152, 178, 212, 480, 482, 496, 500, 532, 533], "vetterlin": 10, "vh": 230, "via": 139, "view": [6, 41, 55, 56, 57, 68, 101, 105, 110, 111, 123, 129, 131, 135, 136, 140, 141, 143, 145, 151, 152, 153, 177, 259, 265, 280, 363, 376, 389, 402, 411, 464, 465, 473, 480, 496, 499, 504, 512, 525, 532], "violat": 85, "void": 113, "void640": 113, "von": 460, "vonmis": 6, "vsplit": [6, 78, 79, 496], "vstack": [6, 77, 78, 79, 112, 178, 218, 482, 496, 500], "w": [10, 58, 60, 213, 214, 215, 216, 221, 472], "wa": [10, 93, 113, 223, 251, 272, 274, 276, 278, 415, 456, 469, 473, 501, 529], "wai": [3, 4, 10, 110, 116, 128, 134, 135, 136, 141, 162, 232, 370, 509], "wald": 6, "walk": 113, "want": [4, 192, 506], "warn": [113, 268, 269, 433, 474], "we": [83, 86, 102, 105, 116, 146, 218, 252, 411, 506, 513], "weibul": [6, 463], "weight": [58, 60, 91, 175, 176, 257, 273, 503], "well": [113, 115, 162, 175, 176, 407, 417, 434, 453], "were": [78, 79, 163, 415, 444, 500, 527], "what": [10, 51, 72, 78, 79, 85, 110, 113, 115, 119, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 178, 189, 253, 346, 417, 434, 482, 500, 531, 533, 544], "when": [10, 23, 25, 35, 38, 39, 42, 43, 45, 47, 50, 51, 58, 59, 83, 85, 107, 110, 113, 115, 128, 139, 141, 142, 157, 158, 169, 174, 186, 213, 219, 224, 227, 231, 232, 238, 245, 250, 252, 253, 258, 263, 270, 271, 272, 274, 275, 277, 346, 464, 470, 474, 477, 479, 481, 485, 493, 505, 509, 513, 524, 531, 534, 551], "whenev": [123, 402, 504, 512], "where": [0, 6, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 85, 88, 89, 92, 93, 98, 99, 101, 102, 104, 106, 107, 108, 110, 111, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 130, 133, 139, 140, 141, 144, 148, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 177, 179, 180, 181, 184, 185, 187, 188, 189, 190, 191, 193, 194, 197, 198, 203, 204, 205, 206, 207, 208, 212, 218, 222, 227, 230, 231, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 260, 261, 262, 263, 266, 272, 273, 274, 275, 276, 277, 278, 341, 342, 346, 351, 364, 365, 366, 371, 378, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 413, 414, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 464, 468, 469, 470, 474, 476, 477, 479, 483, 484, 485, 487, 488, 489, 491, 495, 496, 497, 498, 501, 502, 503, 507, 508, 511, 512, 514, 516, 520, 522, 523, 527, 528, 529, 531, 532, 535, 536], "wherev": 85, "whether": [17, 18, 22, 39, 93, 96, 97, 107, 113, 160, 188, 189, 192, 208, 227, 238, 267, 275, 277, 465, 488, 524, 525, 544], "which": [3, 4, 10, 17, 22, 23, 24, 25, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 51, 58, 60, 68, 78, 79, 83, 85, 90, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 109, 110, 113, 115, 116, 117, 118, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 171, 175, 176, 178, 181, 184, 186, 191, 193, 194, 195, 196, 208, 210, 212, 213, 220, 222, 224, 231, 234, 235, 236, 237, 239, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 346, 351, 361, 394, 396, 397, 398, 402, 407, 410, 415, 437, 442, 443, 444, 445, 446, 447, 448, 450, 456, 459, 465, 469, 471, 474, 478, 485, 492, 493, 496, 499, 500, 501, 503, 505, 511, 512, 513, 514, 515, 516, 519, 520, 523, 526, 527, 528, 529, 531, 534, 535, 536, 544, 551], "whichev": 185, "while": [10, 86, 143, 145, 175, 176, 257, 273, 276, 278, 394, 403, 407, 478, 501, 503, 514, 529], "whitespac": [162, 165], "whole": [129, 131, 135, 136, 140, 141, 143, 145, 516, 520], "whose": [12, 13, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 105, 113, 125, 126, 146, 209, 212, 214, 215, 216, 220, 231, 233, 235, 252, 254, 265, 478, 517, 521, 525], "why": 139, "wide": 146, "width": [59, 62, 64, 113, 175, 176, 187, 400], "wild": [417, 434], "window": [4, 130, 144], "wise": [12, 13, 14, 15, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 37, 39, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 77, 78, 79, 80, 81, 84, 86, 88, 89, 93, 108, 110, 112, 119, 121, 122, 124, 127, 148, 154, 155, 156, 157, 158, 159, 172, 173, 174, 177, 178, 179, 183, 187, 188, 191, 193, 194, 195, 196, 204, 205, 206, 207, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 261, 262, 263, 264, 266, 272, 274, 275, 350, 392, 393, 395, 404, 405, 406, 408, 466, 468, 470, 476, 477, 481, 482, 483, 487, 488, 489, 490, 491, 496, 497, 498, 500, 502, 507, 508, 522, 523, 532, 533, 537, 544, 547, 551], "wish": 544, "within": [18, 25, 39, 51, 110, 115, 133, 134, 135, 136, 138, 139, 141, 175, 176, 188, 346, 410, 415, 459], "without": [105, 110, 117, 146, 389, 464, 473, 474, 544], "won": 113, "word": [134, 135, 136, 139, 141, 155, 215, 415, 459], "work": [4, 37, 50, 110, 361, 506, 544], "world": [113, 417, 434], "would": [35, 78, 79, 110, 113, 163, 184, 223, 252, 253, 370, 402, 415, 465, 493, 496, 500, 506, 512, 527, 531], "wrap": [98, 110, 146, 372, 387, 400, 410, 411, 413, 465, 484, 505, 506, 527], "wrapper": 110, "writabl": 472, "write": [101, 105, 110, 146, 162, 359, 473], "writeabl": 472, "written": [4, 90, 93, 146, 162, 192, 251, 469, 534], "x": [0, 3, 4, 12, 13, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 52, 54, 55, 56, 57, 60, 62, 64, 68, 70, 73, 74, 80, 81, 83, 84, 86, 87, 88, 89, 91, 92, 93, 96, 97, 98, 99, 101, 104, 106, 107, 110, 111, 113, 114, 117, 118, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 135, 136, 137, 143, 144, 145, 148, 149, 150, 155, 161, 162, 163, 164, 166, 167, 168, 169, 171, 177, 180, 181, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 204, 209, 210, 212, 215, 218, 220, 224, 227, 229, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 259, 260, 264, 265, 267, 346, 351, 360, 361, 368, 374, 379, 380, 392, 394, 396, 397, 398, 404, 407, 408, 409, 413, 414, 433, 439, 464, 466, 468, 469, 471, 472, 477, 478, 479, 481, 483, 485, 487, 488, 489, 490, 491, 495, 496, 497, 498, 499, 504, 505, 507, 508, 513, 514, 523, 526, 528, 532, 534, 535, 536], "x0": [45, 47, 83, 104, 398, 528, 536], "x00": 162, "x01": [161, 162], "x02": [161, 162], "x03": [161, 162], "x04": [161, 162], "x05": 161, "x1": [16, 18, 21, 28, 30, 31, 39, 40, 48, 51, 52, 53, 61, 63, 65, 66, 67, 75, 84, 87, 108, 110, 119, 154, 156, 157, 158, 159, 168, 172, 173, 174, 179, 201, 203, 204, 205, 206, 207, 210, 219, 225, 236, 244, 245, 246, 247, 248, 249, 253, 256, 259, 262, 263, 264, 266, 346, 392, 393, 395, 401, 404, 405, 406, 412, 452, 470, 476, 478, 502, 522, 531], "x1_i": [16, 31, 53, 61, 63, 65, 66, 67, 84, 108, 119, 154, 156, 159, 172, 173, 179, 205, 206, 207, 244, 245, 246, 248, 249, 263, 266, 395, 405, 406, 470, 476, 502, 522], "x2": [16, 17, 18, 21, 22, 28, 30, 31, 38, 39, 40, 48, 52, 53, 61, 63, 65, 66, 67, 84, 87, 108, 119, 154, 156, 157, 158, 159, 168, 172, 173, 174, 179, 201, 203, 204, 205, 206, 207, 210, 219, 225, 236, 244, 245, 246, 247, 248, 249, 253, 256, 259, 262, 263, 266, 392, 393, 395, 404, 405, 406, 470, 476, 478, 497, 502, 522, 531], "x2_i": [16, 31, 53, 61, 63, 65, 66, 67, 84, 108, 119, 154, 156, 159, 172, 173, 179, 205, 206, 207, 244, 245, 246, 248, 249, 263, 266, 395, 405, 406, 470, 476, 502, 522], "x3": [17, 22, 154], "x_i": [12, 13, 14, 15, 21, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 62, 64, 73, 74, 80, 81, 88, 89, 121, 122, 124, 155, 183, 187, 240, 241, 242, 243, 247, 392, 404, 408, 466, 468, 477, 481, 483, 487, 488, 489, 491, 497, 498, 507, 508, 523], "xarr": 86, "xi": [243, 259], "xn": [201, 259], "xor": [61, 62, 64, 65, 67, 187, 246, 247, 248, 249], "xv": 259, "xx": 259, "xy": 259, "y": [0, 4, 14, 15, 25, 26, 27, 28, 29, 30, 32, 38, 42, 43, 44, 45, 47, 48, 49, 52, 54, 55, 68, 83, 86, 91, 92, 104, 110, 113, 114, 117, 118, 123, 126, 130, 144, 161, 162, 163, 164, 166, 167, 169, 171, 181, 195, 196, 209, 210, 218, 238, 239, 250, 259, 260, 264, 267, 351, 368, 376, 379, 396, 397, 398, 472, 513, 514, 528, 534, 535, 536], "y1": 204, "y2": 204, "yarr": 86, "yet": [4, 6], "yield": [14, 15, 26, 27, 28, 29, 30, 32, 35, 48, 49, 52, 54, 275, 277, 394, 400, 415, 534, 544], "you": [4, 105, 133, 138, 139, 192, 252, 258, 473, 505, 506, 544, 551], "your": [4, 105, 551], "yv": 259, "yy": 259, "z": [14, 15, 17, 22, 25, 26, 27, 28, 29, 30, 32, 38, 42, 43, 44, 45, 47, 48, 49, 52, 54, 83, 92, 104, 117, 118, 126, 130, 144, 161, 162, 163, 164, 166, 167, 169, 181, 238, 239, 250, 259, 260, 396, 397, 398, 425, 514, 528, 535, 536], "zero": [6, 10, 17, 21, 22, 35, 36, 37, 38, 63, 74, 90, 92, 93, 102, 106, 110, 117, 118, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 155, 162, 166, 167, 181, 183, 189, 190, 195, 196, 197, 198, 205, 213, 214, 216, 218, 221, 222, 226, 230, 232, 251, 252, 255, 257, 261, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 368, 369, 379, 380, 384, 391, 394, 397, 398, 400, 407, 415, 417, 445, 447, 448, 450, 466, 467, 469, 474, 477, 481, 487, 493, 501, 503, 509, 514, 515, 518, 519, 523, 529, 534, 536], "zeros_lik": [6, 38, 99, 118, 167, 258, 398, 414, 535], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "Discrete Fourier Transform", "Functional programming", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.apply_along_axis", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.binary_repr", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.byte_bounds", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.corrcoef", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.cumulative_prod", "dpnp.cumulative_sum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.i0", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.insert", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear algebra", "Logic functions", "Array manipulation routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, searching, and counting", "Special Functions", "Statistics", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 281, "__add__": 282, "__and__": 283, "__bool__": 284, "__complex__": 285, "__copy__": 286, "__eq__": 287, "__float__": 288, "__floordiv__": 289, "__ge__": 290, "__getitem__": 291, "__gt__": 292, "__iadd__": 293, "__iand__": 294, "__ifloordiv__": 295, "__ilshift__": 296, "__imatmul__": 297, "__imod__": 298, "__imul__": 299, "__int__": 300, "__invert__": 301, "__ior__": 302, "__ipow__": 303, "__irshift__": 304, "__isub__": 305, "__itruediv__": 306, "__ixor__": 307, "__le__": 308, "__len__": 309, "__lshift__": 310, "__lt__": 311, "__matmul__": 312, "__mod__": 313, "__mul__": 314, "__ne__": 315, "__neg__": 316, "__new__": 317, "__or__": 318, "__pos__": 319, "__pow__": 320, "__radd__": 321, "__rand__": 322, "__repr__": 323, "__rfloordiv__": 324, "__rlshift__": 325, "__rmatmul__": 326, "__rmod__": 327, "__rmul__": 328, "__ror__": 329, "__rpow__": 330, "__rrshift__": 331, "__rshift__": 332, "__rsub__": 333, "__rtruediv__": 334, "__rxor__": 335, "__setitem__": 336, "__str__": 337, "__sub__": 338, "__truediv__": 339, "__xor__": 340, "ab": 12, "absolut": 13, "aco": 14, "acosh": 15, "ad": 541, "add": 16, "algebra": [6, 539], "all": [17, 341], "allclos": 18, "amax": 19, "amin": 20, "angl": 21, "ani": [22, 342], "api": [1, 537], "append": 23, "apply_along_axi": 24, "arang": 25, "arcco": 26, "arccosh": 27, "arcsin": 28, "arcsinh": 29, "arctan": 30, "arctan2": 31, "arctanh": 32, "argmax": [33, 343], "argmin": [34, 344], "argsort": [35, 345], "argwher": 36, "arithmet": [542, 544, 545], "around": 37, "arrai": [6, 7, 9, 38, 538, 540, 541, 544], "array_equ": 39, "array_equiv": 40, "array_split": 41, "asanyarrai": 42, "asarrai": 43, "asarray_chkfinit": 44, "ascontiguousarrai": 45, "asfarrai": 46, "asfortranarrai": 47, "asin": 48, "asinh": 49, "asnumpi": 50, "astyp": [51, 346], "atan": 52, "atan2": 53, "atanh": 54, "atleast_1d": 55, "atleast_2d": 56, "atleast_3d": 57, "attribut": 544, "avail": [9, 551], "averag": [58, 550], "backend": 1, "background": 10, "basic": [541, 545], "beta": 416, "binary_repr": 59, "bincount": 60, "binomi": 417, "bit": [5, 551], "bitwise_and": 61, "bitwise_invert": 62, "bitwise_left_shift": 63, "bitwise_not": 64, "bitwise_or": 65, "bitwise_right_shift": 66, "bitwise_xor": 67, "broadcast_arrai": 68, "broadcast_shap": 69, "broadcast_to": 70, "build": [4, 7], "byte": 418, "byte_bound": 71, "c": 1, "calcul": 544, "can_cast": 72, "cbrt": 73, "ceil": 74, "chang": 541, "channel": 4, "chisquar": 419, "choic": 420, "choleski": 208, "choos": [75, 347], "class": 7, "clip": [76, 348], "co": 88, "column_stack": 77, "comparison": [6, 540, 544, 551], "complex": 542, "concat": 78, "concaten": 79, "cond": 209, "conda": 4, "conj": [80, 349], "conjug": [81, 350], "construct": 544, "control": 0, "convers": 544, "convolv": 82, "copi": [83, 351], "copysign": 84, "copyto": 85, "corrcoef": 86, "correl": [87, 550], "cosh": 89, "count": 548, "count_nonzero": 90, "cov": 91, "creat": 8, "creation": 7, "cross": [92, 210], "cumlogsumexp": 93, "cumprod": [94, 352], "cumsum": [95, 353], "cumulative_prod": 96, "cumulative_sum": 97, "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 538, 544, 546], "decomposit": 539, "deg2rad": 98, "degre": 99, "delet": 100, "det": 211, "detail": 10, "develop": 2, "devic": 4, "diag": 101, "diag_indic": 102, "diag_indices_from": 103, "diagflat": 104, "diagon": [105, 212, 354], "diff": 106, "differ": 542, "digit": 107, "dimens": [10, 541], "dimension": [6, 544], "dirichlet": 421, "discret": [6, 10], "distribut": 546, "divid": 108, "dot": 109, "dpnp": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 546], "dpnp_arrai": 110, "driver": 4, "dsplit": 111, "dstack": 112, "dtype": [113, 355], "ediff1d": 114, "eig": 213, "eigenvalu": 539, "eigh": 214, "eigval": 215, "eigvalsh": 216, "einsum": 115, "einsum_path": 116, "element": [5, 541], "empti": 117, "empty_lik": 118, "equal": 119, "equat": 539, "erf": 120, "error": 549, "exampl": [0, 4], "except": 539, "exist": 7, "exp": 121, "exp2": 122, "expand_dim": 123, "expm1": 124, "expon": 542, "exponenti": 422, "extens": 2, "extract": 125, "extrema": 542, "ey": 126, "f": 423, "fab": 127, "fft": [10, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "fft2": 129, "fftfreq": 130, "fftn": 131, "fftshift": 132, "fill": 356, "fill_diagon": 146, "find": 542, "finfo": 147, "fix": 148, "flag": 357, "flat": 358, "flatit": 149, "flatnonzero": 150, "flatten": 359, "flip": 151, "fliplr": 152, "flipud": 153, "float": [542, 551], "float_pow": 154, "floor": 155, "floor_divid": 156, "fmax": 157, "fmin": 158, "fmod": 159, "format": 5, "fourier": [6, 10], "from": [4, 7], "from_dlpack": 160, "frombuff": 161, "fromfil": 162, "fromfunct": 163, "fromit": 164, "fromstr": 165, "full": 166, "full_lik": 167, "function": [11, 540, 542, 549, 551], "gamma": 424, "gcd": 168, "gener": [538, 546], "geometr": 425, "geomspac": 169, "get_includ": 170, "gradient": 171, "greater": 172, "greater_equ": 173, "guid": 4, "gumbel": 426, "handl": 542, "heavisid": 174, "helper": 10, "hermitian": 10, "hfft": 133, "higher": 10, "histogram": [175, 550], "histogram_bin_edg": 176, "hsplit": 177, "hstack": 178, "hyperbol": 542, "hypergeometr": 427, "hypot": 179, "i0": 180, "ident": 181, "ifft": 134, "ifft2": 135, "ifftn": 136, "ifftshift": 137, "ihfft": 138, "iinfo": 182, "imag": [183, 360], "implement": 10, "index": [538, 544], "indic": 184, "infin": 540, "inform": [2, 8, 10], "inner": 185, "insert": [186, 538], "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 217, "invert": 187, "irfft": 139, "irfft2": 140, "irfftn": 141, "isclos": 188, "iscomplex": 189, "iscomplexobj": 190, "isfinit": 191, "isfortran": 192, "isinf": 193, "isnan": 194, "isneginf": 195, "isposinf": 196, "isreal": 197, "isrealobj": 198, "isscalar": 199, "issubdtyp": 200, "item": [361, 544], "items": 362, "iter": 538, "ix_": 201, "join": 541, "kind": 541, "kron": 202, "laplac": 428, "layout": 544, "lcm": 203, "ldexp": 204, "left_shift": 205, "less": 206, "less_equ": 207, "level": 6, "librari": 0, "like": [538, 541], "linalg": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "linear": [6, 539], "linspac": 238, "loadtxt": 239, "log": 240, "log10": 241, "log1p": 242, "log2": 243, "logaddexp": 244, "logaddexp2": 245, "logarithm": 542, "logic": 540, "logical_and": 246, "logical_not": 247, "logical_or": 248, "logical_xor": 249, "logist": 429, "lognorm": 430, "logseri": 431, "logspac": 250, "logsumexp": 251, "lstsq": 218, "manipul": [541, 544], "mask_indic": 252, "math": 551, "mathemat": 542, "matmul": [219, 253], "matric": 7, "matrix": [7, 539, 544], "matrix_norm": 220, "matrix_pow": 221, "matrix_rank": 222, "matrix_transpos": 254, "max": [255, 364], "maximum": 256, "mean": [257, 365], "median": 258, "memori": 544, "meshgrid": 259, "method": 544, "mgrid": 260, "min": [261, 366], "minimum": 262, "miscellan": [8, 542, 543], "mod": 263, "modf": 264, "modul": [6, 545], "moveaxi": 265, "mt": 363, "multi": [6, 544], "multi_dot": 223, "multinomi": 432, "multipl": 544, "multipli": 266, "multivariate_norm": 433, "nan": 540, "nan_to_num": 267, "nanargmax": 268, "nanargmin": 269, "nancumprod": 270, "nancumsum": 271, "nanmax": 272, "nanmean": 273, "nanmin": 274, "nanprod": 275, "nanstd": 276, "nansum": 277, "nanvar": 278, "nbyte": 367, "ndarrai": [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 544], "ndim": [368, 391], "neg": 392, "negative_binomi": 434, "nextaft": 393, "noncentral_chisquar": 435, "noncentral_f": 436, "nonzero": [369, 394], "norm": [224, 539], "normal": [10, 437], "not_equ": 395, "number": [539, 541, 542], "numer": 7, "numpi": [2, 6], "ogrid": 396, "ones": 397, "ones_lik": 398, "oper": [5, 538, 539, 540, 541, 542, 544, 551], "order": 550, "other": [539, 542, 544], "outer": [225, 399], "output": 5, "over": 538, "overview": 3, "pack": 5, "packag": [4, 545], "pad": 400, "parallel": [0, 2], "pareto": 438, "partit": [370, 401], "permut": [439, 546], "permute_dim": 402, "pinv": 226, "place": 403, "point": 542, "poisson": 440, "poly1d": 545, "polynomi": 545, "polyutil": 545, "posit": 404, "pow": 405, "power": [406, 441], "prod": [371, 407], "product": [539, 542], "program": 11, "proj": 408, "ptp": 409, "put": [372, 410], "put_along_axi": 411, "putmask": 412, "python": 4, "qr": 227, "quick": 4, "r": 4, "rad2deg": 413, "radian": 414, "rand": 442, "randint": 443, "randn": 444, "random": [6, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 546], "random_integ": 446, "random_sampl": 447, "randomst": 415, "ranf": 448, "rang": 7, "ration": 542, "ravel": [373, 464], "ravel_multi_index": 465, "rayleigh": 449, "real": [10, 374, 466], "real_if_clos": 467, "rearrang": 541, "reciproc": 468, "reduce_hypot": 469, "refer": [1, 537], "remaind": 470, "remov": 541, "repeat": [375, 471], "requir": 472, "reshap": [376, 473], "resiz": 474, "result_typ": 475, "rfft": 142, "rfft2": 143, "rfftfreq": 144, "rfftn": 145, "right_shift": 476, "rint": 477, "roll": 478, "rollaxi": 479, "rot90": 480, "round": [377, 481, 542], "routin": [7, 8, 10, 538, 541, 542, 543, 547], "row_stack": 482, "rsqrt": 483, "sampl": [6, 450, 546], "scikit": 4, "search": 548, "searchsort": [378, 484], "seed": 451, "select": [485, 544], "shape": [7, 379, 486, 541, 544], "shuffl": 452, "sign": 487, "signbit": 488, "simpl": 546, "sin": 489, "sinc": 490, "sinh": 491, "size": [380, 492], "slogdet": 228, "solv": [229, 539], "sort": [381, 493, 548], "sort_complex": 494, "space": 495, "special": [542, 544, 549], "split": [496, 541], "sqrt": 497, "squar": 498, "squeez": [382, 499], "stack": 500, "standard": 10, "standard_cauchi": 453, "standard_exponenti": 454, "standard_gamma": 455, "standard_norm": 456, "standard_t": 457, "start": 4, "statist": 550, "std": [383, 501], "stride": 384, "subtract": 502, "sum": [385, 503, 542], "summari": 6, "svd": 230, "svdval": 231, "swapax": [386, 504], "sycl": 4, "t": 280, "tabl": 6, "take": [387, 505], "take_along_axi": 506, "tan": 507, "tanh": 508, "target": 4, "tensordot": [232, 509], "tensorinv": 233, "tensorsolv": 234, "test": [4, 8, 540], "tile": [510, 541], "trace": [235, 388, 511], "transform": [6, 10], "transpos": [389, 512, 541], "trapezoid": 513, "tri": 514, "triangular": 458, "trigonometr": [542, 551], "tril": 515, "tril_indic": 516, "tril_indices_from": 517, "trim_zero": 518, "triu": 519, "triu_indic": 520, "triu_indices_from": 521, "true_divid": 522, "trunc": 523, "truth": 540, "twiddl": 551, "type": [8, 9, 540, 544], "ufunc": 551, "uniform": 459, "uniqu": 524, "univers": 551, "unravel_index": 525, "unstack": 526, "unwrap": 527, "util": 543, "valu": [7, 540], "vander": 528, "var": [390, 529], "varianc": 550, "vdot": 530, "vecdot": [236, 531], "vector": 539, "vector_norm": 237, "vonmis": 460, "vsplit": 532, "vstack": 533, "wald": 461, "weibul": 462, "where": 534, "wise": 5, "zero": 535, "zeros_lik": 536, "zipf": 463}})