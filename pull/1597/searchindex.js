Search.setIndex({"docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.histogram", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.issubsctype", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.negative", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.real", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapz", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.issubsctype.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapz.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array Creation Routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asnumpy", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.flatiter", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.histogram", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.issubsctype", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.inv", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.qr", "dpnp.linalg.svd", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanprod", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.real", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.negative", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.positive", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.real", "dpnp.reciprocal", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapz", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical Functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "terms": {"provid": [0, 6, 59, 78, 89, 306, 334, 337, 383, 399, 407, 425], "api": [0, 2, 3, 6, 79, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 381], "manag": 0, "specif": [0, 4, 79], "sycl": [0, 3, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350], "resourc": 0, "base": [0, 4, 79, 131, 168, 171, 172, 173, 174, 180, 295, 297, 301, 303], "python": [0, 2, 3, 78, 79, 123, 263, 381, 417], "packag": [0, 3], "an": [0, 3, 4, 11, 12, 14, 16, 17, 18, 19, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 57, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 89, 91, 112, 113, 115, 116, 123, 125, 126, 127, 130, 132, 133, 137, 139, 140, 142, 144, 153, 158, 164, 166, 182, 183, 184, 189, 191, 192, 205, 249, 251, 254, 263, 265, 271, 273, 275, 277, 279, 281, 283, 284, 285, 290, 291, 292, 294, 295, 297, 300, 301, 303, 306, 308, 313, 314, 316, 325, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 354, 359, 360, 361, 362, 364, 365, 368, 369, 370, 371, 374, 375, 376, 377, 378, 381, 382, 383, 384, 388, 390, 392, 393, 394, 396, 397, 401, 406, 407, 408, 409, 417], "below": [0, 4, 9, 79, 164, 166, 392, 396, 417], "demonstr": [0, 4, 79], "how": [0, 4, 79, 383], "extens": [0, 1, 3, 4, 9, 132, 410], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 249, 250, 252, 253, 257, 262, 263, 273, 274, 275, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 417, 421], "can": [0, 3, 4, 13, 15, 25, 44, 45, 46, 47, 58, 71, 76, 77, 78, 79, 85, 119, 120, 121, 122, 125, 134, 135, 138, 144, 153, 154, 155, 175, 176, 178, 179, 183, 189, 190, 193, 247, 248, 250, 287, 288, 289, 293, 296, 297, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 358, 360, 362, 380, 383, 397, 417], "easili": 0, "combin": [0, 79, 89], "devic": [0, 2, 3, 19, 31, 33, 34, 35, 36, 37, 78, 83, 84, 92, 123, 129, 130, 139, 169, 291, 292, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 377, 392, 408, 409], "interfac": 0, "dpctl": [0, 4, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 58, 59, 61, 62, 76, 77, 78, 84, 85, 87, 89, 90, 91, 115, 116, 117, 118, 119, 120, 121, 122, 130, 134, 135, 137, 138, 141, 144, 146, 147, 148, 153, 154, 155, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 186, 189, 190, 192, 193, 287, 288, 289, 292, 293, 295, 296, 297, 299, 301, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 356, 358, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 390, 393, 396, 400, 406, 407, 409], "liter": 0, "queue": [0, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350], "from": [0, 3, 27, 28, 29, 33, 34, 52, 53, 59, 68, 69, 78, 79, 88, 91, 123, 125, 127, 128, 137, 139, 170, 186, 241, 251, 254, 279, 284, 290, 297, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 360, 361, 368, 376, 377, 378, 383, 384, 402, 406, 407, 421], "allow": [0, 78, 250, 275, 417], "set": [0, 31, 52, 71, 78, 79, 83, 129, 139, 164, 166, 240, 250, 251, 260, 291, 292, 370, 371, 408, 409, 417], "input": [0, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 105, 106, 107, 108, 109, 111, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 248, 250, 261, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 328, 334, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 399, 400, 402, 404, 407, 408, 409], "current": [0, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 51, 58, 61, 62, 65, 66, 67, 76, 77, 79, 80, 87, 90, 93, 118, 119, 120, 121, 122, 133, 138, 139, 143, 144, 153, 172, 173, 174, 175, 183, 189, 190, 191, 193, 194, 195, 196, 197, 287, 296, 297, 299, 357, 358, 362, 363, 370, 371, 372, 373, 374, 378, 380, 385, 386, 387, 391, 392, 400], "usabl": 0, "insid": 0, "context": 0, "": [0, 3, 4, 78, 79, 95, 97, 101, 102, 106, 107, 109, 111, 138, 164, 166, 168, 257, 306, 307, 308, 313, 314, 315, 317, 318, 319, 320, 321, 323, 325, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 388, 417], "scope": [0, 4], "thi": [0, 11, 12, 16, 17, 30, 38, 57, 68, 71, 78, 79, 113, 116, 117, 125, 132, 166, 190, 249, 250, 254, 258, 271, 275, 277, 304, 339, 341, 360, 383, 388, 399, 405, 407], "wai": [0, 3, 4, 78, 125, 271], "arrai": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 101, 102, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 205, 241, 247, 248, 249, 250, 251, 254, 257, 258, 259, 261, 262, 263, 264, 266, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 421], "creation": [0, 79, 82, 410, 417, 421], "function": [0, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 42, 44, 45, 46, 47, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 118, 119, 120, 121, 122, 125, 126, 129, 130, 132, 133, 134, 135, 137, 138, 139, 143, 144, 145, 146, 147, 148, 153, 154, 155, 162, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 245, 246, 254, 275, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 299, 301, 304, 305, 306, 309, 311, 312, 322, 327, 343, 355, 357, 358, 359, 362, 363, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 385, 386, 387, 388, 391, 392, 393, 396, 399, 400, 404, 405, 406, 407, 408, 409, 410, 417, 421], "dpnp": [0, 2, 3, 4, 410, 417, 421, 422, 425], "which": [0, 3, 4, 33, 34, 59, 78, 79, 89, 113, 137, 156, 164, 166, 247, 248, 249, 250, 286, 288, 301, 377, 378, 394, 397, 417], "i": [0, 3, 4, 6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 131, 133, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 160, 162, 164, 165, 166, 167, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 205, 247, 248, 249, 250, 254, 261, 271, 275, 287, 288, 291, 292, 294, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 400, 402, 404, 406, 407, 408, 409, 417], "defin": [0, 78, 79, 249, 296, 417], "alloc": [0, 3, 4, 78, 192, 250, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 347, 350, 377], "us": [0, 4, 13, 29, 44, 45, 46, 47, 71, 76, 78, 79, 85, 89, 118, 119, 125, 131, 132, 134, 135, 144, 153, 154, 155, 156, 169, 176, 178, 180, 186, 193, 205, 249, 250, 254, 287, 288, 289, 296, 297, 306, 309, 311, 312, 322, 327, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 347, 350, 358, 360, 362, 380, 383, 384, 388, 391, 397, 417], "import": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 160, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 250, 254, 262, 271, 274, 285, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 301, 305, 331, 340, 344, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 396, 400, 401, 402, 403, 404, 406, 407, 408, 409], "np": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 247, 250, 254, 258, 262, 263, 271, 274, 287, 288, 289, 290, 291, 292, 293, 296, 298, 299, 301, 305, 331, 340, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 391, 392, 393, 396, 400, 401, 402, 403, 404, 406, 408, 409], "device_context": 0, "opencl": 0, "gpu": [0, 3, 4], "x": [0, 3, 4, 11, 12, 14, 18, 20, 21, 22, 23, 24, 26, 29, 30, 31, 35, 37, 39, 40, 41, 45, 48, 49, 50, 51, 54, 55, 57, 58, 60, 61, 62, 64, 65, 66, 67, 70, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114, 118, 119, 126, 129, 130, 131, 133, 139, 141, 143, 144, 146, 147, 148, 166, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 184, 186, 191, 192, 194, 195, 250, 254, 262, 263, 274, 287, 288, 291, 292, 293, 295, 296, 299, 301, 324, 330, 355, 356, 357, 359, 363, 364, 365, 366, 370, 371, 372, 373, 375, 376, 377, 381, 382, 383, 385, 386, 387, 391, 400, 401, 403, 407, 408, 409], "1": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 127, 128, 130, 131, 133, 135, 136, 137, 139, 141, 143, 145, 153, 154, 155, 157, 160, 162, 165, 166, 170, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 247, 249, 250, 254, 256, 258, 262, 263, 271, 274, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 301, 305, 306, 308, 310, 311, 313, 315, 317, 319, 320, 321, 323, 324, 325, 328, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 345, 347, 350, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 393, 396, 400, 401, 402, 403, 404, 406, 407, 408, 409, 417], "2": [0, 3, 4, 11, 12, 13, 19, 21, 23, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 42, 44, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 73, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 101, 106, 109, 115, 116, 117, 118, 119, 120, 121, 122, 133, 134, 135, 136, 137, 139, 141, 142, 143, 153, 154, 155, 157, 160, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 247, 250, 254, 258, 263, 271, 285, 288, 289, 290, 291, 292, 293, 297, 298, 299, 301, 305, 306, 310, 314, 318, 324, 330, 333, 335, 346, 348, 349, 352, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 369, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 390, 391, 392, 393, 396, 397, 400, 401, 402, 403, 404, 406, 407, 408, 409], "3": [0, 3, 4, 6, 13, 19, 20, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 47, 48, 49, 50, 53, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 71, 73, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 90, 115, 116, 117, 118, 119, 120, 121, 122, 133, 136, 137, 138, 139, 141, 143, 153, 168, 169, 170, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 247, 254, 263, 271, 285, 288, 289, 290, 292, 293, 297, 298, 299, 301, 306, 310, 314, 321, 324, 330, 333, 334, 335, 345, 349, 352, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 369, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388, 390, 391, 392, 393, 396, 401, 402, 403, 404, 406, 407, 409], "sum": [0, 3, 4, 6, 13, 67, 77, 78, 136, 181, 195, 197, 255, 272, 308, 323, 325, 389, 417, 421], "For": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 250, 252, 253, 262, 263, 273, 274, 275, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 417], "more": [0, 3, 4, 31, 39, 40, 41, 79, 116, 117, 123, 137, 164, 165, 378, 393, 396, 417], "inform": [0, 35, 37, 78, 79, 113, 259, 417, 421], "pleas": [0, 3, 417], "refer": [0, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 245, 246, 250, 252, 253, 262, 263, 271, 273, 274, 275, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 417], "document": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 245, 246, 249, 250, 252, 253, 262, 263, 271, 272, 273, 274, 275, 276, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 417], "time": [0, 13, 15, 25, 44, 46, 47, 58, 76, 77, 85, 119, 120, 121, 122, 134, 135, 138, 148, 153, 154, 155, 175, 176, 178, 179, 183, 189, 190, 193, 289, 293, 297, 308, 323, 358, 362, 380, 388], "def": 0, "run": [0, 4], "executor": 0, "size": [0, 6, 31, 53, 60, 64, 65, 78, 79, 131, 137, 166, 169, 180, 263, 264, 277, 291, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 377, 378, 379, 397, 404, 406, 408], "test_typ": 0, "repetit": [0, 388], "reshap": [0, 6, 13, 27, 28, 39, 41, 70, 71, 76, 78, 89, 115, 122, 182, 188, 193, 247, 277, 285, 330, 364, 380, 417], "arang": [0, 6, 13, 27, 28, 39, 40, 41, 42, 43, 58, 69, 70, 71, 76, 78, 85, 87, 88, 90, 115, 122, 130, 131, 136, 169, 172, 173, 176, 177, 178, 179, 180, 182, 186, 188, 193, 247, 289, 292, 297, 301, 305, 330, 358, 361, 364, 380, 407, 409], "dtype": [0, 9, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 34, 35, 36, 37, 44, 45, 46, 47, 51, 53, 54, 55, 58, 61, 62, 64, 71, 76, 78, 83, 84, 85, 87, 90, 92, 113, 118, 119, 120, 121, 122, 127, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 142, 144, 146, 147, 148, 153, 154, 155, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 189, 190, 193, 198, 250, 255, 272, 280, 282, 286, 287, 289, 291, 292, 296, 297, 298, 299, 306, 328, 334, 350, 358, 361, 362, 363, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 385, 386, 389, 392, 400, 404, 406, 408, 409, 417], "_": [0, 378], "rang": [0, 136, 300, 301, 325, 330, 378, 402, 421], "start_tim": 0, "perf_count": 0, "result": [0, 4, 14, 18, 44, 45, 46, 47, 65, 66, 67, 78, 79, 80, 93, 126, 133, 143, 144, 146, 147, 148, 153, 166, 176, 177, 178, 179, 191, 194, 195, 247, 248, 286, 293, 297, 306, 308, 338, 360, 361, 362, 381, 387, 388, 417], "end_tim": 0, "append": [0, 6, 75, 89], "return": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 71, 72, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 263, 265, 266, 267, 270, 271, 272, 275, 276, 280, 281, 282, 285, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 299, 306, 309, 328, 330, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 400, 405, 406, 407, 408, 409, 417], "median": [0, 6], "get_dtyp": 0, "_dtypes_list": 0, "int32": [0, 9, 36, 79, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 124, 125, 126, 127, 128, 170, 306, 308, 316, 318, 323, 325, 331, 334, 350, 361], "int64": [0, 9, 79, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 124, 125, 126, 127, 128, 170, 361], "float32": [0, 36, 78, 79, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 124, 125, 126, 127, 128, 170, 250, 306, 328, 333, 335, 336, 338, 339, 341, 347, 350, 361], "select_default_devic": 0, "has_aspect_fp64": 0, "float64": [0, 36, 78, 79, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 124, 125, 126, 127, 128, 170, 250, 306, 307, 313, 314, 315, 317, 319, 320, 321, 328, 329, 332, 333, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 361, 392], "test_repetit": 0, "5": [0, 6, 13, 14, 19, 26, 27, 39, 42, 43, 44, 46, 47, 48, 51, 53, 56, 59, 60, 63, 65, 66, 67, 70, 71, 76, 78, 80, 86, 115, 116, 117, 118, 119, 120, 121, 122, 131, 133, 136, 137, 138, 141, 153, 160, 169, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 192, 193, 247, 250, 254, 288, 290, 291, 292, 297, 301, 306, 307, 308, 310, 313, 325, 329, 330, 331, 332, 335, 338, 353, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 370, 378, 381, 382, 383, 387, 388, 390, 392, 393, 396, 400, 402, 403, 406, 407, 408, 409], "type_nam": 0, "name": [0, 6, 79], "print": [0, 4, 31, 43, 56, 79, 83, 136, 241, 306, 325, 330, 401], "f": [0, 6, 35, 37, 78, 79, 83, 84, 92, 129, 130, 250, 254, 261, 291, 292, 327, 360, 408, 409], "test": [0, 2, 14, 15, 18, 146, 147, 148, 308, 421], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 247, 248, 249, 250, 254, 257, 261, 275, 285, 287, 288, 289, 291, 292, 293, 296, 297, 298, 299, 301, 305, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 400, 402, 404, 406, 407, 408, 409, 410, 421], "each": [0, 11, 12, 20, 21, 22, 23, 24, 26, 39, 40, 41, 43, 48, 49, 51, 53, 54, 55, 61, 62, 78, 79, 116, 117, 118, 119, 126, 137, 160, 161, 170, 186, 276, 277, 287, 296, 299, 308, 325, 370, 371, 372, 373, 375, 378, 385, 386, 388, 394, 397, 400, 406, 417], "64": [0, 4, 297, 366], "128": 0, "256": 0, "512": 0, "1024": 0, "2048": 0, "4096": 0, "time_numpi": 0, "result_numpi": 0, "time_dpnp": 0, "result_dpnp": 0, "verif": 0, "true": [0, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 37, 39, 44, 45, 46, 47, 51, 54, 55, 57, 58, 59, 61, 62, 64, 76, 78, 79, 85, 87, 89, 90, 91, 115, 116, 117, 118, 119, 120, 121, 122, 131, 134, 135, 136, 138, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 164, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 188, 189, 190, 193, 245, 246, 250, 254, 272, 282, 287, 289, 296, 297, 298, 299, 311, 358, 360, 362, 363, 370, 371, 372, 373, 375, 376, 380, 381, 385, 386, 399, 400, 403, 407], "els": 0, "msg": 0, "n": [0, 4, 71, 72, 75, 79, 80, 89, 92, 94, 96, 97, 99, 100, 102, 104, 105, 107, 108, 110, 111, 112, 139, 164, 166, 186, 301, 308, 323, 325, 335, 345, 369, 376, 382, 383, 392, 394, 397, 403, 417], "4": [0, 13, 14, 19, 31, 39, 41, 42, 44, 46, 48, 53, 56, 59, 61, 65, 66, 67, 70, 71, 73, 76, 78, 79, 80, 83, 85, 88, 115, 119, 120, 121, 129, 131, 133, 134, 135, 136, 137, 138, 141, 155, 169, 174, 176, 180, 181, 182, 183, 184, 185, 187, 188, 189, 192, 193, 194, 195, 196, 197, 254, 271, 285, 288, 290, 292, 297, 298, 301, 306, 307, 310, 330, 335, 351, 355, 356, 358, 359, 360, 364, 365, 366, 370, 374, 375, 378, 379, 380, 381, 382, 383, 387, 388, 390, 391, 393, 396, 403, 404, 406, 407, 409], "3e": 0, "ratio": 0, "6": [0, 4, 13, 19, 27, 28, 39, 46, 47, 53, 59, 65, 66, 67, 69, 70, 71, 76, 78, 79, 80, 85, 90, 93, 115, 130, 137, 141, 168, 169, 180, 194, 195, 247, 254, 263, 288, 292, 297, 305, 306, 323, 325, 330, 335, 355, 356, 360, 364, 365, 366, 378, 380, 381, 382, 383, 387, 391, 393, 396, 402, 406, 407, 409], "2f": 0, "__name__": 0, "__main__": 0, "try": [0, 4], "gpu_queu": 0, "get_sycl_devic": [0, 306], "print_device_info": 0, "except": [0, 4, 15, 31, 33, 34, 35, 37, 48, 49, 53, 57, 59, 78, 89, 94, 100, 108, 115, 116, 117, 137, 192, 250, 277, 360, 364, 365, 377, 378, 382, 406], "importerror": 0, "data": [1, 3, 4, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 38, 42, 44, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 128, 133, 134, 135, 138, 140, 141, 144, 145, 146, 147, 148, 153, 154, 155, 160, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 250, 275, 285, 287, 288, 289, 293, 296, 297, 298, 299, 301, 302, 305, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 396, 400, 402, 404, 407, 410, 421], "parallel": [1, 3, 4, 9, 410], "overview": 2, "quick": [2, 3], "start": [2, 3, 19, 35, 37, 131, 169, 180, 365], "guid": [2, 3], "driver": 2, "interpret": [2, 33, 34, 57, 79, 124, 417], "instal": 2, "exampl": [2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 160, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 241, 247, 250, 254, 258, 262, 263, 271, 274, 275, 285, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 301, 305, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 396, 400, 401, 402, 403, 404, 406, 407, 408, 409], "multi": [2, 78, 95, 97, 101, 102, 106, 107, 109, 111, 187, 248, 281, 290, 410], "dimension": [2, 4, 56, 60, 71, 72, 73, 78, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 127, 186, 187, 279, 290, 381, 388, 410], "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 115, 116, 117, 118, 119, 120, 121, 122, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 157, 160, 161, 162, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 287, 288, 289, 293, 294, 295, 296, 297, 299, 300, 301, 303, 305, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 347, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 397, 400, 402, 404, 406, 407, 410], "univers": [2, 410, 417], "ufunc": [2, 410, 417], "routin": [2, 410, 417], "special": [2, 79, 86, 410, 421], "avail": [2, 3, 4, 79, 410, 417], "comparison": [2, 85, 134, 135, 154, 155, 289, 410, 421], "tabl": [2, 9, 166, 410], "cupi": [2, 410], "miscellan": [2, 410, 421], "c": [2, 4, 35, 37, 38, 78, 79, 83, 84, 92, 129, 130, 132, 170, 181, 250, 254, 261, 291, 292, 297, 355, 360, 388, 408, 409], "backend": [2, 132, 309, 311, 312, 322, 327, 343], "The": [3, 4, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 36, 37, 44, 45, 46, 47, 51, 53, 54, 55, 58, 59, 61, 62, 64, 76, 78, 79, 80, 85, 87, 89, 90, 94, 100, 108, 115, 118, 119, 120, 121, 122, 126, 134, 135, 137, 138, 139, 141, 144, 153, 154, 155, 160, 161, 165, 166, 171, 172, 173, 174, 176, 178, 183, 189, 190, 192, 193, 249, 254, 261, 262, 271, 274, 287, 289, 296, 297, 299, 306, 309, 311, 312, 322, 327, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 356, 358, 360, 361, 362, 363, 366, 369, 370, 372, 373, 378, 380, 381, 385, 386, 388, 394, 395, 397, 398, 400, 406, 407, 417, 421], "librari": [3, 4, 417], "implement": [3, 6, 123], "subset": [3, 377, 421], "execut": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 42, 44, 45, 46, 47, 51, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 118, 119, 120, 121, 122, 126, 129, 130, 133, 134, 135, 137, 138, 139, 143, 144, 145, 146, 147, 148, 153, 154, 155, 162, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 287, 288, 289, 291, 292, 293, 295, 296, 297, 301, 309, 311, 312, 322, 327, 343, 355, 357, 358, 359, 362, 363, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 385, 386, 387, 391, 392, 393, 396, 400, 404, 406, 407, 408, 409], "ani": [3, 6, 14, 15, 16, 17, 48, 49, 78, 79, 112, 250, 306, 350, 375, 417], "drop": [3, 79], "replac": [3, 36, 311, 417], "core": [3, 79, 417], "numer": [3, 4, 79, 287, 296, 421], "being": [3, 79], "develop": [3, 4], "part": [3, 54, 55, 78, 141, 191, 262, 274, 299, 356, 417], "intel": [3, 4], "ai": 3, "analyt": 3, "toolkit": 3, "distribut": [3, 4, 180, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 421], "also": [3, 79, 89, 344, 417], "anaconda": 3, "cloud": 3, "page": [3, 421], "learn": [3, 4], "Being": 3, "mean": [3, 6, 42, 78, 166, 185, 250, 261, 306, 319, 321, 324, 328, 347, 351, 352, 360, 379, 404, 417], "usag": [3, 4], "veri": [3, 186], "similar": [3, 33, 34, 78, 79, 131, 169, 180, 254, 306, 334], "class": [3, 78, 79, 80, 114, 142, 306, 334, 375, 376, 392, 421], "compat": [3, 78, 250, 360, 421], "altern": [3, 4, 181], "abov": [3, 393], "instanc": [3, 78, 186, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350], "creat": [3, 4, 31, 33, 34, 57, 71, 73, 78, 79, 123, 127, 254, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 417, 421], "ident": [3, 6, 79, 345], "one": [3, 4, 31, 36, 39, 40, 41, 56, 59, 60, 78, 79, 83, 85, 90, 94, 96, 99, 100, 104, 105, 108, 110, 116, 117, 129, 137, 139, 166, 171, 172, 173, 174, 186, 194, 254, 261, 264, 292, 299, 325, 377, 378, 394, 397, 408, 417], "kei": [3, 29, 78, 79, 114, 210, 240, 249, 374], "differ": [3, 75, 78, 79, 80, 113, 116, 117, 161, 166, 181, 249, 254, 297, 380, 421], "memori": [3, 33, 34, 35, 37, 78, 79, 259, 261, 281, 360, 410], "default": [3, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 74, 75, 76, 78, 79, 80, 83, 84, 85, 87, 90, 92, 94, 100, 112, 118, 119, 120, 121, 122, 129, 130, 131, 134, 135, 137, 138, 142, 144, 146, 147, 148, 153, 154, 155, 164, 166, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 198, 249, 250, 254, 261, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 306, 310, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 347, 350, 358, 360, 362, 363, 366, 367, 368, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 383, 385, 386, 389, 394, 397, 400, 404, 406, 408, 409, 417], "system": [3, 4], "integr": [3, 4, 191, 297, 391], "discret": [3, 56, 60, 75, 80, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 306, 410], "otherwis": [3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 133, 134, 135, 137, 138, 139, 143, 144, 145, 146, 147, 148, 153, 154, 155, 162, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 247, 248, 250, 261, 275, 287, 288, 289, 291, 292, 293, 295, 296, 297, 301, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 391, 392, 393, 396, 400, 404, 406, 407, 408, 409], "host": [3, 4, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 347, 350], "do": [3, 4, 79, 308], "have": [3, 4, 32, 39, 40, 41, 49, 79, 113, 170, 192, 325, 388, 417], "most": [3, 4, 79, 377], "manipul": [3, 71, 410, 421], "ar": [3, 4, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 133, 134, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 160, 161, 164, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 250, 270, 271, 286, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 329, 331, 332, 334, 337, 338, 340, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 391, 392, 395, 398, 400, 401, 402, 404, 406, 407, 417], "done": [3, 78, 250], "see": [3, 30, 78, 79, 123, 166, 249, 323, 366, 394, 395, 397, 398, 417], "complet": [3, 4, 417], "list": [3, 6, 9, 39, 40, 41, 48, 53, 78, 79, 137, 249, 359, 361, 368, 378, 406], "support": [3, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 157, 160, 162, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 250, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 303, 305, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 396, 400, 402, 404, 406, 407, 408, 409, 425], "along": [3, 4, 14, 16, 17, 18, 27, 28, 42, 53, 66, 67, 75, 78, 80, 115, 116, 117, 137, 143, 166, 182, 183, 184, 185, 188, 189, 194, 195, 198, 247, 248, 249, 255, 265, 267, 272, 273, 280, 282, 284, 286, 300, 301, 364, 365, 378, 379, 383, 384, 387, 388, 389, 391, 394, 397, 404, 406, 417], "limit": [3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 157, 160, 162, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 250, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 329, 331, 332, 334, 337, 340, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 396, 400, 402, 404, 406, 407, 408, 409], "To": 4, "program": [4, 118], "beyond": [4, 364], "cpu": [4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 44, 45, 46, 47, 51, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 118, 119, 120, 121, 122, 129, 130, 133, 134, 135, 137, 138, 139, 143, 144, 145, 146, 147, 148, 153, 154, 155, 162, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 287, 288, 289, 291, 292, 293, 295, 296, 297, 301, 355, 357, 358, 359, 362, 363, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 385, 386, 387, 391, 392, 393, 396, 400, 404, 406, 407, 408, 409], "you": [4, 417], "need": [4, 78, 132, 249], "appropri": [4, 132, 306, 334, 337, 417], "hardwar": 4, "work": [4, 16, 17, 30, 38, 68, 190, 304, 399, 405, 417], "fine": 4, "laptop": 4, "graphic": 4, "In": [4, 27, 28, 78, 156, 249, 301, 306, 350, 360, 383], "major": [4, 33, 34, 35, 37, 78, 250, 261], "case": [4, 27, 28, 168, 299, 360], "your": 4, "window": 4, "alreadi": [4, 34, 39, 40, 41], "ha": [4, 44, 45, 46, 47, 79, 89, 99, 104, 126, 137, 144, 301, 365, 377, 378, 381, 382, 388, 417], "all": [4, 6, 9, 15, 18, 32, 78, 79, 87, 88, 90, 115, 116, 117, 139, 156, 249, 250, 252, 258, 271, 299, 308, 375, 377, 417], "necessari": [4, 39, 59, 360], "But": [4, 79], "want": 4, "up": [4, 79, 117], "date": [4, 78, 249], "alwai": [4, 33, 78, 250, 360], "updat": 4, "latest": [4, 123], "follow": [4, 79, 89, 113, 140, 417, 421], "instruct": 4, "step": [4, 19, 131, 169, 180], "8": [4, 13, 15, 39, 50, 59, 70, 71, 79, 115, 141, 145, 168, 169, 180, 194, 297, 306, 330, 349, 356, 364, 372, 383, 387, 391, 393, 396, 403, 407], "9": [4, 13, 39, 59, 63, 70, 71, 76, 78, 93, 119, 168, 181, 193, 263, 306, 308, 310, 330, 356, 364, 375, 380, 387, 393, 396, 403, 407], "10": [4, 13, 21, 23, 27, 28, 57, 67, 71, 78, 79, 90, 129, 131, 136, 141, 153, 171, 172, 173, 174, 180, 185, 193, 197, 275, 306, 308, 318, 330, 361, 362, 364, 366, 378, 393, 396, 407], "If": [4, 15, 36, 77, 78, 79, 89, 113, 164, 165, 166, 184, 247, 248, 249, 250, 277, 306, 328, 350, 359, 360, 375, 381, 382, 388, 417], "yet": [4, 6], "easiest": 4, "It": 4, "essenti": 4, "machin": [4, 113, 140], "optim": [4, 82], "includ": [4, 132, 180, 299, 306, 350], "anoth": [4, 59, 78, 123, 254, 273, 301], "vendor": 4, "too": 4, "manual": [4, 79, 388], "shown": 4, "next": [4, 113], "section": [4, 79, 417], "recommend": [4, 288, 388], "org": 4, "channel": 4, "command": 4, "forg": 4, "pip": 4, "http": [4, 123], "pypi": 4, "simpl": [4, 179, 421], "These": [4, 48, 79, 89, 417, 421], "its": [4, 6, 15, 30, 54, 55, 78, 94, 100, 113, 138, 139, 160, 161, 285, 343, 360, 366, 390, 392, 417], "depend": [4, 160, 166, 368, 407], "control": [4, 78, 250], "requir": [4, 6, 31, 35, 37, 78, 79, 250], "compil": [4, 79, 132], "runtim": 4, "onemkl": 4, "befor": [4, 78, 116, 117, 271, 388], "strongli": [4, 388], "advis": 4, "version": [4, 78, 79, 260, 288], "activ": 4, "local": 4, "environ": 4, "env": 4, "And": [4, 71, 78, 250], "sourc": [4, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409], "recip": 4, "finanli": 4, "setuptool": 4, "o": [4, 79], "On": 4, "linux": 4, "cython": 4, "dpcpp_linux": 4, "mkl": 4, "devel": 4, "dpcpp": 4, "tbb": 4, "onedpl": 4, "cmake": 4, "ninja": 4, "pytest": 4, "dpcpp_win": 4, "setup": 4, "py": 4, "g": [4, 78, 79, 281, 306], "dcmake_c_compil": 4, "path": 4, "icx": 4, "dcmake_cxx_compil": 4, "icpx": 4, "script": 4, "build_loc": 4, "suit": 4, "element": [4, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 32, 43, 44, 45, 46, 47, 50, 51, 54, 55, 58, 59, 61, 62, 66, 67, 76, 78, 79, 80, 85, 87, 88, 90, 91, 93, 115, 116, 117, 118, 119, 120, 121, 122, 134, 135, 139, 141, 144, 145, 146, 147, 148, 153, 154, 155, 156, 162, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 189, 190, 191, 193, 194, 195, 245, 246, 252, 253, 255, 257, 258, 261, 263, 264, 266, 268, 270, 271, 275, 276, 278, 280, 281, 284, 286, 287, 288, 289, 295, 296, 297, 298, 299, 301, 303, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 383, 385, 386, 388, 393, 396, 399, 400, 401, 407, 417, 421], "asarrai": [4, 6, 33, 38], "y": [4, 35, 36, 37, 39, 48, 49, 57, 64, 65, 77, 78, 79, 89, 91, 126, 133, 184, 186, 191, 254, 275, 285, 288, 360, 375, 390, 391, 407], "locat": [4, 132, 317, 319], "same": [4, 13, 15, 16, 17, 25, 30, 32, 35, 37, 38, 44, 46, 47, 49, 58, 68, 76, 77, 78, 84, 85, 89, 91, 119, 120, 121, 122, 123, 130, 134, 135, 138, 153, 154, 155, 170, 175, 176, 177, 178, 179, 183, 189, 190, 192, 193, 250, 275, 289, 292, 293, 297, 301, 304, 306, 328, 334, 350, 358, 362, 364, 365, 375, 376, 377, 380, 384, 395, 398, 399, 405, 409], "shape": [4, 6, 27, 28, 31, 32, 35, 41, 48, 49, 60, 64, 65, 71, 78, 79, 83, 84, 89, 91, 115, 126, 129, 130, 162, 164, 168, 176, 177, 178, 179, 181, 182, 188, 192, 247, 248, 250, 275, 279, 285, 291, 292, 301, 306, 315, 318, 323, 324, 329, 333, 334, 335, 336, 337, 338, 339, 341, 346, 347, 353, 360, 365, 375, 376, 377, 378, 383, 388, 390, 392, 397, 408, 409, 410, 421], "0": [4, 6, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 39, 40, 41, 43, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 69, 70, 71, 73, 74, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 133, 136, 139, 143, 146, 147, 148, 160, 162, 169, 170, 171, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 247, 249, 254, 256, 258, 262, 263, 274, 276, 280, 281, 282, 285, 286, 288, 290, 291, 292, 297, 299, 301, 305, 306, 308, 313, 315, 316, 317, 319, 320, 321, 323, 324, 325, 328, 330, 331, 332, 333, 336, 338, 339, 340, 341, 344, 347, 349, 350, 351, 357, 358, 359, 363, 364, 365, 366, 368, 369, 370, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 404, 407, 408, 409], "expect": [4, 79], "comput": [4, 25, 30, 42, 44, 45, 46, 47, 51, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 136, 143, 144, 157, 158, 159, 161, 165, 166, 167, 176, 177, 178, 179, 184, 185, 190, 198, 358, 363, 366, 379, 381, 386, 387, 400, 404], "empti": [4, 6, 31, 78, 84, 129, 130, 184, 258, 291, 292, 408, 409], "found": [4, 417], "here": [6, 79], "correspond": [6, 27, 28, 78, 160, 257, 286, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 369, 417], "column": [6, 33, 34, 35, 37, 53, 78, 116, 117, 137, 160, 165, 250, 261, 394, 397, 406], "v1": 6, "23": [6, 306], "v0": 6, "13": [6, 27, 28, 45, 71, 78, 79, 144, 195, 249], "1dev0": 6, "45": [6, 25], "g9dc883c9b": 6, "v8": 6, "397": 6, "221": 6, "286": 6, "56": 6, "32": [6, 79, 387], "47": 6, "20": [6, 153, 308, 323], "16": [6, 44, 71, 79, 133, 193, 297, 385], "21": [6, 67, 79], "18": [6, 79, 80], "51": 6, "48": [6, 194], "total": [6, 78, 268], "545": 6, "332": 6, "415": 6, "ab": [6, 12], "absolut": [6, 11, 93, 299], "add": [6, 79], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "allclos": [6, 32, 145, 168], "alltru": 6, "amax": [6, 17, 27, 183, 189], "amin": [6, 16, 28, 189], "angl": [6, 24, 25, 68, 69, 304, 305, 402], "apply_along_axi": 6, "apply_over_ax": 6, "arcco": [6, 21, 22, 24, 25, 61], "arccosh": [6, 20, 23, 26, 62], "arcsin": [6, 20, 23, 24, 25, 372], "arcsinh": [6, 21, 22, 26, 373], "arctan": [6, 20, 22, 25, 26, 385], "arctan2": [6, 24], "arctanh": [6, 21, 23, 24, 25, 386], "argmax": [6, 16, 28, 78, 417], "argmin": [6, 17, 27, 78, 417], "argpartit": [6, 29, 417], "argsort": [6, 78, 374, 390, 417], "argwher": 6, "around": [6, 78, 276, 301, 366], "array2str": 6, "array_equ": 6, "array_equiv": [6, 32], "array_repr": 6, "array_split": [6, 53], "array_str": 6, "asanyarrai": [6, 34, 37], "asarray_chkfinit": [6, 33, 34], "ascontiguousarrai": [6, 33, 34, 37], "asfarrai": [6, 33, 34], "asfortranarrai": [6, 33, 34, 35], "asmatrix": 6, "atleast_1d": [6, 40, 41, 89], "atleast_2d": [6, 39, 41, 89], "atleast_3d": [6, 39, 40, 89], "averag": [6, 78, 184, 266, 421], "bartlett": 6, "base_repr": 6, "binary_repr": 6, "bincount": 6, "bitwise_and": [6, 45, 46, 47, 144, 176], "bitwise_not": 6, "bitwise_or": [6, 44, 45, 47, 144, 178], "bitwise_xor": [6, 44, 45, 46, 144, 179], "blackman": 6, "block": [6, 53, 137, 378, 406], "bmat": 6, "broadcast_arrai": [6, 49], "broadcast_shap": 6, "broadcast_to": [6, 48, 388], "busday_count": 6, "busday_offset": 6, "byte_bound": 6, "can_cast": 6, "cbrt": 6, "ceil": [6, 30, 118, 119, 363, 366, 400], "choos": [6, 24, 25, 78, 417], "clip": [6, 301, 383, 417], "column_stack": [6, 53, 406], "common_typ": 6, "compare_chararrai": 6, "compress": [6, 383, 417], "concaten": [6, 137, 378, 406], "conj": [6, 78, 141, 299, 356], "conjug": [6, 54, 77, 78, 141, 156, 160, 181, 252, 299, 356], "convolv": [6, 60], "copi": [6, 31, 34, 35, 37, 39, 40, 41, 59, 78, 79, 186, 205, 250, 261, 263, 271, 275, 277, 294, 296, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 347, 350, 360, 374, 377, 393, 396, 417], "copysign": [6, 287, 296], "copyto": [6, 78, 254], "corrcoef": [6, 64], "correl": [6, 421], "co": [6, 20, 62, 372, 385], "cosh": [6, 21, 61, 373, 386], "count_nonzero": [6, 288], "cov": [6, 324], "cross": [6, 60], "cumprod": [6, 194, 417], "cumproduct": 6, "cumsum": [6, 78, 195, 417], "datetime_as_str": 6, "datetime_data": 6, "deg2rad": [6, 304, 305, 402], "degre": [6, 68, 304, 305, 348, 402], "delet": 6, "deprec": 6, "deprecate_with_doc": 6, "diag": [6, 116, 117, 139, 168], "diag_indic": [6, 72, 112], "diag_indices_from": [6, 71, 112], "diagflat": 6, "diagon": [6, 70, 71, 72, 73, 78, 92, 112, 139, 156, 389, 392, 393, 394, 395, 396, 397, 398, 417], "diff": [6, 80, 136], "digit": [6, 113], "disp": 6, "divid": [6, 119, 122, 162, 190, 358, 399], "divmod": [6, 417], "dot": [6, 78, 81, 82, 143, 163, 165, 168, 181, 387, 405], "dsplit": [6, 53], "dstack": [6, 53, 406], "ediff1d": 6, "einsum": [6, 82, 143, 181, 293, 387], "einsum_path": [6, 81], "empty_lik": [6, 31, 83, 130, 292, 409], "equal": [6, 14, 15, 18, 32, 53, 60, 64, 78, 119, 134, 135, 137, 145, 150, 154, 155, 162, 271, 289, 306, 316, 350, 358, 374, 377, 378, 394, 397, 406], "exp": [6, 90, 171, 173, 175], "exp2": [6, 87, 90], "expand_dim": [6, 27, 28], "expm1": [6, 87, 173], "extract": [6, 70], "ey": [6, 54, 55, 120, 121, 139, 179, 183, 189, 369], "fab": [6, 11, 12], "fastcopyandtranspos": 6, "fill_diagon": 6, "find_common_typ": 6, "fix": [6, 79, 301], "flatnonzero": [6, 288], "flip": [6, 116, 117, 308], "fliplr": [6, 115, 117], "flipud": [6, 115, 116], "float_pow": 6, "floor": [6, 30, 51, 119, 358, 363, 366, 400], "floor_divid": [6, 122, 190, 358], "fmax": [6, 16, 17, 121, 183, 189, 297], "fmin": [6, 16, 17, 120, 183, 189, 297], "fmod": [6, 120, 121, 190, 297, 358], "format_float_posit": 6, "format_float_scientif": 6, "frexp": 6, "from_dlpack": 6, "frombuff": 6, "fromfil": 6, "fromfunct": [6, 33, 34], "fromit": [6, 33, 34], "frompyfunc": 6, "fromregex": 6, "fromstr": 6, "full": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 245, 246, 250, 252, 253, 262, 263, 271, 272, 273, 274, 275, 276, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409], "full_lik": [6, 31, 84, 129, 292, 409], "gcd": 6, "genfromtxt": 6, "geomspac": [6, 169, 180], "get_array_wrap": 6, "get_includ": 6, "get_printopt": 6, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "gradient": 6, "greater": [6, 78, 85, 135, 154, 155, 164, 271, 289], "greater_equ": [6, 85, 134, 154, 155, 289], "ham": 6, "han": 6, "heavisid": 6, "histogram": [6, 421], "histogram2d": 6, "histogram_bin_edg": 6, "histogramdd": 6, "hsplit": [6, 53], "hstack": [6, 53, 406], "hypot": 6, "i0": 6, "imag": [6, 78, 356, 417], "in1d": 6, "indic": [6, 16, 17, 27, 28, 29, 71, 72, 78, 79, 112, 247, 248, 249, 270, 273, 284, 288, 301, 302, 360, 367, 370, 371, 383, 384, 390, 394, 395, 397, 398], "info": 6, "inner": [6, 81, 82, 293], "insert": [6, 89, 367, 421], "interp": 6, "intersect1d": 6, "invert": [6, 45], "is_busdai": 6, "isclos": [6, 15], "iscomplex": 6, "iscomplexobj": 6, "isfinit": [6, 147, 148], "isfortran": 6, "isin": 6, "isinf": [6, 146, 148], "isnan": [6, 146, 147], "isnat": [6, 148], "isneginf": [6, 146, 147, 148], "isposinf": [6, 146, 147, 148], "isreal": 6, "isrealobj": 6, "isscalar": 6, "issctyp": 6, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "iter": [6, 33, 34, 78, 114, 127, 260, 421], "ix_": 6, "kaiser": 6, "kron": 6, "lcm": 6, "ldexp": 6, "left_shift": [6, 362], "less": [6, 85, 134, 135, 155, 289, 359, 370, 371], "less_equ": [6, 85, 134, 135, 154, 289], "lexsort": [6, 29, 78, 249, 374], "linspac": [6, 19, 86, 131, 180, 186, 402], "load": [6, 170], "loadtxt": 6, "log": [6, 90, 131, 169, 172, 173, 174, 175, 180, 321], "log10": [6, 171, 173, 174], "log1p": [6, 90, 171, 172, 174], "log2": [6, 171, 172, 173], "logaddexp": 6, "logaddexp2": 6, "logical_and": [6, 44, 177, 178, 179], "logical_not": [6, 45, 144, 176, 178, 179], "logical_or": [6, 46, 176, 177, 179], "logical_xor": [6, 47, 176, 177, 178], "logspac": [6, 131, 169], "lookfor": 6, "mask_indic": 6, "mat": 6, "matmul": [6, 168], "max": [6, 16, 27, 78, 113, 140, 164, 323, 388, 417], "maximum": [6, 16, 17, 27, 28, 78, 120, 121, 182, 189, 247, 265, 297, 300], "maximum_sctyp": 6, "may_share_memori": 6, "meshgrid": [6, 187, 290], "min": [6, 17, 28, 78, 113, 140, 417], "min_scalar_typ": 6, "minimum": [6, 16, 17, 27, 28, 78, 120, 121, 183, 188, 248, 267, 297, 300], "mintypecod": 6, "mod": [6, 358], "modf": 6, "moveaxi": [6, 364, 365, 390], "msort": 6, "multipli": 6, "nan_to_num": 6, "nanargmax": 6, "nanargmin": 6, "nancumprod": [6, 195], "nancumsum": 6, "nanmax": [6, 16, 17, 183, 189], "nanmean": [6, 184, 379, 404], "nanmedian": 6, "nanmin": [6, 16, 17, 189], "nanpercentil": 6, "nanprod": 6, "nanquantil": 6, "nanstd": [6, 184, 379, 404], "nansum": 6, "nanvar": [6, 184, 379, 404], "ndim": [6, 31, 35, 37, 39, 40, 41, 64, 71, 78, 79, 249, 291, 388, 408], "neg": [6, 14, 18, 43, 89, 146, 147, 148, 296, 297, 325, 375, 383], "nested_it": 6, "nextaft": 6, "nonzero": [6, 78, 407, 417], "not_equ": [6, 85, 134, 135, 154, 155], "obj2sctyp": 6, "ones": [6, 31, 35, 37, 76, 83, 84, 85, 89, 92, 129, 130, 138, 139, 181, 196, 292, 361, 365, 390, 392, 408, 409], "ones_lik": [6, 31, 84, 130, 291, 409], "outer": [6, 81, 82, 152], "packbit": 6, "pad": [6, 79], "partit": [6, 78, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 374, 417], "percentil": [6, 185], "piecewis": 6, "place": [6, 78, 247, 248, 301, 343, 360, 417], "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "posit": [6, 14, 18, 33, 34, 78, 89, 113, 146, 147, 148, 156, 192, 271, 287, 297, 299, 308, 332, 364, 365, 375, 376, 390], "power": [6, 88, 163, 376], "printopt": 6, "prod": [6, 78, 196, 417], "product": [6, 65, 66, 77, 81, 82, 143, 152, 163, 165, 181, 193, 194, 293, 298, 387, 405, 421], "promote_typ": 6, "ptp": [6, 417], "put": [6, 78, 302, 384, 417], "put_along_axi": [6, 301, 384], "putmask": [6, 301], "quantil": 6, "rad2deg": [6, 68, 69, 402], "radian": [6, 68, 69, 304, 402], "ravel": [6, 78, 166, 261, 417], "ravel_multi_index": 6, "real": [6, 24, 51, 78, 105, 106, 107, 108, 109, 111, 113, 118, 120, 121, 138, 141, 156, 160, 161, 164, 299, 308, 325, 371, 375, 400, 417, 421], "real_if_clos": 6, "recfromcsv": 6, "recfromtxt": 6, "reciproc": 6, "remaind": [6, 119, 120, 121, 122, 190, 297], "repeat": [6, 160, 161, 388, 417], "resiz": [6, 89, 417], "result_typ": [6, 79, 421], "right_shift": [6, 153], "rint": [6, 30, 366], "roll": [6, 365], "rollaxi": [6, 364], "root": [6, 50, 375, 376], "rot90": 6, "round": [6, 30, 78, 118, 119, 358, 363, 400, 417, 421], "round_": 6, "row_stack": 6, "safe_ev": 6, "save": 6, "savetxt": 6, "savez": 6, "savez_compress": 6, "sctype2char": 6, "searchsort": [6, 374, 417], "select": [6, 59, 377, 410], "set_numeric_op": 6, "set_printopt": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setxor1d": 6, "shares_memori": 6, "show_config": 6, "sign": [6, 54, 55, 58, 79, 287, 296, 371], "signbit": [6, 370], "sin": [6, 22, 61, 186, 373, 385], "sinc": 6, "sinh": [6, 23, 62, 372, 386], "sometru": 6, "sort": [6, 29, 78, 249, 271, 367, 390, 410, 417, 421], "sort_complex": 6, "space": [6, 19, 131, 169, 180], "split": [6, 53, 137, 378, 406, 421], "sqrt": [6, 78, 262, 274, 376], "squar": [6, 139, 156, 159, 160, 163, 310, 326, 375, 395, 398], "squeez": [6, 78, 89, 417], "stack": [6, 53, 137, 164, 406], "std": [6, 78, 184, 404, 417], "subtract": 6, "swapax": [6, 78, 192, 417], "take": [6, 78, 302, 360, 384, 417], "take_along_axi": [6, 27, 28, 29, 52, 302, 383], "tan": [6, 24, 25, 61, 372, 386], "tanh": [6, 26, 62, 373, 385], "tensordot": [6, 77, 143, 181], "tile": [6, 359, 421], "trace": [6, 417], "transpos": [6, 78, 156, 192, 200, 417, 421], "trapz": 6, "tri": 6, "tril": [6, 392, 394, 395, 398], "tril_indic": [6, 395, 398], "tril_indices_from": 6, "trim_zero": 6, "triu": [6, 392, 397], "triu_indic": 6, "triu_indices_from": 6, "true_divid": 6, "trunc": [6, 30, 51, 118, 363, 366], "typenam": 6, "union1d": 6, "uniqu": [6, 43, 79], "unpackbit": 6, "unravel_index": [6, 27, 28], "unwrap": [6, 68, 304], "vander": 6, "var": [6, 78, 184, 280, 379, 417], "vdot": [6, 77, 181], "vsplit": [6, 53], "vstack": [6, 53, 137], "where": [6, 11, 12, 13, 14, 18, 20, 21, 22, 23, 24, 25, 26, 40, 41, 44, 45, 46, 47, 51, 54, 55, 58, 59, 61, 62, 76, 78, 85, 87, 90, 91, 118, 119, 120, 121, 122, 134, 135, 138, 144, 145, 146, 147, 148, 153, 154, 155, 156, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 188, 189, 190, 193, 245, 246, 265, 267, 272, 282, 287, 289, 296, 297, 298, 299, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 358, 362, 363, 365, 367, 370, 371, 372, 373, 375, 376, 380, 381, 385, 386, 400], "who": 6, "zero": [6, 14, 18, 31, 63, 71, 78, 83, 84, 92, 98, 103, 118, 129, 130, 139, 164, 168, 192, 197, 270, 288, 291, 292, 297, 299, 306, 308, 336, 338, 339, 341, 370, 371, 381, 392, 393, 396, 409], "zeros_lik": [6, 31, 84, 130, 292, 408], "astyp": [6, 78, 288], "byteswap": 6, "dump": 6, "fill": [6, 31, 78, 83, 84, 112, 129, 130, 254, 291, 292, 383, 392, 408, 409], "flatten": [6, 73, 78, 247, 248, 249, 260, 288, 355], "getfield": [6, 79], "item": [6, 78, 410], "itemset": 6, "newbyteord": [6, 79], "setfield": [6, 79], "setflag": 6, "tobyt": 6, "tofil": [6, 125], "tolist": 6, "tostr": 6, "view": [6, 39, 40, 41, 48, 78, 89, 115, 116, 117, 200, 275, 285, 360, 377, 382, 390], "linalg": [6, 376], "choleski": 6, "cond": 6, "det": 6, "eig": [6, 160, 161], "eigh": 6, "eigval": [6, 160], "eigvalsh": 6, "inv": 6, "lstsq": 6, "matrix_pow": [6, 376], "matrix_rank": 6, "multi_dot": 6, "norm": [6, 94, 95, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 157, 421], "pinv": 6, "qr": 6, "slogdet": 6, "solv": [6, 421], "svd": [6, 164], "tensorinv": 6, "tensorsolv": 6, "fft": [6, 410, 421], "fft2": 6, "fftfreq": 6, "fftn": 6, "fftshift": 6, "hfft": 6, "ifft": 6, "ifft2": 6, "ifftn": 6, "ifftshift": 6, "ihfft": 6, "irfft": 6, "irfft2": 6, "irfftn": 6, "register_func": 6, "restore_al": 6, "restore_func": 6, "rfft": 6, "rfft2": 6, "rfftfreq": 6, "rfftn": 6, "beta": [6, 317], "binomi": [6, 325], "byte": [6, 78, 79, 250, 264, 268], "chisquar": 6, "choic": [6, 52, 78, 251], "default_rng": 6, "dirichlet": 6, "exponenti": [6, 87, 90, 171, 175, 319, 345], "gamma": [6, 346], "geometr": [6, 131, 169], "get_stat": [6, 306], "gumbel": 6, "hypergeometr": 6, "laplac": 6, "logist": 6, "lognorm": 6, "logseri": 6, "multinomi": 6, "multivariate_norm": 6, "negative_binomi": 6, "noncentral_chisquar": 6, "noncentral_f": 6, "normal": [6, 64, 160, 306, 321, 324, 335, 347], "pareto": 6, "permut": [6, 78, 192, 285, 390, 421], "poisson": 6, "rand": [6, 306, 336, 338, 339, 341], "randint": [6, 78, 263, 306, 337], "randn": [6, 115, 116, 117, 168, 306, 378], "random_integ": [6, 306, 334], "random_sampl": [6, 306, 333, 336, 339, 341], "ranf": 6, "rayleigh": 6, "seed": [6, 78, 263, 306], "set_stat": 6, "shuffl": 6, "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 306, 335], "standard_t": 6, "triangular": [6, 156, 167], "uniform": [6, 79, 306, 333, 336, 338, 339, 341], "vonmis": 6, "wald": 6, "weibul": [6, 354], "zipf": 6, "show": [9, 79, 138, 179, 186, 344], "constant": [9, 79], "alias": 9, "bool": [9, 14, 18, 36, 78, 79, 85, 94, 100, 108, 134, 135, 146, 147, 148, 154, 155, 164, 166, 250, 288, 289, 360], "complex64": [9, 94, 100], "complex128": [9, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 361], "bool_": 9, "cdoubl": 9, "complex": [9, 11, 12, 24, 25, 54, 55, 77, 78, 79, 86, 113, 141, 160, 161, 168, 181, 252, 253, 299, 356, 370, 375, 417, 421], "cfloat": 9, "csingl": 9, "doubl": [9, 319], "float": [9, 15, 24, 33, 34, 36, 79, 113, 133, 164, 166, 180, 306, 310, 335, 336, 338, 339, 341, 344, 345, 347, 350, 417, 421], "float_": 9, "float16": 9, "int": [9, 36, 43, 71, 78, 79, 85, 113, 133, 140, 142, 249, 250, 294, 306, 334, 337, 360, 366, 369, 392, 394, 395, 397, 398, 417], "int_": 9, "intc": 9, "singl": [9, 78, 165, 184, 279, 306, 325, 334, 335, 336, 337, 338, 339, 341, 347, 417], "singlecomplex": 9, "e": [9, 21, 23, 78, 79, 89, 171, 281, 306, 382], "euler_gamma": 9, "inf": [9, 15, 25, 33, 34, 58, 76, 146, 147, 148, 157, 166, 171, 172, 174, 183, 189, 299, 375], "infin": [9, 14, 18, 118, 119, 146, 147, 148, 358, 400, 421], "infti": 9, "nan": [9, 14, 15, 16, 17, 18, 33, 34, 76, 120, 121, 146, 147, 148, 172, 183, 184, 189, 194, 195, 196, 197, 198, 297, 299, 375, 379, 404, 421], "ninf": 9, "nzero": 9, "pi": [9, 25, 61, 62, 69, 372, 373, 385, 386, 402], "pinf": 9, "pzero": 9, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 58, 61, 62, 64, 69, 76, 77, 78, 85, 86, 87, 88, 89, 90, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 134, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 153, 154, 155, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 198, 245, 246, 247, 248, 251, 254, 255, 261, 265, 267, 272, 276, 280, 282, 284, 286, 287, 288, 289, 293, 296, 297, 298, 299, 300, 305, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 347, 350, 355, 356, 357, 358, 361, 362, 363, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 392, 400, 402, 404, 406], "none": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 58, 61, 62, 63, 64, 65, 76, 77, 78, 79, 80, 83, 84, 85, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 118, 119, 120, 121, 122, 129, 130, 131, 134, 135, 136, 137, 138, 139, 144, 146, 147, 148, 153, 154, 155, 157, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 193, 198, 245, 246, 247, 248, 249, 251, 255, 263, 265, 266, 267, 271, 272, 273, 276, 279, 280, 282, 284, 286, 287, 289, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 362, 363, 364, 366, 367, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 389, 390, 391, 392, 394, 397, 400, 403, 404, 406, 407, 408, 409, 417], "order": [11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 34, 35, 37, 38, 44, 45, 46, 47, 51, 54, 55, 57, 61, 62, 76, 78, 79, 81, 82, 83, 84, 85, 87, 90, 92, 115, 116, 117, 118, 119, 129, 130, 134, 135, 138, 144, 146, 147, 148, 153, 154, 155, 160, 161, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 189, 190, 192, 193, 205, 249, 250, 254, 261, 271, 287, 289, 291, 292, 294, 296, 297, 299, 355, 358, 360, 362, 363, 367, 370, 371, 372, 373, 375, 376, 380, 385, 386, 400, 408, 409, 421], "k": [11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 31, 44, 45, 46, 47, 51, 54, 55, 57, 61, 62, 70, 73, 76, 78, 85, 87, 90, 92, 118, 119, 134, 135, 138, 144, 146, 147, 148, 153, 154, 155, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 189, 190, 193, 205, 250, 254, 261, 287, 289, 296, 297, 299, 358, 362, 363, 370, 371, 372, 373, 375, 376, 380, 385, 386, 392, 393, 394, 395, 396, 397, 398, 400, 425], "subok": [11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 31, 44, 45, 46, 47, 48, 49, 51, 54, 55, 57, 58, 61, 62, 76, 78, 84, 85, 87, 90, 118, 119, 120, 121, 122, 130, 134, 135, 138, 144, 146, 147, 148, 153, 154, 155, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 189, 190, 193, 250, 287, 289, 292, 296, 297, 299, 358, 362, 363, 370, 371, 372, 373, 375, 376, 380, 385, 386, 400, 409], "kwarg": [11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 51, 54, 55, 58, 61, 62, 65, 66, 67, 76, 77, 78, 81, 85, 87, 90, 93, 118, 119, 120, 121, 122, 124, 125, 126, 128, 133, 134, 135, 138, 143, 144, 146, 147, 148, 153, 154, 155, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 189, 190, 191, 193, 194, 195, 196, 197, 234, 266, 275, 287, 289, 296, 297, 299, 357, 358, 362, 363, 370, 371, 372, 373, 374, 375, 376, 378, 380, 385, 386, 387, 391, 392, 399, 400, 401, 405], "calcul": [11, 12, 75, 80, 87, 88, 90, 93, 118, 120, 121, 175, 190, 196, 197, 297, 298, 358, 375, 410], "valu": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 74, 75, 76, 78, 79, 80, 83, 84, 85, 87, 90, 91, 92, 93, 94, 100, 112, 113, 114, 118, 119, 120, 121, 122, 126, 129, 130, 131, 134, 135, 137, 138, 139, 142, 144, 146, 147, 148, 153, 154, 155, 156, 161, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 198, 202, 203, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 237, 239, 240, 241, 242, 243, 244, 247, 248, 250, 254, 258, 260, 265, 267, 271, 273, 287, 288, 289, 291, 292, 294, 295, 296, 297, 299, 300, 301, 302, 303, 306, 316, 333, 334, 350, 358, 359, 360, 362, 363, 366, 367, 368, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 400, 402, 404, 406, 408, 409, 417, 421], "wise": [11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 32, 44, 45, 46, 47, 50, 51, 53, 54, 55, 58, 61, 62, 76, 78, 85, 87, 88, 90, 93, 118, 120, 121, 122, 134, 135, 137, 141, 144, 145, 146, 147, 148, 153, 154, 155, 162, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 189, 190, 191, 193, 253, 287, 289, 296, 297, 299, 356, 357, 358, 362, 363, 366, 370, 371, 372, 373, 375, 376, 380, 385, 386, 399, 400, 406, 417], "contain": [11, 12, 14, 18, 19, 44, 45, 46, 47, 78, 79, 123, 132, 144, 153, 160, 184, 275, 306, 362, 375, 381, 394, 397, 417], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 247, 248, 249, 250, 258, 261, 275, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 404, 406, 407, 408, 409], "onli": [11, 12, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 42, 51, 54, 55, 57, 60, 61, 62, 63, 64, 74, 75, 78, 79, 80, 83, 84, 87, 90, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 118, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 146, 147, 148, 153, 156, 169, 170, 171, 172, 173, 174, 177, 180, 182, 185, 186, 188, 198, 250, 287, 291, 292, 294, 296, 299, 300, 301, 306, 328, 334, 350, 356, 360, 362, 363, 366, 367, 368, 370, 371, 372, 373, 379, 383, 385, 386, 387, 389, 392, 393, 396, 400, 404, 407, 408, 409, 417], "either": [11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 37, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 58, 59, 61, 62, 76, 77, 79, 85, 87, 89, 90, 91, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 115, 116, 117, 118, 119, 120, 121, 122, 134, 135, 137, 138, 141, 144, 145, 146, 147, 148, 153, 154, 155, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 186, 189, 190, 192, 193, 287, 288, 289, 293, 295, 296, 297, 299, 301, 342, 356, 358, 359, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 390, 400, 406, 407], "tensor": [11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 58, 59, 61, 62, 76, 77, 78, 84, 85, 87, 89, 90, 91, 115, 116, 117, 118, 119, 120, 121, 122, 130, 134, 135, 137, 138, 141, 143, 144, 146, 147, 148, 153, 154, 155, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 186, 189, 190, 192, 193, 287, 288, 289, 292, 293, 295, 296, 297, 299, 301, 356, 358, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 390, 393, 396, 400, 406, 407, 409], "usm_ndarrai": [11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 58, 59, 61, 62, 76, 77, 78, 84, 85, 87, 89, 90, 91, 115, 116, 117, 118, 119, 120, 121, 122, 130, 134, 135, 137, 138, 141, 144, 146, 147, 148, 153, 154, 155, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 186, 189, 190, 192, 193, 250, 287, 288, 289, 292, 293, 295, 296, 297, 299, 301, 356, 358, 360, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 390, 393, 396, 400, 406, 407, 409], "keyword": [11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 51, 58, 61, 62, 65, 66, 67, 76, 77, 80, 87, 90, 93, 118, 119, 120, 121, 122, 133, 138, 143, 144, 153, 172, 173, 174, 175, 183, 189, 190, 191, 193, 194, 195, 196, 197, 287, 296, 297, 299, 357, 358, 362, 363, 370, 371, 372, 373, 374, 378, 380, 385, 386, 387, 391, 392, 400, 417], "argument": [11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 51, 58, 61, 62, 65, 66, 67, 76, 77, 78, 79, 80, 86, 87, 90, 93, 118, 119, 120, 121, 122, 133, 138, 141, 143, 144, 150, 151, 153, 162, 165, 172, 173, 174, 175, 183, 189, 190, 191, 193, 194, 195, 196, 197, 249, 275, 287, 296, 297, 299, 356, 357, 358, 361, 362, 363, 370, 371, 372, 373, 374, 378, 380, 385, 386, 387, 391, 392, 400, 417], "unsupport": [11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 51, 58, 61, 62, 65, 66, 67, 76, 77, 87, 90, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 133, 138, 143, 144, 153, 165, 172, 173, 174, 175, 183, 189, 190, 191, 193, 194, 195, 196, 197, 287, 296, 297, 298, 299, 357, 358, 362, 363, 370, 371, 372, 373, 374, 378, 380, 385, 386, 387, 391, 392, 400], "sequenti": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 44, 45, 46, 47, 51, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 118, 119, 120, 121, 122, 129, 130, 133, 134, 135, 137, 138, 139, 143, 144, 145, 146, 147, 148, 153, 154, 155, 162, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 287, 288, 289, 291, 292, 293, 295, 296, 297, 301, 355, 357, 358, 359, 362, 363, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 385, 386, 387, 391, 392, 393, 396, 400, 404, 406, 407, 408, 409], "exclud": [11, 12, 306, 350], "note": [11, 12, 14, 16, 17, 18, 27, 28, 30, 36, 38, 57, 68, 78, 79, 89, 118, 146, 166, 180, 190, 249, 254, 275, 288, 301, 304, 309, 311, 312, 322, 327, 360, 382, 383, 388, 399, 405], "shorthand": [11, 12, 13, 44, 45, 46, 47, 76, 85, 119, 134, 135, 144, 153, 154, 155, 176, 178, 193, 287, 289, 296, 297, 358, 362, 380, 407], "1j": [11, 12, 54, 55, 78, 141, 168, 262, 274, 356, 376], "5620499351813308": [11, 12], "x1": [13, 15, 24, 25, 27, 28, 42, 43, 44, 46, 47, 50, 52, 58, 60, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 84, 85, 88, 93, 112, 119, 120, 121, 122, 130, 133, 134, 135, 138, 143, 145, 152, 153, 154, 155, 159, 166, 167, 168, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 250, 287, 289, 292, 293, 294, 296, 297, 298, 302, 303, 304, 305, 343, 357, 358, 362, 364, 367, 374, 379, 380, 384, 387, 389, 391, 393, 395, 396, 398, 402, 403, 404, 409], "x2": [13, 14, 15, 18, 24, 25, 31, 44, 46, 47, 58, 60, 65, 76, 77, 85, 119, 120, 121, 122, 131, 134, 135, 138, 143, 145, 152, 153, 154, 155, 169, 175, 176, 177, 178, 179, 180, 181, 183, 186, 189, 190, 193, 287, 288, 289, 293, 296, 297, 358, 362, 364, 367, 375, 380, 387], "scalar": [13, 15, 25, 44, 46, 47, 58, 59, 76, 77, 78, 79, 85, 119, 120, 121, 122, 134, 135, 138, 149, 153, 154, 155, 175, 176, 178, 179, 183, 186, 189, 190, 193, 248, 258, 263, 289, 293, 297, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 328, 329, 331, 332, 334, 337, 340, 342, 346, 348, 349, 350, 351, 352, 353, 354, 358, 362, 380, 407, 417], "both": [13, 15, 25, 44, 46, 47, 58, 76, 77, 85, 119, 120, 121, 122, 134, 135, 138, 153, 154, 155, 166, 175, 176, 178, 179, 183, 189, 190, 193, 289, 293, 297, 358, 362, 380], "b": [13, 15, 44, 47, 53, 59, 66, 67, 77, 79, 80, 85, 122, 134, 135, 137, 143, 154, 155, 168, 176, 178, 181, 194, 195, 289, 293, 297, 307, 378, 387, 388, 391, 406], "7": [13, 15, 19, 39, 51, 59, 63, 67, 70, 71, 76, 78, 80, 87, 115, 118, 133, 145, 168, 181, 185, 193, 195, 263, 288, 299, 306, 330, 356, 358, 361, 363, 364, 380, 382, 383, 387, 393, 396, 400, 407], "oper": [13, 44, 45, 46, 47, 76, 79, 85, 89, 119, 134, 135, 144, 153, 154, 155, 156, 176, 177, 178, 179, 193, 287, 289, 296, 297, 301, 358, 362, 380, 388, 410, 421], "axi": [14, 16, 17, 18, 27, 28, 29, 42, 53, 63, 65, 66, 67, 75, 78, 80, 89, 94, 99, 100, 104, 105, 108, 115, 116, 117, 131, 137, 166, 169, 180, 182, 183, 184, 185, 188, 189, 194, 195, 198, 245, 246, 247, 248, 249, 255, 265, 266, 267, 271, 272, 273, 279, 280, 282, 284, 286, 294, 298, 300, 301, 302, 359, 360, 364, 365, 377, 378, 379, 381, 382, 383, 384, 388, 391, 404, 406, 417], "keepdim": [14, 18, 63, 78, 166, 182, 184, 185, 188, 198, 245, 246, 265, 267, 272, 280, 282, 286, 298, 300, 379, 381, 404], "fals": [14, 15, 18, 31, 32, 35, 37, 42, 44, 45, 47, 48, 49, 57, 63, 64, 78, 79, 84, 85, 112, 130, 131, 134, 135, 142, 144, 145, 146, 147, 148, 154, 155, 164, 166, 168, 169, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 198, 245, 246, 250, 272, 280, 282, 286, 289, 292, 298, 360, 371, 379, 381, 403, 404, 409], "whether": [14, 15, 18, 79, 156, 360], "given": [14, 16, 17, 18, 19, 27, 28, 30, 31, 57, 64, 66, 67, 75, 77, 78, 79, 80, 83, 84, 112, 115, 129, 130, 138, 183, 186, 188, 189, 194, 195, 247, 248, 249, 250, 255, 267, 272, 273, 276, 280, 282, 286, 291, 292, 298, 301, 306, 311, 333, 350, 363, 364, 365, 366, 381, 388, 391, 392, 406, 408, 409, 417], "evalu": [14, 15, 18, 78, 81, 82, 85, 143, 186, 245, 246, 293, 387], "logic": [14, 18, 176, 178, 179, 410, 421], "AND": [14, 44, 45, 46, 47, 144, 176, 177, 178, 179], "reduct": [14, 18], "equival": [14, 18, 30, 57, 78, 89, 205, 245, 246, 275, 285, 286, 296, 305, 306, 334, 360, 366, 369, 390, 417], "method": [14, 18, 57, 78, 79, 114, 123, 125, 164, 250, 254, 275, 306, 360, 369, 390, 410], "Not": [14, 18, 78, 146, 194, 196, 197, 249], "number": [14, 18, 19, 30, 43, 48, 49, 54, 55, 63, 78, 79, 89, 113, 118, 119, 131, 140, 146, 157, 164, 166, 169, 170, 180, 194, 196, 197, 269, 276, 277, 278, 288, 299, 306, 308, 318, 342, 358, 363, 364, 365, 366, 370, 371, 382, 388, 400, 421], "becaus": [14, 18], "x3": [14, 18, 169, 180], "rtol": [15, 145], "1e": [15, 90, 145, 172, 173, 175, 324], "05": [15, 145], "atol": [15, 145], "08": [15, 61, 145, 324, 372], "two": [15, 16, 17, 32, 39, 40, 44, 45, 46, 47, 56, 60, 65, 73, 78, 79, 81, 82, 143, 144, 145, 152, 160, 165, 176, 178, 179, 181, 183, 189, 192, 271, 283, 293, 306, 335, 382, 393, 394, 396, 397, 405], "within": [15, 19, 32, 78, 145, 250, 301, 306, 350], "toler": [15, 32, 145], "A": [15, 59, 78, 79, 89, 115, 116, 117, 123, 125, 128, 161, 250, 254, 261, 277, 306, 308, 325, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 371, 382, 388, 390], "boolean": [15, 44, 46, 47, 79, 145, 146, 147, 148, 176, 177, 178, 179, 360, 371, 383], "dim": 15, "typeerror": [15, 48, 49, 53, 59, 89, 94, 100, 108, 115, 116, 117, 137, 192, 364, 365, 377, 378, 382, 406], "rais": [15, 31, 33, 34, 35, 37, 48, 49, 52, 53, 57, 59, 78, 88, 89, 94, 100, 108, 115, 116, 117, 137, 163, 192, 250, 251, 277, 297, 360, 364, 365, 376, 377, 378, 382, 406], "integ": [15, 30, 44, 45, 46, 47, 78, 79, 118, 119, 140, 144, 145, 153, 163, 166, 247, 248, 297, 301, 306, 334, 337, 342, 358, 360, 362, 363, 366, 376, 383, 392, 393, 396, 400, 417], "1e10": [15, 145], "00001e10": [15, 145], "propag": [16, 17, 79, 120, 121, 183, 189], "ignor": [16, 17, 78, 79, 120, 121, 183, 184, 189, 198, 286, 379, 404], "exactli": [16, 17, 38, 68, 304, 306, 334], "OR": [18, 44, 45, 46, 47, 144, 176, 177, 178, 179], "stop": [19, 131, 169, 180], "like": [19, 31, 33, 34, 35, 37, 39, 40, 41, 78, 83, 92, 129, 139, 170, 250, 291, 306, 350, 360, 408, 421], "usm_typ": [19, 31, 33, 34, 35, 36, 37, 78, 83, 84, 92, 129, 130, 139, 169, 291, 292, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 347, 350, 392, 408, 409], "sycl_queu": [19, 31, 33, 34, 35, 36, 37, 78, 83, 84, 92, 129, 130, 139, 169, 291, 292, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 392, 408, 409], "evenli": [19, 131, 169, 180, 363, 366], "interv": [19, 89, 169, 306, 334, 336, 338, 339, 341, 349, 350, 382], "d": [19, 53, 71, 79, 92, 95, 96, 97, 101, 102, 106, 107, 109, 110, 111, 116, 117, 128, 139, 160, 165, 166, 186, 288, 297, 301, 311, 360, 369, 383, 388, 406, 407, 417], "care": 19, "handl": [19, 79, 288, 383, 421], "endpoint": [19, 131, 169, 180], "trigonometr": [20, 21, 22, 23, 24, 25, 26, 61, 62, 372, 373, 385, 386, 421], "invers": [20, 21, 22, 23, 24, 25, 26, 45, 61, 62, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 144, 171, 173, 352, 372, 373, 385, 386], "cosin": [20, 21, 22, 23, 24, 25, 26, 61, 62, 372, 373, 385, 386], "tangent": [20, 21, 22, 23, 24, 25, 26, 61, 62, 372, 373, 385, 386], "sine": [20, 21, 22, 23, 24, 25, 26, 61, 62, 372, 373, 385, 386], "hyperbol": [20, 21, 22, 23, 24, 25, 26, 61, 62, 372, 373, 385, 386, 421], "14159265": [20, 25], "65745445": 21, "99322285": 21, "5707963267948966": 22, "72538256": 23, "99822295": 23, "point": [24, 33, 34, 79, 113, 169, 306, 335, 347, 421], "arc": [24, 25], "quadrant": [24, 25], "correctli": [24, 25, 166, 288], "78539816": [24, 25, 402], "57079633": [25, 305, 402], "180": 25, "135": 25, "54930614": 26, "convert": [27, 28, 33, 34, 35, 36, 37, 39, 40, 41, 68, 69, 79, 304, 305, 402], "flat": [27, 28, 78, 114, 261], "index": [27, 28, 52, 78, 79, 186, 247, 248, 251, 281, 301, 302, 360, 383, 384, 410, 421], "tupl": [27, 28, 71, 78, 79, 89, 166, 277, 288, 359, 360, 369, 394, 397, 417], "appli": [27, 28, 29, 176, 178, 179, 361], "index_arrai": [27, 28, 29, 78, 247, 249], "call": [27, 28, 29, 35, 37, 79, 165, 205, 377, 388, 407], "multipl": [27, 28, 29, 53, 78, 79, 137, 160, 161, 249, 374, 378, 406, 410], "occurr": [27, 28, 43], "first": [27, 28, 78, 79, 88, 150, 151, 165, 249, 297, 360, 364, 376], "11": [27, 28, 62, 71, 78, 133, 275, 325, 334, 366, 373, 393, 396], "12": [27, 28, 41, 71, 79, 141, 330, 393, 396], "14": [27, 28, 44, 45, 71, 77, 144, 387], "15": [27, 28, 67, 71, 172, 330, 381], "in_array1": [29, 63, 86], "kind": [29, 78, 79, 113, 249, 250, 271, 294, 421], "would": [29, 78, 79, 271, 306, 390], "describ": [29, 78, 79, 166, 249, 381, 421], "algorithm": [29, 78, 249], "indirect": [29, 78, 249, 374], "stabl": [29, 78, 249, 374], "partial": [29, 374], "decim": [30, 78, 113, 276, 363, 366], "detail": [30, 123, 366, 394, 395, 397, 398, 417], "nearest": [30, 118, 119, 358, 363, 366, 400], "truncat": [30, 51, 118, 344, 363, 366, 400], "ndmin": 31, "object": [31, 34, 35, 37, 57, 78, 79, 89, 113, 114, 123, 127, 140, 156, 160, 166, 170, 187, 275, 290, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 360, 417], "satisfi": [31, 35, 37, 78, 91, 250], "specifi": [31, 35, 42, 49, 74, 78, 131, 143, 166, 169, 180, 184, 185, 198, 247, 248, 249, 256, 306, 319, 329, 347, 364, 365, 379, 387, 404], "valueerror": [31, 33, 34, 35, 37, 57, 360, 377], "new": [31, 48, 49, 53, 78, 79, 83, 84, 89, 123, 127, 128, 129, 130, 137, 139, 192, 248, 250, 275, 285, 291, 292, 360, 364, 365, 378, 388, 390, 406, 408, 409, 417], "uniniti": [31, 84, 129, 291, 408], "than": [31, 78, 113, 116, 117, 137, 164, 271, 359, 370, 371, 378], "dimens": [31, 39, 40, 41, 53, 64, 71, 78, 79, 89, 116, 117, 137, 142, 162, 166, 192, 248, 261, 269, 277, 306, 336, 338, 339, 341, 359, 360, 369, 374, 377, 378, 382, 388, 393, 394, 395, 396, 397, 398, 417, 421], "a1": 32, "a2": 32, "equal_nan": [32, 145], "consist": 32, "contigu": [33, 34, 35, 37, 78, 261, 355, 360], "check": [33, 34, 156], "construct": [33, 34, 52, 70, 78, 79, 125, 126, 187, 251, 290, 388, 410], "grid": [33, 34, 142, 186], "No": [34, 156], "perform": [34, 156], "match": [34, 79, 301, 302, 383, 384], "pass": [34, 78, 79, 275], "through": [34, 79, 417], "subclass": [34, 151], "content": [35, 78, 343], "flag": [35, 37, 78, 79, 254], "about": [35, 37, 78, 113, 259, 417], "layout": [35, 37, 78, 259, 360, 410], "f_contigu": [35, 37], "make": [35, 37, 79, 186], "now": [35, 37, 71], "c_contigu": [35, 37, 78, 254], "Then": [35, 37], "laid": 37, "fortran": [37, 78, 250, 261, 360], "row": [37, 53, 78, 116, 117, 137, 165, 170, 250, 261, 394, 406], "ari": [39, 40, 41], "least": [39, 40, 41, 79, 145, 406], "One": [39, 40, 41, 79, 360], "sequenc": [39, 40, 41, 53, 56, 60, 137, 163, 165, 330, 343, 361, 378, 406], "preserv": [39, 40, 41, 78, 79, 115, 116, 117, 247, 248, 250], "made": [39, 79], "three": [39, 40, 41, 306, 342], "avoid": [40, 41, 78, 249], "possibl": [40, 41, 78, 89, 250, 275, 360, 377, 382, 390], "weight": [42, 43, 64, 136, 184], "arithmet": [42, 131, 184, 185, 296, 379, 404, 410, 421], "minlength": 43, "count": [43, 63, 79, 127, 163, 288, 308, 410, 421], "non": [43, 63, 78, 146, 160, 270, 288, 297, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 375], "find": [43, 164, 367, 374, 401, 421], "re": [43, 136, 364, 401], "bit": [44, 45, 46, 47, 79, 113, 140, 144, 153, 176, 178, 179, 362, 421], "truth": [44, 45, 46, 47, 85, 134, 135, 144, 154, 155, 176, 177, 178, 179, 289, 421], "xor": [44, 45, 46, 47, 144, 176, 177, 178, 179], "255": [44, 46], "NOT": [45, 144, 176, 177, 178, 179], "31": [47, 131], "26": 47, "arg": [48, 81, 306, 399, 405], "broadcast": [48, 49, 59, 120, 121, 138, 166, 176, 178, 179, 181, 183, 189, 297, 301, 388], "against": [48, 49, 132, 166], "other": [48, 49, 78, 79, 118, 139, 165, 192, 202, 203, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 237, 239, 242, 243, 244, 249, 250, 299, 306, 350, 410, 421], "origin": [48, 78, 166, 192, 249, 360], "notimplementederror": [48, 49, 78, 250], "must": [49, 78, 89, 91, 156, 165, 166, 170, 247, 248, 301, 382], "dp": [49, 76, 77, 78, 160, 285, 297, 360, 361, 369, 380, 390, 407], "cube": 50, "27": [50, 297, 403], "mode": [52, 56, 60, 78, 167, 251, 273, 284, 301, 344, 349, 383], "prefer": [52, 57, 78, 254], "cast": [53, 59, 78, 137, 250, 406], "same_kind": [53, 59, 78, 137, 250, 406], "join": [53, 137, 378, 406, 421], "exist": [53, 79, 89, 137, 360, 378, 406], "sub": [53, 79, 137, 378, 406], "horizont": [53, 115, 137, 406], "vertic": [53, 115, 116, 137, 406], "3rd": 53, "depth": [53, 406], "assembl": [53, 137, 378, 406], "third": [53, 406], "t": [53, 64, 78, 79, 161, 285, 348], "obtain": [54, 55, 288], "chang": [54, 55, 57, 58, 78, 79, 249, 250, 281, 285, 287, 295, 296, 301, 303, 360, 402, 421], "imaginari": [54, 55, 78, 141, 262, 299, 356], "2j": [54, 55, 141, 160, 356, 370], "j": [54, 55, 141, 160, 174, 299, 356, 376], "v": [56, 79, 160], "linear": [56, 60, 180, 410, 421], "convolut": [56, 60], "ca": 56, "z": [57, 126, 186, 316], "when": [57, 78, 79, 166, 180, 249, 250, 383, 407], "we": [57, 71], "modifi": [57, 343], "dst": 59, "src": 59, "rule": [59, 181, 361, 391], "violat": 59, "valid": [60, 89, 382, 394, 395, 397, 398], "000000e": [61, 372], "00": [61, 372], "371139e": 61, "5091786": 62, "591953": 62, "m": [64, 79, 92, 115, 116, 117, 156, 158, 160, 161, 164, 392, 394, 397], "rowvar": 64, "bia": 64, "ddof": [64, 78, 198, 280, 286, 379, 404], "fweight": 64, "aweight": 64, "estim": [64, 308, 325], "covari": 64, "matrix": [64, 156, 157, 160, 161, 163, 164, 166, 167, 181, 376, 396, 403, 410, 421], "variabl": 64, "axisa": 65, "axisb": 65, "axisc": 65, "vector": [65, 157, 164, 165, 166, 186, 405, 421], "cumul": [66, 67, 78, 194, 195, 255], "24": [66, 80, 196, 298], "120": [66, 69], "720": 66, "remov": [68, 78, 89, 279, 304, 377, 421], "larg": [68, 79, 304], "jump": [68, 304], "wrap": [68, 78, 112, 273, 284, 301, 304, 383], "rad": 69, "30": [69, 305], "60": [69, 407], "90": [69, 407], "150": 69, "access": [71, 72, 112, 417], "main": [71, 72, 112, 139, 161], "usual": [71, 79], "di": 71, "100": [71, 131, 180, 318, 344], "d3": 71, "offset": [74, 78, 79, 256, 389, 394, 395, 397, 398], "axis1": [74, 78, 256, 283, 382, 389], "axis2": [74, 78, 256, 283, 382, 389], "prepend": [75, 89, 388], "th": [75, 80, 185, 393, 396], "quotient": [76, 190, 358], "over": [77, 114, 126, 166, 169, 181, 186, 194, 298, 306, 333, 338, 349, 350, 381, 421], "arbitrari": [77, 79, 181, 361], "ax": [77, 78, 95, 97, 98, 101, 102, 103, 106, 107, 109, 111, 143, 166, 181, 184, 192, 277, 283, 285, 364, 365, 377, 382, 387, 388, 390], "buffer": [78, 124, 360], "stride": [78, 250], "wrapper": 78, "compliant": 78, "__getitem__": [78, 79, 114], "self": [78, 79, 114, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 260, 306], "__setitem__": [78, 114], "val": [78, 112, 114, 240, 273, 295, 301], "__len__": [78, 79], "len": [78, 79, 142, 227, 359, 369], "option": [78, 79, 164, 165, 166, 247, 248, 249, 250, 261, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 360, 383, 394, 395, 397, 398], "Its": [78, 247, 248], "right": [78, 116, 117, 138, 153, 159, 160, 247, 248, 349, 362, 367], "hold": [78, 166, 247, 248], "output": [78, 79, 85, 134, 135, 154, 155, 163, 165, 186, 241, 247, 248, 289, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 377, 388, 421], "integer_arrai": [78, 247], "versionchang": [78, 249], "previous": [78, 249], "wa": [78, 79, 249, 306, 347, 381], "error": [78, 86, 249, 410], "At": [78, 249], "some": [78, 79, 89, 91, 118, 249, 417], "futur": [78, 79, 249], "intend": [78, 249], "until": [78, 249, 364, 365], "should": [78, 132, 145, 249, 250, 323, 359, 360, 367, 417], "explicitli": [78, 249], "arr": [78, 79, 249, 288, 300, 303, 330, 395, 398], "futurewarn": [78, 249], "quicksort": [78, 249], "mergesort": [78, 249], "heapsort": [78, 249], "field": [78, 79, 186, 249], "compar": [78, 85, 249], "second": [78, 79, 88, 151, 249, 297, 376], "etc": [78, 79, 249, 325], "word": [78, 118, 249, 306, 350], "yield": [78, 249, 306, 417], "maskedarrai": [78, 249], "inplac": [78, 249], "asnumpi": 78, "popul": [78, 306, 333], "unsaf": [78, 250], "target": [78, 250], "style": [78, 250, 261], "keep": [78, 250], "close": [78, 89, 250, 306, 334], "happen": [78, 250, 308], "itself": [78, 79, 250, 417], "equiv": [78, 250], "safe": [78, 250], "what": [78, 79, 85, 250, 308, 325], "mai": [78, 79, 89, 160, 180, 250, 388, 417], "occur": [78, 250, 261], "backward": [78, 250, 364, 365], "convers": [78, 250, 410], "By": [78, 250, 394, 397], "newli": [78, 250], "instead": [78, 89, 118, 131, 169, 180, 250, 288], "arr_t": [78, 250], "unless": [78, 166, 250], "condit": [78, 91, 157, 250, 295, 301, 303, 368, 407], "behavior": [78, 254, 388], "assign": [78, 258], "collaps": [78, 261], "get_arrai": 78, "get": [78, 281, 417], "id": [78, 263], "standard": [78, 113, 119, 122, 184, 190, 241, 263, 306, 321, 328, 335, 344, 345, 346, 347, 348, 358, 379, 381, 399, 404, 417, 421], "random": [78, 115, 116, 117, 168, 263, 378, 410, 421], "123": [78, 263], "initi": [78, 83, 128, 182, 188, 265, 267, 272, 282, 298, 306, 381], "kth": [78, 271, 294], "introselect": [78, 271, 294], "rearrang": [78, 271, 421], "smaller": [78, 113, 119, 271, 358], "move": [78, 192, 271, 364, 365, 390], "behind": [78, 271], "undefin": [78, 271], "dparrai": [78, 272, 282, 422], "sh": [78, 275], "unlik": [78, 275], "free": [78, 275], "separ": [78, 79, 275], "entri": [78, 79, 83, 115, 116, 117, 279, 286], "varianc": [78, 184, 198, 280, 286, 379, 404, 421], "interchang": [78, 192, 283, 382], "to_devic": 78, "target_devic": 78, "transfer": 78, "suitabl": [78, 285], "properti": [78, 200, 257, 259, 260, 262, 264, 268, 269, 274, 277, 278, 281, 285, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 417], "give": [78, 285, 360, 369], "without": [78, 83, 277, 285, 360, 417], "mask": [78, 79, 286, 295, 303, 383], "finit": [78, 146, 147, 148, 286, 299], "__eq__": [78, 79, 114, 306], "__ne__": [78, 79, 114, 306], "__lt__": [78, 79, 114, 306], "__le__": [78, 79, 114, 306], "__gt__": [78, 79, 114, 306], "__ge__": [78, 79, 114, 306], "attribut": [78, 79, 113, 140, 410], "0j": [78, 262, 274, 370], "70710677": [78, 262, 274], "items": [78, 79], "nbyte": 78, "consum": [78, 268], "length": [78, 85, 277, 309, 360, 361, 369, 377, 388], "repres": [78, 79, 123, 142, 277, 306, 417], "setter": [78, 277], "involv": [78, 277], "cannot": [78, 277, 377], "displac": [78, 281], "upon": [78, 281], "unit": [78, 281], "respect": [78, 281], "s1": [78, 79, 281], "s2": [78, 79, 281], "s3": [78, 281], "i1": [78, 79, 281], "i2": [78, 79, 281], "i3": [78, 281], "sycl_context": 78, "sycl_devic": 78, "align": 79, "homogen": 79, "fundament": 79, "struct": 79, "obj": [79, 123, 149], "dictionari": 79, "comma": 79, "string": [79, 128, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 417], "sticki": 79, "isalignedstruct": 79, "just": 79, "built": 79, "int16": 79, "structur": 79, "f1": 79, "unsign": 79, "uint64": 79, "f2": 79, "u8": 79, "i4": 79, "protocol": [79, 123], "f8": 79, "s10": 79, "format": [79, 125, 421], "f0": 79, "void": 79, "flexibl": 79, "hello": 79, "world": [79, 308, 325], "i8": 79, "v10": 79, "subdivid": 79, "int8": 79, "gender": 79, "ag": 79, "uint8": 79, "u1": 79, "25": [79, 86, 133, 136, 169, 193, 335, 344, 403, 404], "surnam": 79, "s25": 79, "new_ord": 79, "forc": 79, "swap": [79, 382], "code": 79, "opposit": 79, "endian": 79, "littl": 79, "big": 79, "nativ": 79, "new_dtyp": 79, "sy": 79, "sys_is_l": 79, "byteord": 79, "native_cod": 79, "swapped_cod": 79, "native_dt": 79, "swapped_dt": 79, "l": [79, 156, 160], "accord": [79, 113, 160, 161], "subarrai": 79, "regardless": 79, "subdtyp": 79, "8f": 79, "charact": 79, "applic": 79, "dt": 79, "relev": 79, "ascii": 79, "even": [79, 366], "char": 79, "descr": 79, "__array_interface__": 79, "descript": [79, 417], "warn": [79, 324], "directli": [79, 180], "accur": 79, "reconstruct": [79, 168], "str_": 79, "grade": 79, "u16": 79, "fulli": 79, "titl": 79, "present": 79, "unicod": 79, "meta": 79, "notic": 79, "s16": 79, "multiarrai": 79, "item_hasobject": 79, "list_pickl": 79, "item_is_point": 79, "needs_init": 79, "needs_pyapi": 79, "use_getitem": 79, "use_setitem": 79, "explan": 79, "thei": [79, 161, 417], "user": 79, "particular": 79, "hasobject": 79, "recal": 79, "actual": [79, 156], "address": 79, "pointer": 79, "distinguish": 79, "won": 79, "maintain": [79, 367], "so": [79, 85, 171, 344, 375, 388], "togeth": 79, "produc": 79, "isbuiltin": 79, "relat": 79, "read": [79, 125, 360], "machineri": 79, "extend": [79, 417], "field1": 79, "isn": 79, "platform": 79, "anyth": 79, "80": [79, 407], "biufcmmosuv": 79, "identifi": 79, "gener": [79, 161, 306, 308, 311, 342, 403, 417, 421], "u": [79, 168], "timedelta": 79, "datetim": 79, "metadata": 79, "readonli": 79, "mappingproxi": 79, "approach": 79, "although": [79, 388], "guarante": [79, 360], "certain": 79, "project": [79, 299], "featur": 79, "long": 79, "undocu": 79, "well": [79, 125, 308, 325, 344], "aspect": 79, "ad": [79, 421], "datatyp": [79, 164], "dt2": 79, "key2": 79, "value2": 79, "arr2": 79, "clear": 79, "width": 79, "un": 79, "void640": 79, "increas": [79, 89, 403], "walk": 79, "num": [79, 86, 131, 169, 180, 402], "roughli": 79, "precis": [79, 113], "str": 79, "19": 79, "typestr": 79, "item_dtyp": 79, "whose": [79, 161, 364, 395, 398], "retriev": 79, "extra": 79, "impli": 79, "tack": 79, "end": [79, 169], "to_end": 80, "to_begin": 80, "between": [80, 113, 161, 323, 337, 402], "consecut": 80, "einstein": [81, 82, 143, 181, 293, 387], "summat": [81, 82, 143, 181, 293, 387], "convent": [81, 82, 143, 181, 293, 387], "operand": [81, 82, 143, 293, 387], "lowest": [81, 82, 306, 334], "cost": [81, 82], "contract": [81, 82], "express": [81, 82], "subscript": 82, "greedi": 82, "consid": [82, 146, 164, 306, 334], "intermedi": 82, "dpnp_arrai": [84, 113, 123, 130, 140, 186, 199, 292, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 393, 396, 409, 410], "scipi": 86, "math": 86, "75": [86, 133, 169], "99532227": 86, "99853728": 86, "99959305": 86, "99989938": 86, "99997791": 86, "718281828": [87, 90], "389056099": [87, 90], "p": [88, 157, 308, 311, 316, 322, 325], "expand": 89, "appear": [89, 116, 117], "whenev": [89, 382, 390], "rank": [89, 91, 164, 382], "resid": 89, "singleton": [89, 377], "henc": 89, "resolv": 89, "newaxi": 89, "minu": [90, 118, 119, 358, 400], "callcul": 90, "00000000005e": 90, "000000082740371e": 90, "elsewher": [92, 139, 392, 407], "fourier": [94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 410], "transform": [94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 410], "batch": [95, 97, 101, 102, 106, 107, 109, 111], "sampl": [96, 110, 131, 169, 180, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 410, 421], "frequenc": [96, 98, 103, 110], "shift": [98, 103, 153, 362, 364], "compon": [98, 103, 113, 141, 299, 356], "center": [98, 103], "spectrum": [98, 103], "signal": [99, 104], "hermitian": [99, 104, 156, 160, 164, 168, 421], "symmetri": [99, 104], "occupi": [113, 140], "ep": [113, 164], "smallest": [113, 140], "represent": [113, 140, 417], "larger": 113, "ieee": 113, "754": 113, "epsneg": 113, "largest": [113, 119, 140, 358], "approxim": 113, "resolut": 113, "tini": 113, "alia": [113, 199, 306, 336, 339, 341], "smallest_norm": 113, "finfo_object": 113, "__next__": 114, "__iter__": 114, "revers": [115, 116, 117], "reorder": 115, "left": [116, 117, 153, 166, 349, 362, 367], "direct": [116, 117], "down": 117, "toward": [118, 119, 358, 400], "spreadsheet": 118, "definit": [118, 156], "divis": [119, 120, 121, 122, 190, 297, 358, 399], "floordivid": 119, "complementari": [119, 122, 190], "__dlpack__": 123, "dmlc": 123, "github": 123, "io": [123, 170], "dlpack": 123, "__dlpack_device__": 123, "file": [125, 132, 170], "text": [125, 128, 170], "binari": [125, 410, 421], "highli": 125, "effici": [125, 164], "known": [125, 344], "pars": 125, "simpli": 125, "written": 125, "coordin": [126, 186], "therefor": 126, "fn": 126, "fill_valu": [129, 130], "50": [131, 175, 180, 387, 407], "scale": [131, 169, 180, 306, 313, 315, 317, 318, 319, 320, 328, 340, 345, 352], "progress": [131, 169], "1000": [131, 180, 307, 308, 313, 315, 317, 318, 319, 320, 321, 328, 329, 332, 334, 336, 339, 341, 347, 351, 352, 353, 354], "62341325": 131, "6227766": 131, "177": [131, 180], "827941": [131, 180], "directori": 132, "h": [132, 156, 186], "header": 132, "modul": [132, 410], "vararg": 133, "y1": [133, 391], "bin": [136, 344], "densiti": 136, "dataset": 136, "hist": [136, 344], "bin_edg": 136, "4999999999999996": 136, "tup": [137, 406], "nd": [137, 378, 406], "nest": [137, 378, 406], "leg": 138, "triangl": [138, 392, 393, 394, 395, 396, 397, 398], "hypotenus": 138, "iinfo_object": 140, "4j": [141, 356], "6j": [141, 356], "spars": [142, 186], "nat": 148, "arg1": [150, 151], "arg2": [150, 151], "typecod": 150, "lower": [150, 156, 392, 393, 394, 395, 398], "hierarchi": 150, "determin": [151, 158, 176, 178, 179], "kroneck": 152, "40": 153, "decomposit": [156, 168, 421], "ordinari": 156, "symmetr": [156, 160, 164], "verifi": 156, "addit": 156, "array_lik": [156, 158, 161, 163, 164, 165, 166, 306, 369, 388, 395, 398], "upper": [156, 167, 392, 396, 397], "factor": [156, 167], "fro": 157, "eigenvalu": [159, 160, 161, 421], "eigenvector": [159, 160, 161], "uplo": 160, "w": [160, 161], "ascend": 160, "17157288": 160, "82842712": 160, "92387953": 160, "38268343": 160, "vari": 160, "38268343j": 160, "92387953j": 160, "aren": 161, "necessarili": 161, "nor": 161, "matric": [161, 164, 166, 186], "suppli": [163, 165, 306, 335], "tol": [164, 324], "singular": [164, 168], "threshold": 164, "epsilon": 164, "assum": 164, "enabl": 164, "treat": [165, 194, 196, 197, 299, 388, 417], "last": [165, 360, 364, 377], "ord": 166, "abl": 166, "eight": 166, "infinit": [166, 299], "under": 166, "With": 166, "reduc": [167, 168], "q": [167, 185], "orthonorm": 167, "r": 167, "full_matric": 168, "compute_uv": 168, "2d": 168, "vh": 168, "smat": 168, "4d": 168, "retstep": 169, "logarithm": [169, 171, 172, 173, 174, 175, 322, 421], "fname": 170, "stringio": 170, "behav": 170, "n2": 170, "natur": [171, 172, 173, 174, 175], "plu": [171, 172, 173, 174], "30102999566": 172, "69314718": 173, "09861229": 173, "99": 173, "xi": [174, 186], "26618007j": 174, "prob1": 175, "prob2": 175, "5e": 175, "prob12": 175, "113": 175, "87649168": 175, "uniformli": [180, 306, 350], "215": 180, "443469": 180, "464": 180, "15888336": 180, "316": 180, "22776602": 180, "562": 180, "34132519": 180, "0396842": 180, "34960421": 180, "amix": 183, "nanmix": 183, "deviat": [184, 306, 321, 328, 379, 404], "while": [184, 198, 288, 379, 404], "overwrite_input": 185, "xy": 186, "xn": 186, "nx": 186, "ny": 186, "xv": 186, "yv": 186, "matplotlib": [186, 344], "pyplot": [186, 344], "plt": [186, 344], "xx": 186, "yy": 186, "contourf": 186, "dpnp_iface_arraycr": [187, 290], "mgridclass": 187, "dens": 187, "5j": [187, 290], "fraction": 191, "destin": [192, 301, 302, 384], "remain": [192, 360], "usm": [192, 306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 347, 350, 377], "_novalu": [198, 379, 404], "repr": 238, "136": 241, "272": 241, "408": 241, "out2": 288, "ogridclass": 290, "open": [290, 306, 336, 338, 339, 341, 350, 382], "expon": [297, 332, 421], "125": [297, 403], "effect": 297, "onto": 299, "riemann": 299, "sphere": 299, "magnitud": 299, "7j": 299, "1d": [301, 302, 384], "slice": [301, 302, 384, 397, 417], "contrast": 301, "cyclic": 301, "clamp": [301, 383], "boundari": 301, "44": 301, "55": 301, "22": 301, "deg": 305, "52359878": 305, "04719755": 305, "0943951": 305, "61799388": 305, "mersenn": 306, "twister": 306, "pseudo": 306, "maximumum": [306, 342], "sycldevic": [306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350], "syclqueu": [306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350], "concept": [306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350, 417], "oneapi": [306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350], "filter": [306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350], "selector": [306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 347, 350], "intern": 306, "state": 306, "get_sycl_queu": 306, "loc": [306, 317, 319, 320, 328, 352], "draw": [306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353], "gaussian": [306, 328, 352], "share": [306, 328, 333, 334, 335, 336, 337, 338, 339, 341, 347, 350], "drawn": [306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 329, 331, 332, 334, 337, 340, 346, 347, 348, 349, 350, 351, 352, 353, 354, 368], "parameter": [306, 328, 350], "58997253": 306, "84288406": 306, "33836967": 306, "16394577": 306, "40882036": 306, "39295758": 306, "48927254": 306, "74921661": 306, "13436424": 306, "56920387": 306, "84743374": 306, "80226506": 306, "76377462": 306, "06310682": 306, "25506903": 306, "1179187": 306, "49543509": 306, "76096244": 306, "low": [306, 334, 337, 350, 417], "high": [306, 334, 337, 350], "inclus": [306, 334, 337], "exclus": [306, 334], "half": [306, 336, 338, 339, 341, 350, 382], "omit": [306, 334, 407], "d0": [306, 333, 335], "d1": [306, 335], "dn": [306, 333, 335], "were": [306, 335], "84401099": 306, "four": [306, 335], "88997253": 306, "54288406": 306, "63836967": 306, "46394577": 306, "70882036": 306, "69295758": 306, "78927254": 306, "04921661": 306, "continu": [306, 338], "stdev": [306, 347], "81715362": 306, "54465213": 306, "18557831": 306, "28352814": 306, "67718303": 306, "11570901": 306, "21968665": 306, "18236388": 306, "08156915": 306, "21941987": 306, "24544512": 306, "63522211": 306, "673174": 306, "54": 306, "48093112": 306, "52928804": 306, "1196081": 306, "6990877": 306, "34074171": 306, "conveni": 306, "accept": 306, "alpha": [307, 312, 313, 329, 332], "trial": 308, "probabl": [308, 316, 325], "coin": 308, "compani": [308, 325], "drill": [308, 325], "wild": [308, 325], "cat": [308, 325], "oil": [308, 325], "explor": [308, 325], "success": [308, 316, 325], "nine": 308, "fail": 308, "let": 308, "000": 308, "model": 308, "20000": 308, "answer": 308, "38885": 308, "38": 308, "fallback": [309, 311, 312, 322, 327, 343], "df": [310, 326, 348, 349], "chi": [310, 326], "89920014": 310, "00867716": 310, "13710533": 310, "62318272": 310, "dfnum": [314, 327], "dfden": [314, 327], "ten": 316, "thousand": 316, "individu": 316, "35": 316, "10000": [316, 331, 340, 350], "mu": [317, 321, 328, 351], "ngood": 318, "nbad": 318, "nsampl": 318, "nsamp": 318, "good": 318, "bad": 318, "decai": 319, "sigma": [321, 328], "seri": 322, "pval": 323, "iinfo": 323, "throw": 323, "dice": 323, "check_valid": 324, "multivari": 324, "after": 325, "100000": 325, "nonc": [326, 327], "noncentr": [326, 327], "todo": 326, "ii": 329, "lomax": 329, "randomli": 330, "lam": 331, "randomst": 334, "1923875335537315": 335, "rese": 342, "legaci": 342, "mt19937": 342, "engin": 342, "cauchi": 344, "lorentz": 344, "plot": 344, "1000000": [344, 346, 348, 349], "3x8000": 345, "8000": 345, "student": 348, "freedom": 348, "kappa": 351, "von": 351, "mise": 351, "dispers": 351, "33": 357, "3003003": 357, "newshap": 360, "infer": 360, "write": 360, "fastest": 360, "back": 360, "slowest": 360, "account": 360, "underli": 360, "never": 360, "reus": 360, "unspecifi": 360, "arrays_and_dtyp": 361, "promot": [361, 388], "introduc": 364, "rel": 364, "li": [364, 365], "been": 365, "reposit": 365, "desir": [365, 388], "37": 366, "side": 367, "sorter": 367, "condlist": 368, "choicelist": 368, "howev": 370, "742278e": 372, "3012989": 373, "548739": 373, "traceback": 377, "recent": 377, "118033988749895": 379, "entir": 381, "bound": 383, "fanci": 383, "everi": 384, "22460635e": 385, "63317787e": 385, "996272": 386, "917152": 386, "rep": 388, "replic": 388, "thu": 388, "dx": 391, "composit": 391, "trapezoid": 391, "taken": [394, 397], "ind": [394, 397], "delta": 402, "complement": 402, "phase": 402, "49778714": 402, "28318531": 402, "vandermond": 403, "form": 406, "chosen": 407, "70": 407, "algebra": [410, 421], "mathemat": [410, 421], "search": [410, 421], "statist": [410, 421], "summari": 410, "level": [410, 417], "util": 410, "counterpart": 417, "basic": [417, 421], "constructor": 417, "syntax": 417, "reflect": 417, "intrins": 417, "sometim": 417, "expos": 417, "them": 417, "reset": 417, "meaningfulli": 417, "associ": 417, "mani": 417, "fashion": 417, "typic": 417, "briefli": 417, "explain": 417, "docstr": 417, "proce": 417, "pow": 417, "short": 417, "unari": 417, "custom": 417, "cover": 421, "elementwis": [421, 425], "pack": 421, "helper": 421, "equat": 421, "ration": 421, "extrema": 421, "variou": 425}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "any"], [19, 1, 1, "", "arange"], [20, 1, 1, "", "arccos"], [21, 1, 1, "", "arccosh"], [22, 1, 1, "", "arcsin"], [23, 1, 1, "", "arcsinh"], [24, 1, 1, "", "arctan"], [25, 1, 1, "", "arctan2"], [26, 1, 1, "", "arctanh"], [27, 1, 1, "", "argmax"], [28, 1, 1, "", "argmin"], [29, 1, 1, "", "argsort"], [30, 1, 1, "", "around"], [31, 1, 1, "", "array"], [32, 1, 1, "", "array_equal"], [33, 1, 1, "", "asanyarray"], [34, 1, 1, "", "asarray"], [35, 1, 1, "", "ascontiguousarray"], [36, 1, 1, "", "asfarray"], [37, 1, 1, "", "asfortranarray"], [38, 1, 1, "", "asnumpy"], [39, 1, 1, "", "atleast_1d"], [40, 1, 1, "", "atleast_2d"], [41, 1, 1, "", "atleast_3d"], [42, 1, 1, "", "average"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_not"], [46, 1, 1, "", "bitwise_or"], [47, 1, 1, "", "bitwise_xor"], [48, 1, 1, "", "broadcast_arrays"], [49, 1, 1, "", "broadcast_to"], [50, 1, 1, "", "cbrt"], [51, 1, 1, "", "ceil"], [52, 1, 1, "", "choose"], [53, 1, 1, "", "concatenate"], [54, 1, 1, "", "conj"], [55, 1, 1, "", "conjugate"], [56, 1, 1, "", "convolve"], [57, 1, 1, "", "copy"], [58, 1, 1, "", "copysign"], [59, 1, 1, "", "copyto"], [60, 1, 1, "", "correlate"], [61, 1, 1, "", "cos"], [62, 1, 1, "", "cosh"], [63, 1, 1, "", "count_nonzero"], [64, 1, 1, "", "cov"], [65, 1, 1, "", "cross"], [66, 1, 1, "", "cumprod"], [67, 1, 1, "", "cumsum"], [68, 1, 1, "", "deg2rad"], [69, 1, 1, "", "degrees"], [70, 1, 1, "", "diag"], [71, 1, 1, "", "diag_indices"], [72, 1, 1, "", "diag_indices_from"], [73, 1, 1, "", "diagflat"], [74, 1, 1, "", "diagonal"], [75, 1, 1, "", "diff"], [76, 1, 1, "", "divide"], [77, 1, 1, "", "dot"], [79, 2, 1, "", "dtype"], [80, 1, 1, "", "ediff1d"], [81, 1, 1, "", "einsum"], [82, 1, 1, "", "einsum_path"], [83, 1, 1, "", "empty"], [84, 1, 1, "", "empty_like"], [85, 1, 1, "", "equal"], [86, 1, 1, "", "erf"], [87, 1, 1, "", "exp"], [88, 1, 1, "", "exp2"], [89, 1, 1, "", "expand_dims"], [90, 1, 1, "", "expm1"], [91, 1, 1, "", "extract"], [92, 1, 1, "", "eye"], [93, 1, 1, "", "fabs"], [10, 0, 0, "-", "fft"], [112, 1, 1, "", "fill_diagonal"], [113, 1, 1, "", "finfo"], [114, 2, 1, "", "flatiter"], [115, 1, 1, "", "flip"], [116, 1, 1, "", "fliplr"], [117, 1, 1, "", "flipud"], [118, 1, 1, "", "floor"], [119, 1, 1, "", "floor_divide"], [120, 1, 1, "", "fmax"], [121, 1, 1, "", "fmin"], [122, 1, 1, "", "fmod"], [123, 1, 1, "", "from_dlpack"], [124, 1, 1, "", "frombuffer"], [125, 1, 1, "", "fromfile"], [126, 1, 1, "", "fromfunction"], [127, 1, 1, "", "fromiter"], [128, 1, 1, "", "fromstring"], [129, 1, 1, "", "full"], [130, 1, 1, "", "full_like"], [131, 1, 1, "", "geomspace"], [132, 1, 1, "", "get_include"], [133, 1, 1, "", "gradient"], [134, 1, 1, "", "greater"], [135, 1, 1, "", "greater_equal"], [136, 1, 1, "", "histogram"], [137, 1, 1, "", "hstack"], [138, 1, 1, "", "hypot"], [139, 1, 1, "", "identity"], [140, 1, 1, "", "iinfo"], [141, 1, 1, "", "imag"], [142, 1, 1, "", "indices"], [143, 1, 1, "", "inner"], [144, 1, 1, "", "invert"], [145, 1, 1, "", "isclose"], [146, 1, 1, "", "isfinite"], [147, 1, 1, "", "isinf"], [148, 1, 1, "", "isnan"], [149, 1, 1, "", "isscalar"], [150, 1, 1, "", "issubdtype"], [151, 1, 1, "", "issubsctype"], [152, 1, 1, "", "kron"], [153, 1, 1, "", "left_shift"], [154, 1, 1, "", "less"], [155, 1, 1, "", "less_equal"], [169, 1, 1, "", "linspace"], [170, 1, 1, "", "loadtxt"], [171, 1, 1, "", "log"], [172, 1, 1, "", "log10"], [173, 1, 1, "", "log1p"], [174, 1, 1, "", "log2"], [175, 1, 1, "", "logaddexp"], [176, 1, 1, "", "logical_and"], [177, 1, 1, "", "logical_not"], [178, 1, 1, "", "logical_or"], [179, 1, 1, "", "logical_xor"], [180, 1, 1, "", "logspace"], [181, 1, 1, "", "matmul"], [182, 1, 1, "", "max"], [183, 1, 1, "", "maximum"], [184, 1, 1, "", "mean"], [185, 1, 1, "", "median"], [186, 1, 1, "", "meshgrid"], [187, 5, 1, "", "mgrid"], [188, 1, 1, "", "min"], [189, 1, 1, "", "minimum"], [190, 1, 1, "", "mod"], [191, 1, 1, "", "modf"], [192, 1, 1, "", "moveaxis"], [193, 1, 1, "", "multiply"], [194, 1, 1, "", "nancumprod"], [195, 1, 1, "", "nancumsum"], [196, 1, 1, "", "nanprod"], [197, 1, 1, "", "nansum"], [198, 1, 1, "", "nanvar"], [199, 3, 1, "", "ndarray"], [287, 1, 1, "", "negative"], [288, 1, 1, "", "nonzero"], [289, 1, 1, "", "not_equal"], [290, 5, 1, "", "ogrid"], [291, 1, 1, "", "ones"], [292, 1, 1, "", "ones_like"], [293, 1, 1, "", "outer"], [294, 1, 1, "", "partition"], [295, 1, 1, "", "place"], [296, 1, 1, "", "positive"], [297, 1, 1, "", "power"], [298, 1, 1, "", "prod"], [299, 1, 1, "", "proj"], [300, 1, 1, "", "ptp"], [301, 1, 1, "", "put"], [302, 1, 1, "", "put_along_axis"], [303, 1, 1, "", "putmask"], [304, 1, 1, "", "rad2deg"], [305, 1, 1, "", "radians"], [420, 0, 0, "-", "random"], [355, 1, 1, "", "ravel"], [356, 1, 1, "", "real"], [357, 1, 1, "", "reciprocal"], [358, 1, 1, "", "remainder"], [359, 1, 1, "", "repeat"], [360, 1, 1, "", "reshape"], [361, 1, 1, "", "result_type"], [362, 1, 1, "", "right_shift"], [363, 1, 1, "", "rint"], [364, 1, 1, "", "roll"], [365, 1, 1, "", "rollaxis"], [366, 1, 1, "", "round"], [367, 1, 1, "", "searchsorted"], [368, 1, 1, "", "select"], [369, 1, 1, "", "shape"], [370, 1, 1, "", "sign"], [371, 1, 1, "", "signbit"], [372, 1, 1, "", "sin"], [373, 1, 1, "", "sinh"], [374, 1, 1, "", "sort"], [375, 1, 1, "", "sqrt"], [376, 1, 1, "", "square"], [377, 1, 1, "", "squeeze"], [378, 1, 1, "", "stack"], [379, 1, 1, "", "std"], [380, 1, 1, "", "subtract"], [381, 1, 1, "", "sum"], [382, 1, 1, "", "swapaxes"], [383, 1, 1, "", "take"], [384, 1, 1, "", "take_along_axis"], [385, 1, 1, "", "tan"], [386, 1, 1, "", "tanh"], [387, 1, 1, "", "tensordot"], [388, 1, 1, "", "tile"], [389, 1, 1, "", "trace"], [390, 1, 1, "", "transpose"], [391, 1, 1, "", "trapz"], [392, 1, 1, "", "tri"], [393, 1, 1, "", "tril"], [394, 1, 1, "", "tril_indices"], [395, 1, 1, "", "tril_indices_from"], [396, 1, 1, "", "triu"], [397, 1, 1, "", "triu_indices"], [398, 1, 1, "", "triu_indices_from"], [399, 1, 1, "", "true_divide"], [400, 1, 1, "", "trunc"], [401, 1, 1, "", "unique"], [402, 1, 1, "", "unwrap"], [403, 1, 1, "", "vander"], [404, 1, 1, "", "var"], [405, 1, 1, "", "vdot"], [406, 1, 1, "", "vstack"], [407, 1, 1, "", "where"], [408, 1, 1, "", "zeros"], [409, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[78, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[78, 3, 1, "", "T"], [78, 4, 1, "", "__eq__"], [78, 4, 1, "", "__ge__"], [78, 4, 1, "", "__getitem__"], [78, 4, 1, "", "__gt__"], [78, 4, 1, "", "__le__"], [78, 4, 1, "", "__len__"], [78, 4, 1, "", "__lt__"], [78, 4, 1, "", "__ne__"], [78, 4, 1, "", "__setitem__"], [78, 4, 1, "", "all"], [78, 4, 1, "", "any"], [78, 4, 1, "", "argmax"], [78, 4, 1, "", "argmin"], [78, 4, 1, "", "argsort"], [78, 4, 1, "", "asnumpy"], [78, 4, 1, "", "astype"], [78, 4, 1, "", "choose"], [78, 4, 1, "", "conj"], [78, 4, 1, "", "conjugate"], [78, 4, 1, "", "copy"], [78, 4, 1, "", "cumsum"], [78, 3, 1, "", "device"], [78, 4, 1, "", "diagonal"], [78, 4, 1, "", "dot"], [78, 3, 1, "", "dtype"], [78, 4, 1, "", "fill"], [78, 3, 1, "", "flags"], [78, 3, 1, "", "flat"], [78, 4, 1, "", "flatten"], [78, 4, 1, "", "get_array"], [78, 3, 1, "", "imag"], [78, 4, 1, "", "item"], [78, 3, 1, "", "itemsize"], [78, 4, 1, "", "max"], [78, 4, 1, "", "mean"], [78, 4, 1, "", "min"], [78, 3, 1, "", "nbytes"], [78, 3, 1, "", "ndim"], [78, 4, 1, "", "nonzero"], [78, 4, 1, "", "partition"], [78, 4, 1, "", "prod"], [78, 4, 1, "", "put"], [78, 3, 1, "", "real"], [78, 4, 1, "", "reshape"], [78, 4, 1, "", "round"], [78, 3, 1, "", "shape"], [78, 3, 1, "", "size"], [78, 4, 1, "", "squeeze"], [78, 4, 1, "", "std"], [78, 3, 1, "", "strides"], [78, 4, 1, "", "sum"], [78, 4, 1, "", "swapaxes"], [78, 3, 1, "", "sycl_context"], [78, 3, 1, "", "sycl_device"], [78, 3, 1, "", "sycl_queue"], [78, 4, 1, "", "take"], [78, 4, 1, "", "to_device"], [78, 4, 1, "", "transpose"], [78, 3, 1, "", "usm_type"], [78, 4, 1, "", "var"]], "dpnp.dtype": [[79, 4, 1, "", "__eq__"], [79, 4, 1, "", "__ge__"], [79, 4, 1, "", "__getitem__"], [79, 4, 1, "", "__gt__"], [79, 4, 1, "", "__le__"], [79, 4, 1, "", "__len__"], [79, 4, 1, "", "__lt__"], [79, 4, 1, "", "__ne__"], [79, 3, 1, "", "alignment"], [79, 3, 1, "", "base"], [79, 3, 1, "", "byteorder"], [79, 3, 1, "", "char"], [79, 3, 1, "", "descr"], [79, 3, 1, "", "fields"], [79, 3, 1, "", "flags"], [79, 3, 1, "", "hasobject"], [79, 3, 1, "", "isalignedstruct"], [79, 3, 1, "", "isbuiltin"], [79, 3, 1, "", "isnative"], [79, 3, 1, "", "itemsize"], [79, 3, 1, "", "kind"], [79, 3, 1, "", "metadata"], [79, 3, 1, "", "name"], [79, 3, 1, "", "names"], [79, 3, 1, "", "ndim"], [79, 4, 1, "", "newbyteorder"], [79, 3, 1, "", "num"], [79, 3, 1, "", "shape"], [79, 3, 1, "", "str"], [79, 3, 1, "", "subdtype"], [79, 3, 1, "", "type"]], "dpnp.fft": [[94, 1, 1, "", "fft"], [95, 1, 1, "", "fft2"], [96, 1, 1, "", "fftfreq"], [97, 1, 1, "", "fftn"], [98, 1, 1, "", "fftshift"], [99, 1, 1, "", "hfft"], [100, 1, 1, "", "ifft"], [101, 1, 1, "", "ifft2"], [102, 1, 1, "", "ifftn"], [103, 1, 1, "", "ifftshift"], [104, 1, 1, "", "ihfft"], [105, 1, 1, "", "irfft"], [106, 1, 1, "", "irfft2"], [107, 1, 1, "", "irfftn"], [108, 1, 1, "", "rfft"], [109, 1, 1, "", "rfft2"], [110, 1, 1, "", "rfftfreq"], [111, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[114, 4, 1, "", "__eq__"], [114, 4, 1, "", "__ge__"], [114, 4, 1, "", "__getitem__"], [114, 4, 1, "", "__gt__"], [114, 4, 1, "", "__iter__"], [114, 4, 1, "", "__le__"], [114, 4, 1, "", "__lt__"], [114, 4, 1, "", "__ne__"], [114, 4, 1, "", "__next__"], [114, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[156, 1, 1, "", "cholesky"], [157, 1, 1, "", "cond"], [158, 1, 1, "", "det"], [159, 1, 1, "", "eig"], [160, 1, 1, "", "eigh"], [161, 1, 1, "", "eigvals"], [162, 1, 1, "", "inv"], [163, 1, 1, "", "matrix_power"], [164, 1, 1, "", "matrix_rank"], [165, 1, 1, "", "multi_dot"], [166, 1, 1, "", "norm"], [167, 1, 1, "", "qr"], [168, 1, 1, "", "svd"]], "dpnp.ndarray": [[200, 6, 1, "", "T"], [201, 4, 1, "", "__abs__"], [202, 4, 1, "", "__add__"], [203, 4, 1, "", "__and__"], [204, 4, 1, "", "__complex__"], [205, 4, 1, "", "__copy__"], [206, 4, 1, "", "__eq__"], [207, 4, 1, "", "__float__"], [208, 4, 1, "", "__floordiv__"], [209, 4, 1, "", "__ge__"], [210, 4, 1, "", "__getitem__"], [211, 4, 1, "", "__gt__"], [212, 4, 1, "", "__iadd__"], [213, 4, 1, "", "__iand__"], [214, 4, 1, "", "__ifloordiv__"], [215, 4, 1, "", "__ilshift__"], [216, 4, 1, "", "__imod__"], [217, 4, 1, "", "__imul__"], [218, 4, 1, "", "__int__"], [219, 4, 1, "", "__invert__"], [220, 4, 1, "", "__ior__"], [221, 4, 1, "", "__ipow__"], [222, 4, 1, "", "__irshift__"], [223, 4, 1, "", "__isub__"], [224, 4, 1, "", "__itruediv__"], [225, 4, 1, "", "__ixor__"], [226, 4, 1, "", "__le__"], [227, 4, 1, "", "__len__"], [228, 4, 1, "", "__lshift__"], [229, 4, 1, "", "__lt__"], [230, 4, 1, "", "__mod__"], [231, 4, 1, "", "__mul__"], [232, 4, 1, "", "__ne__"], [233, 4, 1, "", "__neg__"], [234, 4, 1, "", "__new__"], [235, 4, 1, "", "__or__"], [236, 4, 1, "", "__pos__"], [237, 4, 1, "", "__pow__"], [238, 4, 1, "", "__repr__"], [239, 4, 1, "", "__rshift__"], [240, 4, 1, "", "__setitem__"], [241, 4, 1, "", "__str__"], [242, 4, 1, "", "__sub__"], [243, 4, 1, "", "__truediv__"], [244, 4, 1, "", "__xor__"], [245, 4, 1, "", "all"], [246, 4, 1, "", "any"], [247, 4, 1, "", "argmax"], [248, 4, 1, "", "argmin"], [249, 4, 1, "", "argsort"], [250, 4, 1, "", "astype"], [251, 4, 1, "", "choose"], [252, 4, 1, "", "conj"], [253, 4, 1, "", "conjugate"], [254, 4, 1, "", "copy"], [255, 4, 1, "", "cumsum"], [256, 4, 1, "", "diagonal"], [257, 6, 1, "", "dtype"], [258, 4, 1, "", "fill"], [259, 6, 1, "", "flags"], [260, 6, 1, "", "flat"], [261, 4, 1, "", "flatten"], [262, 6, 1, "", "imag"], [263, 4, 1, "", "item"], [264, 6, 1, "", "itemsize"], [265, 4, 1, "", "max"], [266, 4, 1, "", "mean"], [267, 4, 1, "", "min"], [268, 6, 1, "", "nbytes"], [269, 6, 1, "", "ndim"], [270, 4, 1, "", "nonzero"], [271, 4, 1, "", "partition"], [272, 4, 1, "", "prod"], [273, 4, 1, "", "put"], [274, 6, 1, "", "real"], [275, 4, 1, "", "reshape"], [276, 4, 1, "", "round"], [277, 6, 1, "", "shape"], [278, 6, 1, "", "size"], [279, 4, 1, "", "squeeze"], [280, 4, 1, "", "std"], [281, 6, 1, "", "strides"], [282, 4, 1, "", "sum"], [283, 4, 1, "", "swapaxes"], [284, 4, 1, "", "take"], [285, 4, 1, "", "transpose"], [286, 4, 1, "", "var"]], "dpnp.random": [[306, 2, 1, "", "RandomState"], [307, 1, 1, "", "beta"], [308, 1, 1, "", "binomial"], [309, 1, 1, "", "bytes"], [310, 1, 1, "", "chisquare"], [311, 1, 1, "", "choice"], [312, 1, 1, "", "dirichlet"], [313, 1, 1, "", "exponential"], [314, 1, 1, "", "f"], [315, 1, 1, "", "gamma"], [316, 1, 1, "", "geometric"], [317, 1, 1, "", "gumbel"], [318, 1, 1, "", "hypergeometric"], [319, 1, 1, "", "laplace"], [320, 1, 1, "", "logistic"], [321, 1, 1, "", "lognormal"], [322, 1, 1, "", "logseries"], [323, 1, 1, "", "multinomial"], [324, 1, 1, "", "multivariate_normal"], [325, 1, 1, "", "negative_binomial"], [326, 1, 1, "", "noncentral_chisquare"], [327, 1, 1, "", "noncentral_f"], [328, 1, 1, "", "normal"], [329, 1, 1, "", "pareto"], [330, 1, 1, "", "permutation"], [331, 1, 1, "", "poisson"], [332, 1, 1, "", "power"], [333, 1, 1, "", "rand"], [334, 1, 1, "", "randint"], [335, 1, 1, "", "randn"], [336, 1, 1, "", "random"], [337, 1, 1, "", "random_integers"], [338, 1, 1, "", "random_sample"], [339, 1, 1, "", "ranf"], [340, 1, 1, "", "rayleigh"], [341, 1, 1, "", "sample"], [342, 1, 1, "", "seed"], [343, 1, 1, "", "shuffle"], [344, 1, 1, "", "standard_cauchy"], [345, 1, 1, "", "standard_exponential"], [346, 1, 1, "", "standard_gamma"], [347, 1, 1, "", "standard_normal"], [348, 1, 1, "", "standard_t"], [349, 1, 1, "", "triangular"], [350, 1, 1, "", "uniform"], [351, 1, 1, "", "vonmises"], [352, 1, 1, "", "wald"], [353, 1, 1, "", "weibull"], [354, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[306, 4, 1, "", "__eq__"], [306, 4, 1, "", "__ge__"], [306, 4, 1, "", "__gt__"], [306, 4, 1, "", "__le__"], [306, 4, 1, "", "__lt__"], [306, 4, 1, "", "__ne__"], [306, 4, 1, "", "get_state"], [306, 4, 1, "", "get_sycl_device"], [306, 4, 1, "", "get_sycl_queue"], [306, 4, 1, "", "normal"], [306, 4, 1, "", "rand"], [306, 4, 1, "", "randint"], [306, 4, 1, "", "randn"], [306, 4, 1, "", "random_sample"], [306, 4, 1, "", "standard_normal"], [306, 4, 1, "", "uniform"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"interplai": 0, "data": [0, 2, 7, 8, 9, 411, 417, 420], "parallel": [0, 2], "control": 0, "librari": 0, "exampl": [0, 4], "c": 1, "backend": 1, "api": [1, 410], "refer": [1, 410], "extens": 2, "numpi": [2, 6], "develop": 2, "inform": [2, 8], "overview": 3, "quick": 4, "start": 4, "guid": 4, "devic": 4, "driver": 4, "python": 4, "interpret": 4, "instal": 4, "packag": [4, 419], "from": [4, 7], "anaconda": 4, "build": 4, "conda": 4, "scikit": 4, "test": [4, 8, 413], "binari": 5, "oper": [5, 411, 413, 414, 415, 417, 425], "elementwis": 5, "bit": [5, 425], "pack": 5, "output": 5, "format": 5, "comparison": [6, 413, 417, 425], "tabl": 6, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 420], "cupi": 6, "summari": 6, "modul": [6, 419], "level": 6, "multi": [6, 417], "dimension": [6, 417], "arrai": [6, 7, 9, 31, 411, 413, 414, 417], "linear": [6, 412], "algebra": [6, 412], "discret": 6, "fourier": 6, "transform": 6, "random": [6, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 420], "sampl": [6, 341, 420], "creation": 7, "routin": [7, 8, 10, 411, 414, 415, 416, 421], "basic": [7, 414, 419], "other": [7, 412, 415, 417], "numer": 7, "rang": 7, "matrix": [7, 412, 417], "The": 7, "class": 7, "type": [8, 9, 413, 417], "creat": 8, "miscellan": [8, 415, 416], "avail": [9, 425], "fft": [10, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "function": [10, 413, 415, 423, 424, 425], "standard": 10, "real": [10, 274, 356], "hermitian": 10, "helper": 10, "ab": 11, "absolut": 12, "add": 13, "all": [14, 245], "allclos": 15, "amax": 16, "amin": 17, "ani": [18, 246], "arang": 19, "arcco": 20, "arccosh": 21, "arcsin": 22, "arcsinh": 23, "arctan": 24, "arctan2": 25, "arctanh": 26, "argmax": [27, 247], "argmin": [28, 248], "argsort": [29, 249], "around": 30, "array_equ": 32, "asanyarrai": 33, "asarrai": 34, "ascontiguousarrai": 35, "asfarrai": 36, "asfortranarrai": 37, "asnumpi": 38, "atleast_1d": 39, "atleast_2d": 40, "atleast_3d": 41, "averag": [42, 424], "bincount": 43, "bitwise_and": 44, "bitwise_not": 45, "bitwise_or": 46, "bitwise_xor": 47, "broadcast_arrai": 48, "broadcast_to": 49, "cbrt": 50, "ceil": 51, "choos": [52, 251], "concaten": 53, "conj": [54, 252], "conjug": [55, 253], "convolv": 56, "copi": [57, 254], "copysign": 58, "copyto": 59, "correl": [60, 424], "co": 61, "cosh": 62, "count_nonzero": 63, "cov": 64, "cross": 65, "cumprod": 66, "cumsum": [67, 255], "deg2rad": 68, "degre": 69, "diag": 70, "diag_indic": 71, "diag_indices_from": 72, "diagflat": 73, "diagon": [74, 256], "diff": 75, "divid": 76, "dot": 77, "dpnp_arrai": 78, "dtype": [79, 257], "ediff1d": 80, "einsum": 81, "einsum_path": 82, "empti": 83, "empty_lik": 84, "equal": 85, "erf": 86, "exp": 87, "exp2": 88, "expand_dim": 89, "expm1": 90, "extract": 91, "ey": 92, "fab": 93, "fft2": 95, "fftfreq": 96, "fftn": 97, "fftshift": 98, "hfft": 99, "ifft": 100, "ifft2": 101, "ifftn": 102, "ifftshift": 103, "ihfft": 104, "irfft": 105, "irfft2": 106, "irfftn": 107, "rfft": 108, "rfft2": 109, "rfftfreq": 110, "rfftn": 111, "fill_diagon": 112, "finfo": 113, "flatit": 114, "flip": 115, "fliplr": 116, "flipud": 117, "floor": 118, "floor_divid": 119, "fmax": 120, "fmin": 121, "fmod": 122, "from_dlpack": 123, "frombuff": 124, "fromfil": 125, "fromfunct": 126, "fromit": 127, "fromstr": 128, "full": 129, "full_lik": 130, "geomspac": 131, "get_includ": 132, "gradient": 133, "greater": 134, "greater_equ": 135, "histogram": [136, 424], "hstack": 137, "hypot": 138, "ident": 139, "iinfo": 140, "imag": [141, 262], "indic": 142, "inner": 143, "invert": 144, "isclos": 145, "isfinit": 146, "isinf": 147, "isnan": 148, "isscalar": 149, "issubdtyp": 150, "issubsctyp": 151, "kron": 152, "left_shift": 153, "less": 154, "less_equ": 155, "linalg": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "choleski": 156, "cond": 157, "det": 158, "eig": 159, "eigh": 160, "eigval": 161, "inv": 162, "matrix_pow": 163, "matrix_rank": 164, "multi_dot": 165, "norm": [166, 412], "qr": 167, "svd": 168, "linspac": 169, "loadtxt": 170, "log": 171, "log10": 172, "log1p": 173, "log2": 174, "logaddexp": 175, "logical_and": 176, "logical_not": 177, "logical_or": 178, "logical_xor": 179, "logspac": 180, "matmul": 181, "max": [182, 265], "maximum": 183, "mean": [184, 266], "median": 185, "meshgrid": 186, "mgrid": 187, "min": [188, 267], "minimum": 189, "mod": 190, "modf": 191, "moveaxi": 192, "multipli": 193, "nancumprod": 194, "nancumsum": 195, "nanprod": 196, "nansum": 197, "nanvar": 198, "ndarrai": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 417], "t": 200, "__abs__": 201, "__add__": 202, "__and__": 203, "__complex__": 204, "__copy__": 205, "__eq__": 206, "__float__": 207, "__floordiv__": 208, "__ge__": 209, "__getitem__": 210, "__gt__": 211, "__iadd__": 212, "__iand__": 213, "__ifloordiv__": 214, "__ilshift__": 215, "__imod__": 216, "__imul__": 217, "__int__": 218, "__invert__": 219, "__ior__": 220, "__ipow__": 221, "__irshift__": 222, "__isub__": 223, "__itruediv__": 224, "__ixor__": 225, "__le__": 226, "__len__": 227, "__lshift__": 228, "__lt__": 229, "__mod__": 230, "__mul__": 231, "__ne__": 232, "__neg__": 233, "__new__": 234, "__or__": 235, "__pos__": 236, "__pow__": 237, "__repr__": 238, "__rshift__": 239, "__setitem__": 240, "__str__": 241, "__sub__": 242, "__truediv__": 243, "__xor__": 244, "astyp": 250, "fill": 258, "flag": 259, "flat": 260, "flatten": 261, "item": [263, 417], "items": 264, "nbyte": 268, "ndim": 269, "nonzero": [270, 288], "partit": [271, 294], "prod": [272, 298], "put": [273, 301], "reshap": [275, 360], "round": [276, 366, 415], "shape": [277, 369, 414, 417], "size": 278, "squeez": [279, 377], "std": [280, 379], "stride": 281, "sum": [282, 381, 415], "swapax": [283, 382], "take": [284, 383], "transpos": [285, 390, 414], "var": [286, 404], "neg": 287, "not_equ": 289, "ogrid": 290, "ones": 291, "ones_lik": 292, "outer": 293, "place": 295, "posit": 296, "power": [297, 332], "proj": 299, "ptp": 300, "put_along_axi": 302, "putmask": 303, "rad2deg": 304, "radian": 305, "randomst": 306, "beta": 307, "binomi": 308, "byte": 309, "chisquar": 310, "choic": 311, "dirichlet": 312, "exponenti": 313, "f": 314, "gamma": 315, "geometr": 316, "gumbel": 317, "hypergeometr": 318, "laplac": 319, "logist": 320, "lognorm": 321, "logseri": 322, "multinomi": 323, "multivariate_norm": 324, "negative_binomi": 325, "noncentral_chisquar": 326, "noncentral_f": 327, "normal": 328, "pareto": 329, "permut": [330, 420], "poisson": 331, "rand": 333, "randint": 334, "randn": 335, "random_integ": 337, "random_sampl": 338, "ranf": 339, "rayleigh": 340, "seed": 342, "shuffl": 343, "standard_cauchi": 344, "standard_exponenti": 345, "standard_gamma": 346, "standard_norm": 347, "standard_t": 348, "triangular": 349, "uniform": 350, "vonmis": 351, "wald": 352, "weibul": 353, "zipf": 354, "ravel": 355, "reciproc": 357, "remaind": 358, "repeat": 359, "result_typ": 361, "right_shift": 362, "rint": 363, "roll": 364, "rollaxi": 365, "searchsort": 367, "select": [368, 417], "sign": 370, "signbit": 371, "sin": 372, "sinh": 373, "sort": [374, 422], "sqrt": 375, "squar": 376, "stack": 378, "subtract": 380, "take_along_axi": 384, "tan": 385, "tanh": 386, "tensordot": 387, "tile": [388, 414], "trace": 389, "trapz": 391, "tri": 392, "tril": 393, "tril_indic": 394, "tril_indices_from": 395, "triu": 396, "triu_indic": 397, "triu_indices_from": 398, "true_divid": 399, "trunc": 400, "uniqu": 401, "unwrap": 402, "vander": 403, "vdot": 405, "vstack": 406, "where": 407, "zero": 408, "zeros_lik": 409, "index": [411, 417], "gener": [411, 420], "like": [411, 414], "insert": 411, "iter": 411, "over": 411, "vector": 412, "product": [412, 415], "decomposit": 412, "eigenvalu": 412, "number": [412, 414, 415], "solv": 412, "equat": 412, "logic": 413, "truth": 413, "valu": 413, "infin": 413, "nan": 413, "manipul": [414, 417], "chang": 414, "dimens": 414, "kind": 414, "join": 414, "split": 414, "ad": 414, "remov": 414, "element": 414, "rearrang": 414, "mathemat": 415, "trigonometr": [415, 425], "hyperbol": 415, "differ": 415, "expon": 415, "logarithm": 415, "special": [415, 417, 423], "float": [415, 425], "point": 415, "ration": 415, "arithmet": [415, 417, 419], "handl": 415, "complex": 415, "extrema": 415, "find": 415, "util": 416, "construct": 417, "attribut": 417, "memori": 417, "layout": 417, "method": 417, "convers": 417, "calcul": 417, "multipl": 417, "pad": 418, "polynomi": 419, "polyutil": 419, "poly1d": 419, "simpl": 420, "distribut": 420, "search": 422, "count": 422, "error": 423, "statist": 424, "order": 424, "varianc": 424, "univers": 425, "ufunc": 425, "math": 425, "twiddl": 425}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Interplay with the Data Parallel Control Library": [[0, "interplay-with-the-data-parallel-control-library"]], "Example": [[0, "example"]], "C++ backend API Reference": [[1, "c-backend-api-reference"]], "Data Parallel Extension for NumPy*": [[2, "module-dpnp"]], "Development information": [[2, null]], "Overview": [[3, "id1"]], "Quick Start Guide": [[4, "id1"]], "Device Drivers": [[4, "device-drivers"]], "Python Interpreter": [[4, "python-interpreter"]], "Installation": [[4, "installation"]], "Install Package from Anaconda": [[4, "install-package-from-anaconda"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Testing": [[4, "testing"]], "Examples": [[4, "examples"]], "Binary Operations": [[5, "binary-operations"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Bit packing": [[5, "bit-packing"]], "Output formatting": [[5, "output-formatting"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, "comparison-table-numpy-dpnp-cupy"]], "Summary": [[6, "summary"]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Linear Algebra": [[6, "linear-algebra"], [412, "linear-algebra"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Random Sampling": [[6, "random-sampling"]], "Array Creation Routines": [[7, "array-creation-routines"]], "Basic creation routines": [[7, "basic-creation-routines"]], "Creation from other data": [[7, "creation-from-other-data"]], "Numerical ranges": [[7, "numerical-ranges"]], "Matrix creation": [[7, "matrix-creation"]], "The Matrix class": [[7, "the-matrix-class"]], "Data type routines": [[8, "data-type-routines"]], "Creating data types": [[8, "creating-data-types"]], "Data type information": [[8, "data-type-information"]], "Data type testing": [[8, "data-type-testing"]], "Miscellaneous": [[8, "miscellaneous"], [415, "miscellaneous"]], "Available array data types": [[9, "available-array-data-types"]], "FFT Functions": [[10, "fft-functions"]], "Standard FFTs": [[10, "standard-ffts"]], "Real FFTs": [[10, "real-ffts"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Helper routines": [[10, "helper-routines"]], "dpnp.abs": [[11, "dpnp-abs"]], "dpnp.absolute": [[12, "dpnp-absolute"]], "dpnp.add": [[13, "dpnp-add"]], "dpnp.all": [[14, "dpnp-all"]], "dpnp.allclose": [[15, "dpnp-allclose"]], "dpnp.amax": [[16, "dpnp-amax"]], "dpnp.amin": [[17, "dpnp-amin"]], "dpnp.any": [[18, "dpnp-any"]], "dpnp.arange": [[19, "dpnp-arange"]], "dpnp.arccos": [[20, "dpnp-arccos"]], "dpnp.arccosh": [[21, "dpnp-arccosh"]], "dpnp.arcsin": [[22, "dpnp-arcsin"]], "dpnp.arcsinh": [[23, "dpnp-arcsinh"]], "dpnp.arctan": [[24, "dpnp-arctan"]], "dpnp.arctan2": [[25, "dpnp-arctan2"]], "dpnp.arctanh": [[26, "dpnp-arctanh"]], "dpnp.argmax": [[27, "dpnp-argmax"]], "dpnp.argmin": [[28, "dpnp-argmin"]], "dpnp.argsort": [[29, "dpnp-argsort"]], "dpnp.around": [[30, "dpnp-around"]], "dpnp.array": [[31, "dpnp-array"]], "dpnp.array_equal": [[32, "dpnp-array-equal"]], "dpnp.asanyarray": [[33, "dpnp-asanyarray"]], "dpnp.asarray": [[34, "dpnp-asarray"]], "dpnp.ascontiguousarray": [[35, "dpnp-ascontiguousarray"]], "dpnp.asfarray": [[36, "dpnp-asfarray"]], "dpnp.asfortranarray": [[37, "dpnp-asfortranarray"]], "dpnp.asnumpy": [[38, "dpnp-asnumpy"]], "dpnp.atleast_1d": [[39, "dpnp-atleast-1d"]], "dpnp.atleast_2d": [[40, "dpnp-atleast-2d"]], "dpnp.atleast_3d": [[41, "dpnp-atleast-3d"]], "dpnp.average": [[42, "dpnp-average"]], "dpnp.bincount": [[43, "dpnp-bincount"]], "dpnp.bitwise_and": [[44, "dpnp-bitwise-and"]], "dpnp.bitwise_not": [[45, "dpnp-bitwise-not"]], "dpnp.bitwise_or": [[46, "dpnp-bitwise-or"]], "dpnp.bitwise_xor": [[47, "dpnp-bitwise-xor"]], "dpnp.broadcast_arrays": [[48, "dpnp-broadcast-arrays"]], "dpnp.broadcast_to": [[49, "dpnp-broadcast-to"]], "dpnp.cbrt": [[50, "dpnp-cbrt"]], "dpnp.ceil": [[51, "dpnp-ceil"]], "dpnp.choose": [[52, "dpnp-choose"]], "dpnp.concatenate": [[53, "dpnp-concatenate"]], "dpnp.conj": [[54, "dpnp-conj"]], "dpnp.conjugate": [[55, "dpnp-conjugate"]], "dpnp.convolve": [[56, "dpnp-convolve"]], "dpnp.copy": [[57, "dpnp-copy"]], "dpnp.copysign": [[58, "dpnp-copysign"]], "dpnp.copyto": [[59, "dpnp-copyto"]], "dpnp.correlate": [[60, "dpnp-correlate"]], "dpnp.cos": [[61, "dpnp-cos"]], "dpnp.cosh": [[62, "dpnp-cosh"]], "dpnp.count_nonzero": [[63, "dpnp-count-nonzero"]], "dpnp.cov": [[64, "dpnp-cov"]], "dpnp.cross": [[65, "dpnp-cross"]], "dpnp.cumprod": [[66, "dpnp-cumprod"]], "dpnp.cumsum": [[67, "dpnp-cumsum"]], "dpnp.deg2rad": [[68, "dpnp-deg2rad"]], "dpnp.degrees": [[69, "dpnp-degrees"]], "dpnp.diag": [[70, "dpnp-diag"]], "dpnp.diag_indices": [[71, "dpnp-diag-indices"]], "dpnp.diag_indices_from": [[72, "dpnp-diag-indices-from"]], "dpnp.diagflat": [[73, "dpnp-diagflat"]], "dpnp.diagonal": [[74, "dpnp-diagonal"]], "dpnp.diff": [[75, "dpnp-diff"]], "dpnp.divide": [[76, "dpnp-divide"]], "dpnp.dot": [[77, "dpnp-dot"]], "dpnp.dpnp_array.dpnp_array": [[78, "dpnp-dpnp-array-dpnp-array"]], "dpnp.dtype": [[79, "dpnp-dtype"]], "dpnp.ediff1d": [[80, "dpnp-ediff1d"]], "dpnp.einsum": [[81, "dpnp-einsum"]], "dpnp.einsum_path": [[82, "dpnp-einsum-path"]], "dpnp.empty": [[83, "dpnp-empty"]], "dpnp.empty_like": [[84, "dpnp-empty-like"]], "dpnp.equal": [[85, "dpnp-equal"]], "dpnp.erf": [[86, "dpnp-erf"]], "dpnp.exp": [[87, "dpnp-exp"]], "dpnp.exp2": [[88, "dpnp-exp2"]], "dpnp.expand_dims": [[89, "dpnp-expand-dims"]], "dpnp.expm1": [[90, "dpnp-expm1"]], "dpnp.extract": [[91, "dpnp-extract"]], "dpnp.eye": [[92, "dpnp-eye"]], "dpnp.fabs": [[93, "dpnp-fabs"]], "dpnp.fft.fft": [[94, "dpnp-fft-fft"]], "dpnp.fft.fft2": [[95, "dpnp-fft-fft2"]], "dpnp.fft.fftfreq": [[96, "dpnp-fft-fftfreq"]], "dpnp.fft.fftn": [[97, "dpnp-fft-fftn"]], "dpnp.fft.fftshift": [[98, "dpnp-fft-fftshift"]], "dpnp.fft.hfft": [[99, "dpnp-fft-hfft"]], "dpnp.fft.ifft": [[100, "dpnp-fft-ifft"]], "dpnp.fft.ifft2": [[101, "dpnp-fft-ifft2"]], "dpnp.fft.ifftn": [[102, "dpnp-fft-ifftn"]], "dpnp.fft.ifftshift": [[103, "dpnp-fft-ifftshift"]], "dpnp.fft.ihfft": [[104, "dpnp-fft-ihfft"]], "dpnp.fft.irfft": [[105, "dpnp-fft-irfft"]], "dpnp.fft.irfft2": [[106, "dpnp-fft-irfft2"]], "dpnp.fft.irfftn": [[107, "dpnp-fft-irfftn"]], "dpnp.fft.rfft": [[108, "dpnp-fft-rfft"]], "dpnp.fft.rfft2": [[109, "dpnp-fft-rfft2"]], "dpnp.fft.rfftfreq": [[110, "dpnp-fft-rfftfreq"]], "dpnp.fft.rfftn": [[111, "dpnp-fft-rfftn"]], "dpnp.fill_diagonal": [[112, "dpnp-fill-diagonal"]], "dpnp.finfo": [[113, "dpnp-finfo"]], "dpnp.flatiter": [[114, "dpnp-flatiter"]], "dpnp.flip": [[115, "dpnp-flip"]], "dpnp.fliplr": [[116, "dpnp-fliplr"]], "dpnp.flipud": [[117, "dpnp-flipud"]], "dpnp.floor": [[118, "dpnp-floor"]], "dpnp.floor_divide": [[119, "dpnp-floor-divide"]], "dpnp.fmax": [[120, "dpnp-fmax"]], "dpnp.fmin": [[121, "dpnp-fmin"]], "dpnp.fmod": [[122, "dpnp-fmod"]], "dpnp.from_dlpack": [[123, "dpnp-from-dlpack"]], "dpnp.frombuffer": [[124, "dpnp-frombuffer"]], "dpnp.fromfile": [[125, "dpnp-fromfile"]], "dpnp.fromfunction": [[126, "dpnp-fromfunction"]], "dpnp.fromiter": [[127, "dpnp-fromiter"]], "dpnp.fromstring": [[128, "dpnp-fromstring"]], "dpnp.full": [[129, "dpnp-full"]], "dpnp.full_like": [[130, "dpnp-full-like"]], "dpnp.geomspace": [[131, "dpnp-geomspace"]], "dpnp.get_include": [[132, "dpnp-get-include"]], "dpnp.gradient": [[133, "dpnp-gradient"]], "dpnp.greater": [[134, "dpnp-greater"]], "dpnp.greater_equal": [[135, "dpnp-greater-equal"]], "dpnp.histogram": [[136, "dpnp-histogram"]], "dpnp.hstack": [[137, "dpnp-hstack"]], "dpnp.hypot": [[138, "dpnp-hypot"]], "dpnp.identity": [[139, "dpnp-identity"]], "dpnp.iinfo": [[140, "dpnp-iinfo"]], "dpnp.imag": [[141, "dpnp-imag"]], "dpnp.indices": [[142, "dpnp-indices"]], "dpnp.inner": [[143, "dpnp-inner"]], "dpnp.invert": [[144, "dpnp-invert"]], "dpnp.isclose": [[145, "dpnp-isclose"]], "dpnp.isfinite": [[146, "dpnp-isfinite"]], "dpnp.isinf": [[147, "dpnp-isinf"]], "dpnp.isnan": [[148, "dpnp-isnan"]], "dpnp.isscalar": [[149, "dpnp-isscalar"]], "dpnp.issubdtype": [[150, "dpnp-issubdtype"]], "dpnp.issubsctype": [[151, "dpnp-issubsctype"]], "dpnp.kron": [[152, "dpnp-kron"]], "dpnp.left_shift": [[153, "dpnp-left-shift"]], "dpnp.less": [[154, "dpnp-less"]], "dpnp.less_equal": [[155, "dpnp-less-equal"]], "dpnp.linalg.cholesky": [[156, "dpnp-linalg-cholesky"]], "dpnp.linalg.cond": [[157, "dpnp-linalg-cond"]], "dpnp.linalg.det": [[158, "dpnp-linalg-det"]], "dpnp.linalg.eig": [[159, "dpnp-linalg-eig"]], "dpnp.linalg.eigh": [[160, "dpnp-linalg-eigh"]], "dpnp.linalg.eigvals": [[161, "dpnp-linalg-eigvals"]], "dpnp.linalg.inv": [[162, "dpnp-linalg-inv"]], "dpnp.linalg.matrix_power": [[163, "dpnp-linalg-matrix-power"]], "dpnp.linalg.matrix_rank": [[164, "dpnp-linalg-matrix-rank"]], "dpnp.linalg.multi_dot": [[165, "dpnp-linalg-multi-dot"]], "dpnp.linalg.norm": [[166, "dpnp-linalg-norm"]], "dpnp.linalg.qr": [[167, "dpnp-linalg-qr"]], "dpnp.linalg.svd": [[168, "dpnp-linalg-svd"]], "dpnp.linspace": [[169, "dpnp-linspace"]], "dpnp.loadtxt": [[170, "dpnp-loadtxt"]], "dpnp.log": [[171, "dpnp-log"]], "dpnp.log10": [[172, "dpnp-log10"]], "dpnp.log1p": [[173, "dpnp-log1p"]], "dpnp.log2": [[174, "dpnp-log2"]], "dpnp.logaddexp": [[175, "dpnp-logaddexp"]], "dpnp.logical_and": [[176, "dpnp-logical-and"]], "dpnp.logical_not": [[177, "dpnp-logical-not"]], "dpnp.logical_or": [[178, "dpnp-logical-or"]], "dpnp.logical_xor": [[179, "dpnp-logical-xor"]], "dpnp.logspace": [[180, "dpnp-logspace"]], "dpnp.matmul": [[181, "dpnp-matmul"]], "dpnp.max": [[182, "dpnp-max"]], "dpnp.maximum": [[183, "dpnp-maximum"]], "dpnp.mean": [[184, "dpnp-mean"]], "dpnp.median": [[185, "dpnp-median"]], "dpnp.meshgrid": [[186, "dpnp-meshgrid"]], "dpnp.mgrid": [[187, "dpnp-mgrid"]], "dpnp.min": [[188, "dpnp-min"]], "dpnp.minimum": [[189, "dpnp-minimum"]], "dpnp.mod": [[190, "dpnp-mod"]], "dpnp.modf": [[191, "dpnp-modf"]], "dpnp.moveaxis": [[192, "dpnp-moveaxis"]], "dpnp.multiply": [[193, "dpnp-multiply"]], "dpnp.nancumprod": [[194, "dpnp-nancumprod"]], "dpnp.nancumsum": [[195, "dpnp-nancumsum"]], "dpnp.nanprod": [[196, "dpnp-nanprod"]], "dpnp.nansum": [[197, "dpnp-nansum"]], "dpnp.nanvar": [[198, "dpnp-nanvar"]], "dpnp.ndarray": [[199, "dpnp-ndarray"]], "dpnp.ndarray.T": [[200, "dpnp-ndarray-t"]], "dpnp.ndarray.__abs__": [[201, "dpnp-ndarray-abs"]], "dpnp.ndarray.__add__": [[202, "dpnp-ndarray-add"]], "dpnp.ndarray.__and__": [[203, "dpnp-ndarray-and"]], "dpnp.ndarray.__complex__": [[204, "dpnp-ndarray-complex"]], "dpnp.ndarray.__copy__": [[205, "dpnp-ndarray-copy"]], "dpnp.ndarray.__eq__": [[206, "dpnp-ndarray-eq"]], "dpnp.ndarray.__float__": [[207, "dpnp-ndarray-float"]], "dpnp.ndarray.__floordiv__": [[208, "dpnp-ndarray-floordiv"]], "dpnp.ndarray.__ge__": [[209, "dpnp-ndarray-ge"]], "dpnp.ndarray.__getitem__": [[210, "dpnp-ndarray-getitem"]], "dpnp.ndarray.__gt__": [[211, "dpnp-ndarray-gt"]], "dpnp.ndarray.__iadd__": [[212, "dpnp-ndarray-iadd"]], "dpnp.ndarray.__iand__": [[213, "dpnp-ndarray-iand"]], "dpnp.ndarray.__ifloordiv__": [[214, "dpnp-ndarray-ifloordiv"]], "dpnp.ndarray.__ilshift__": [[215, "dpnp-ndarray-ilshift"]], "dpnp.ndarray.__imod__": [[216, "dpnp-ndarray-imod"]], "dpnp.ndarray.__imul__": [[217, "dpnp-ndarray-imul"]], "dpnp.ndarray.__int__": [[218, "dpnp-ndarray-int"]], "dpnp.ndarray.__invert__": [[219, "dpnp-ndarray-invert"]], "dpnp.ndarray.__ior__": [[220, "dpnp-ndarray-ior"]], "dpnp.ndarray.__ipow__": [[221, "dpnp-ndarray-ipow"]], "dpnp.ndarray.__irshift__": [[222, "dpnp-ndarray-irshift"]], "dpnp.ndarray.__isub__": [[223, "dpnp-ndarray-isub"]], "dpnp.ndarray.__itruediv__": [[224, "dpnp-ndarray-itruediv"]], "dpnp.ndarray.__ixor__": [[225, "dpnp-ndarray-ixor"]], "dpnp.ndarray.__le__": [[226, "dpnp-ndarray-le"]], "dpnp.ndarray.__len__": [[227, "dpnp-ndarray-len"]], "dpnp.ndarray.__lshift__": [[228, "dpnp-ndarray-lshift"]], "dpnp.ndarray.__lt__": [[229, "dpnp-ndarray-lt"]], "dpnp.ndarray.__mod__": [[230, "dpnp-ndarray-mod"]], "dpnp.ndarray.__mul__": [[231, "dpnp-ndarray-mul"]], "dpnp.ndarray.__ne__": [[232, "dpnp-ndarray-ne"]], "dpnp.ndarray.__neg__": [[233, "dpnp-ndarray-neg"]], "dpnp.ndarray.__new__": [[234, "dpnp-ndarray-new"]], "dpnp.ndarray.__or__": [[235, "dpnp-ndarray-or"]], "dpnp.ndarray.__pos__": [[236, "dpnp-ndarray-pos"]], "dpnp.ndarray.__pow__": [[237, "dpnp-ndarray-pow"]], "dpnp.ndarray.__repr__": [[238, "dpnp-ndarray-repr"]], "dpnp.ndarray.__rshift__": [[239, "dpnp-ndarray-rshift"]], "dpnp.ndarray.__setitem__": [[240, "dpnp-ndarray-setitem"]], "dpnp.ndarray.__str__": [[241, "dpnp-ndarray-str"]], "dpnp.ndarray.__sub__": [[242, "dpnp-ndarray-sub"]], "dpnp.ndarray.__truediv__": [[243, "dpnp-ndarray-truediv"]], "dpnp.ndarray.__xor__": [[244, "dpnp-ndarray-xor"]], "dpnp.ndarray.all": [[245, "dpnp-ndarray-all"]], "dpnp.ndarray.any": [[246, "dpnp-ndarray-any"]], "dpnp.ndarray.argmax": [[247, "dpnp-ndarray-argmax"]], "dpnp.ndarray.argmin": [[248, "dpnp-ndarray-argmin"]], "dpnp.ndarray.argsort": [[249, "dpnp-ndarray-argsort"]], "dpnp.ndarray.astype": [[250, "dpnp-ndarray-astype"]], "dpnp.ndarray.choose": [[251, "dpnp-ndarray-choose"]], "dpnp.ndarray.conj": [[252, "dpnp-ndarray-conj"]], "dpnp.ndarray.conjugate": [[253, "dpnp-ndarray-conjugate"]], "dpnp.ndarray.copy": [[254, "dpnp-ndarray-copy"]], "dpnp.ndarray.cumsum": [[255, "dpnp-ndarray-cumsum"]], "dpnp.ndarray.diagonal": [[256, "dpnp-ndarray-diagonal"]], "dpnp.ndarray.dtype": [[257, "dpnp-ndarray-dtype"]], "dpnp.ndarray.fill": [[258, "dpnp-ndarray-fill"]], "dpnp.ndarray.flags": [[259, "dpnp-ndarray-flags"]], "dpnp.ndarray.flat": [[260, "dpnp-ndarray-flat"]], "dpnp.ndarray.flatten": [[261, "dpnp-ndarray-flatten"]], "dpnp.ndarray.imag": [[262, "dpnp-ndarray-imag"]], "dpnp.ndarray.item": [[263, "dpnp-ndarray-item"]], "dpnp.ndarray.itemsize": [[264, "dpnp-ndarray-itemsize"]], "dpnp.ndarray.max": [[265, "dpnp-ndarray-max"]], "dpnp.ndarray.mean": [[266, "dpnp-ndarray-mean"]], "dpnp.ndarray.min": [[267, "dpnp-ndarray-min"]], "dpnp.ndarray.nbytes": [[268, "dpnp-ndarray-nbytes"]], "dpnp.ndarray.ndim": [[269, "dpnp-ndarray-ndim"]], "dpnp.ndarray.nonzero": [[270, "dpnp-ndarray-nonzero"]], "dpnp.ndarray.partition": [[271, "dpnp-ndarray-partition"]], "dpnp.ndarray.prod": [[272, "dpnp-ndarray-prod"]], "dpnp.ndarray.put": [[273, "dpnp-ndarray-put"]], "dpnp.ndarray.real": [[274, "dpnp-ndarray-real"]], "dpnp.ndarray.reshape": [[275, "dpnp-ndarray-reshape"]], "dpnp.ndarray.round": [[276, "dpnp-ndarray-round"]], "dpnp.ndarray.shape": [[277, "dpnp-ndarray-shape"]], "dpnp.ndarray.size": [[278, "dpnp-ndarray-size"]], "dpnp.ndarray.squeeze": [[279, "dpnp-ndarray-squeeze"]], "dpnp.ndarray.std": [[280, "dpnp-ndarray-std"]], "dpnp.ndarray.strides": [[281, "dpnp-ndarray-strides"]], "dpnp.ndarray.sum": [[282, "dpnp-ndarray-sum"]], "dpnp.ndarray.swapaxes": [[283, "dpnp-ndarray-swapaxes"]], "dpnp.ndarray.take": [[284, "dpnp-ndarray-take"]], "dpnp.ndarray.transpose": [[285, "dpnp-ndarray-transpose"]], "dpnp.ndarray.var": [[286, "dpnp-ndarray-var"]], "dpnp.negative": [[287, "dpnp-negative"]], "dpnp.nonzero": [[288, "dpnp-nonzero"]], "dpnp.not_equal": [[289, "dpnp-not-equal"]], "dpnp.ogrid": [[290, "dpnp-ogrid"]], "dpnp.ones": [[291, "dpnp-ones"]], "dpnp.ones_like": [[292, "dpnp-ones-like"]], "dpnp.outer": [[293, "dpnp-outer"]], "dpnp.partition": [[294, "dpnp-partition"]], "dpnp.place": [[295, "dpnp-place"]], "dpnp.positive": [[296, "dpnp-positive"]], "dpnp.power": [[297, "dpnp-power"]], "dpnp.prod": [[298, "dpnp-prod"]], "dpnp.proj": [[299, "dpnp-proj"]], "dpnp.ptp": [[300, "dpnp-ptp"]], "dpnp.put": [[301, "dpnp-put"]], "dpnp.put_along_axis": [[302, "dpnp-put-along-axis"]], "dpnp.putmask": [[303, "dpnp-putmask"]], "dpnp.rad2deg": [[304, "dpnp-rad2deg"]], "dpnp.radians": [[305, "dpnp-radians"]], "dpnp.random.RandomState": [[306, "dpnp-random-randomstate"]], "dpnp.random.beta": [[307, "dpnp-random-beta"]], "dpnp.random.binomial": [[308, "dpnp-random-binomial"]], "dpnp.random.bytes": [[309, "dpnp-random-bytes"]], "dpnp.random.chisquare": [[310, "dpnp-random-chisquare"]], "dpnp.random.choice": [[311, "dpnp-random-choice"]], "dpnp.random.dirichlet": [[312, "dpnp-random-dirichlet"]], "dpnp.random.exponential": [[313, "dpnp-random-exponential"]], "dpnp.random.f": [[314, "dpnp-random-f"]], "dpnp.random.gamma": [[315, "dpnp-random-gamma"]], "dpnp.random.geometric": [[316, "dpnp-random-geometric"]], "dpnp.random.gumbel": [[317, "dpnp-random-gumbel"]], "dpnp.random.hypergeometric": [[318, "dpnp-random-hypergeometric"]], "dpnp.random.laplace": [[319, "dpnp-random-laplace"]], "dpnp.random.logistic": [[320, "dpnp-random-logistic"]], "dpnp.random.lognormal": [[321, "dpnp-random-lognormal"]], "dpnp.random.logseries": [[322, "dpnp-random-logseries"]], "dpnp.random.multinomial": [[323, "dpnp-random-multinomial"]], "dpnp.random.multivariate_normal": [[324, "dpnp-random-multivariate-normal"]], "dpnp.random.negative_binomial": [[325, "dpnp-random-negative-binomial"]], "dpnp.random.noncentral_chisquare": [[326, "dpnp-random-noncentral-chisquare"]], "dpnp.random.noncentral_f": [[327, "dpnp-random-noncentral-f"]], "dpnp.random.normal": [[328, "dpnp-random-normal"]], "dpnp.random.pareto": [[329, "dpnp-random-pareto"]], "dpnp.random.permutation": [[330, "dpnp-random-permutation"]], "dpnp.random.poisson": [[331, "dpnp-random-poisson"]], "dpnp.random.power": [[332, "dpnp-random-power"]], "dpnp.random.rand": [[333, "dpnp-random-rand"]], "dpnp.random.randint": [[334, "dpnp-random-randint"]], "dpnp.random.randn": [[335, "dpnp-random-randn"]], "dpnp.random.random": [[336, "dpnp-random-random"]], "dpnp.random.random_integers": [[337, "dpnp-random-random-integers"]], "dpnp.random.random_sample": [[338, "dpnp-random-random-sample"]], "dpnp.random.ranf": [[339, "dpnp-random-ranf"]], "dpnp.random.rayleigh": [[340, "dpnp-random-rayleigh"]], "dpnp.random.sample": [[341, "dpnp-random-sample"]], "dpnp.random.seed": [[342, "dpnp-random-seed"]], "dpnp.random.shuffle": [[343, "dpnp-random-shuffle"]], "dpnp.random.standard_cauchy": [[344, "dpnp-random-standard-cauchy"]], "dpnp.random.standard_exponential": [[345, "dpnp-random-standard-exponential"]], "dpnp.random.standard_gamma": [[346, "dpnp-random-standard-gamma"]], "dpnp.random.standard_normal": [[347, "dpnp-random-standard-normal"]], "dpnp.random.standard_t": [[348, "dpnp-random-standard-t"]], "dpnp.random.triangular": [[349, "dpnp-random-triangular"]], "dpnp.random.uniform": [[350, "dpnp-random-uniform"]], "dpnp.random.vonmises": [[351, "dpnp-random-vonmises"]], "dpnp.random.wald": [[352, "dpnp-random-wald"]], "dpnp.random.weibull": [[353, "dpnp-random-weibull"]], "dpnp.random.zipf": [[354, "dpnp-random-zipf"]], "dpnp.ravel": [[355, "dpnp-ravel"]], "dpnp.real": [[356, "dpnp-real"]], "dpnp.reciprocal": [[357, "dpnp-reciprocal"]], "dpnp.remainder": [[358, "dpnp-remainder"]], "dpnp.repeat": [[359, "dpnp-repeat"]], "dpnp.reshape": [[360, "dpnp-reshape"]], "dpnp.result_type": [[361, "dpnp-result-type"]], "dpnp.right_shift": [[362, "dpnp-right-shift"]], "dpnp.rint": [[363, "dpnp-rint"]], "dpnp.roll": [[364, "dpnp-roll"]], "dpnp.rollaxis": [[365, "dpnp-rollaxis"]], "dpnp.round": [[366, "dpnp-round"]], "dpnp.searchsorted": [[367, "dpnp-searchsorted"]], "dpnp.select": [[368, "dpnp-select"]], "dpnp.shape": [[369, "dpnp-shape"]], "dpnp.sign": [[370, "dpnp-sign"]], "dpnp.signbit": [[371, "dpnp-signbit"]], "dpnp.sin": [[372, "dpnp-sin"]], "dpnp.sinh": [[373, "dpnp-sinh"]], "dpnp.sort": [[374, "dpnp-sort"]], "dpnp.sqrt": [[375, "dpnp-sqrt"]], "dpnp.square": [[376, "dpnp-square"]], "dpnp.squeeze": [[377, "dpnp-squeeze"]], "dpnp.stack": [[378, "dpnp-stack"]], "dpnp.std": [[379, "dpnp-std"]], "dpnp.subtract": [[380, "dpnp-subtract"]], "dpnp.sum": [[381, "dpnp-sum"]], "dpnp.swapaxes": [[382, "dpnp-swapaxes"]], "dpnp.take": [[383, "dpnp-take"]], "dpnp.take_along_axis": [[384, "dpnp-take-along-axis"]], "dpnp.tan": [[385, "dpnp-tan"]], "dpnp.tanh": [[386, "dpnp-tanh"]], "dpnp.tensordot": [[387, "dpnp-tensordot"]], "dpnp.tile": [[388, "dpnp-tile"]], "dpnp.trace": [[389, "dpnp-trace"]], "dpnp.transpose": [[390, "dpnp-transpose"]], "dpnp.trapz": [[391, "dpnp-trapz"]], "dpnp.tri": [[392, "dpnp-tri"]], "dpnp.tril": [[393, "dpnp-tril"]], "dpnp.tril_indices": [[394, "dpnp-tril-indices"]], "dpnp.tril_indices_from": [[395, "dpnp-tril-indices-from"]], "dpnp.triu": [[396, "dpnp-triu"]], "dpnp.triu_indices": [[397, "dpnp-triu-indices"]], "dpnp.triu_indices_from": [[398, "dpnp-triu-indices-from"]], "dpnp.true_divide": [[399, "dpnp-true-divide"]], "dpnp.trunc": [[400, "dpnp-trunc"]], "dpnp.unique": [[401, "dpnp-unique"]], "dpnp.unwrap": [[402, "dpnp-unwrap"]], "dpnp.vander": [[403, "dpnp-vander"]], "dpnp.var": [[404, "dpnp-var"]], "dpnp.vdot": [[405, "dpnp-vdot"]], "dpnp.vstack": [[406, "dpnp-vstack"]], "dpnp.where": [[407, "dpnp-where"]], "dpnp.zeros": [[408, "dpnp-zeros"]], "dpnp.zeros_like": [[409, "dpnp-zeros-like"]], "API Reference": [[410, "api-reference"]], "Array Indexing Routines": [[411, "array-indexing-routines"]], "Generating index arrays": [[411, "generating-index-arrays"]], "Indexing-like operations": [[411, "indexing-like-operations"]], "Inserting data into arrays": [[411, "inserting-data-into-arrays"]], "Iterating over arrays": [[411, "iterating-over-arrays"]], "Matrix and vector products": [[412, "matrix-and-vector-products"]], "Decompositions": [[412, "decompositions"]], "Matrix eigenvalues": [[412, "matrix-eigenvalues"]], "Norms and other numbers": [[412, "norms-and-other-numbers"]], "Solving linear equations": [[412, "solving-linear-equations"]], "Logic Functions": [[413, "logic-functions"]], "Truth value testing": [[413, "truth-value-testing"]], "Infinities and NaNs": [[413, "infinities-and-nans"]], "Array type testing": [[413, "array-type-testing"]], "Logic operations": [[413, "logic-operations"]], "Comparison": [[413, "comparison"]], "Array Manipulation Routines": [[414, "array-manipulation-routines"]], "Basic operations": [[414, "basic-operations"]], "Changing array shape": [[414, "changing-array-shape"]], "Transpose-like operations": [[414, "transpose-like-operations"]], "Changing number of dimensions": [[414, "changing-number-of-dimensions"]], "Changing kind of array": [[414, "changing-kind-of-array"]], "Joining arrays": [[414, "joining-arrays"]], "Splitting arrays": [[414, "splitting-arrays"]], "Tiling arrays": [[414, "tiling-arrays"]], "Adding and removing elements": [[414, "adding-and-removing-elements"]], "Rearranging elements": [[414, "rearranging-elements"]], "Mathematical Functions": [[415, "mathematical-functions"]], "Trigonometric functions": [[415, "trigonometric-functions"], [425, "trigonometric-functions"]], "Hyperbolic functions": [[415, "hyperbolic-functions"]], "Rounding": [[415, "rounding"]], "Sums, products, differences": [[415, "sums-products-differences"]], "Exponents and logarithms": [[415, "exponents-and-logarithms"]], "Other special functions": [[415, "other-special-functions"]], "Floating point routines": [[415, "floating-point-routines"]], "Rational routines": [[415, "rational-routines"]], "Arithmetic operations": [[415, "arithmetic-operations"]], "Handling complex numbers": [[415, "handling-complex-numbers"]], "Extrema Finding": [[415, "extrema-finding"]], "Miscellaneous routines": [[416, "miscellaneous-routines"]], "Utility": [[416, "utility"]], "Multi-Dimensional Array (ndarray)": [[417, "multi-dimensional-array-ndarray"]], "Constructing arrays": [[417, "constructing-arrays"]], "Indexing arrays": [[417, "indexing-arrays"]], "Array attributes": [[417, "array-attributes"]], "Memory layout": [[417, "memory-layout"]], "Data type": [[417, "data-type"]], "Other attributes": [[417, "other-attributes"]], "Array methods": [[417, "array-methods"]], "Array conversion": [[417, "array-conversion"]], "Shape manipulation": [[417, "shape-manipulation"]], "Item selection and manipulation": [[417, "item-selection-and-manipulation"]], "Calculation": [[417, "calculation"]], "Arithmetic, matrix multiplication, and comparison operations": [[417, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Special methods": [[417, "special-methods"]], "Padding": [[418, "padding"]], "Polynomials": [[419, "polynomials"]], "Polynomial Package": [[419, "polynomial-package"]], "Polynomial Module": [[419, "polynomial-module"]], "Polyutils": [[419, "polyutils"]], "Poly1d": [[419, "poly1d"]], "Basics": [[419, "basics"]], "Arithmetic": [[419, "arithmetic"]], "Random Sampling (dpnp.random)": [[420, "random-sampling-dpnp-random"]], "Simple random data": [[420, "simple-random-data"]], "Permutations": [[420, "permutations"]], "Distributions": [[420, "distributions"]], "Random generator": [[420, "random-generator"]], "Routines": [[421, "routines"]], "Sorting, Searching, and Counting": [[422, "sorting-searching-and-counting"]], "Sorting": [[422, "sorting"]], "Searching": [[422, "searching"]], "Counting": [[422, "counting"]], "Special Functions": [[423, "special-functions"]], "Error Function": [[423, "error-function"]], "Statistical Functions": [[424, "statistical-functions"]], "Order statistics": [[424, "order-statistics"]], "Averages and variances": [[424, "averages-and-variances"]], "Histograms": [[424, "histograms"]], "Correlations": [[424, "correlations"]], "Universal Functions (ufunc)": [[425, "universal-functions-ufunc"]], "Available ufuncs": [[425, "available-ufuncs"]], "Math operations": [[425, "math-operations"]], "Bit-twiddling functions": [[425, "bit-twiddling-functions"]], "Comparison functions": [[425, "comparison-functions"]], "Floating functions": [[425, "floating-functions"]]}, "indexentries": {"dpnp": [[2, "module-dpnp"], [3, "module-dpnp"]], "module": [[2, "module-dpnp"], [3, "module-dpnp"], [10, "module-dpnp.fft"], [420, "module-dpnp.random"]], "dpnp.fft": [[10, "module-dpnp.fft"]], "abs() (in module dpnp)": [[11, "dpnp.abs"]], "absolute() (in module dpnp)": [[12, "dpnp.absolute"]], "add() (in module dpnp)": [[13, "dpnp.add"]], "all() (in module dpnp)": [[14, "dpnp.all"]], "allclose() (in module dpnp)": [[15, "dpnp.allclose"]], "amax() (in module dpnp)": [[16, "dpnp.amax"]], "amin() (in module dpnp)": [[17, "dpnp.amin"]], "any() (in module dpnp)": [[18, "dpnp.any"]], "arange() (in module dpnp)": [[19, "dpnp.arange"]], "arccos() (in module dpnp)": [[20, "dpnp.arccos"]], "arccosh() (in module dpnp)": [[21, "dpnp.arccosh"]], "arcsin() (in module dpnp)": [[22, "dpnp.arcsin"]], "arcsinh() (in module dpnp)": [[23, "dpnp.arcsinh"]], "arctan() (in module dpnp)": [[24, "dpnp.arctan"]], "arctan2() (in module dpnp)": [[25, "dpnp.arctan2"]], "arctanh() (in module dpnp)": [[26, "dpnp.arctanh"]], "argmax() (in module dpnp)": [[27, "dpnp.argmax"]], "argmin() (in module dpnp)": [[28, "dpnp.argmin"]], "argsort() (in module dpnp)": [[29, "dpnp.argsort"]], "around() (in module dpnp)": [[30, "dpnp.around"]], "array() (in module dpnp)": [[31, "dpnp.array"]], "array_equal() (in module dpnp)": [[32, "dpnp.array_equal"]], "asanyarray() (in module dpnp)": [[33, "dpnp.asanyarray"]], "asarray() (in module dpnp)": [[34, "dpnp.asarray"]], "ascontiguousarray() (in module dpnp)": [[35, "dpnp.ascontiguousarray"]], "asfarray() (in module dpnp)": [[36, "dpnp.asfarray"]], "asfortranarray() (in module dpnp)": [[37, "dpnp.asfortranarray"]], "asnumpy() (in module dpnp)": [[38, "dpnp.asnumpy"]], "atleast_1d() (in module dpnp)": [[39, "dpnp.atleast_1d"]], "atleast_2d() (in module dpnp)": [[40, "dpnp.atleast_2d"]], "atleast_3d() (in module dpnp)": [[41, "dpnp.atleast_3d"]], "average() (in module dpnp)": [[42, "dpnp.average"]], "bincount() (in module dpnp)": [[43, "dpnp.bincount"]], "bitwise_and() (in module dpnp)": [[44, "dpnp.bitwise_and"]], "bitwise_not() (in module dpnp)": [[45, "dpnp.bitwise_not"]], "bitwise_or() (in module dpnp)": [[46, "dpnp.bitwise_or"]], "bitwise_xor() (in module dpnp)": [[47, "dpnp.bitwise_xor"]], "broadcast_arrays() (in module dpnp)": [[48, "dpnp.broadcast_arrays"]], "broadcast_to() (in module dpnp)": [[49, "dpnp.broadcast_to"]], "cbrt() (in module dpnp)": [[50, "dpnp.cbrt"]], "ceil() (in module dpnp)": [[51, "dpnp.ceil"]], "choose() (in module dpnp)": [[52, "dpnp.choose"]], "concatenate() (in module dpnp)": [[53, "dpnp.concatenate"]], "conj() (in module dpnp)": [[54, "dpnp.conj"]], "conjugate() (in module dpnp)": [[55, "dpnp.conjugate"]], "convolve() (in module dpnp)": [[56, "dpnp.convolve"]], "copy() (in module dpnp)": [[57, "dpnp.copy"]], "copysign() (in module dpnp)": [[58, "dpnp.copysign"]], "copyto() (in module dpnp)": [[59, "dpnp.copyto"]], "correlate() (in module dpnp)": [[60, "dpnp.correlate"]], "cos() (in module dpnp)": [[61, "dpnp.cos"]], "cosh() (in module dpnp)": [[62, "dpnp.cosh"]], "count_nonzero() (in module dpnp)": [[63, "dpnp.count_nonzero"]], "cov() (in module dpnp)": [[64, "dpnp.cov"]], "cross() (in module dpnp)": [[65, "dpnp.cross"]], "cumprod() (in module dpnp)": [[66, "dpnp.cumprod"]], "cumsum() (in module dpnp)": [[67, "dpnp.cumsum"]], "deg2rad() (in module dpnp)": [[68, "dpnp.deg2rad"]], "degrees() (in module dpnp)": [[69, "dpnp.degrees"]], "diag() (in module dpnp)": [[70, "dpnp.diag"]], "diag_indices() (in module dpnp)": [[71, "dpnp.diag_indices"]], "diag_indices_from() (in module dpnp)": [[72, "dpnp.diag_indices_from"]], "diagflat() (in module dpnp)": [[73, "dpnp.diagflat"]], "diagonal() (in module dpnp)": [[74, "dpnp.diagonal"]], "diff() (in module dpnp)": [[75, "dpnp.diff"]], "divide() (in module dpnp)": [[76, "dpnp.divide"]], "dot() (in module dpnp)": [[77, "dpnp.dot"]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.T"]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.__eq__"]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.__ge__"]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.__getitem__"]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.__gt__"]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.__le__"]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.__len__"]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.__lt__"]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.__ne__"]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.__setitem__"]], "all() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.all"]], "any() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.any"]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.argmax"]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.argmin"]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.argsort"]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.asnumpy"]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.astype"]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.choose"]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.conj"]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.conjugate"]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.copy"]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.cumsum"]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.device"]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.diagonal"]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.dot"]], "dpnp_array (class in dpnp.dpnp_array)": [[78, "dpnp.dpnp_array.dpnp_array"]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.dtype"]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.fill"]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.flags"]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.flat"]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.flatten"]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.get_array"]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.imag"]], "item() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.item"]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.itemsize"]], "max() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.max"]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.mean"]], "min() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.min"]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.nbytes"]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.ndim"]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.nonzero"]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.partition"]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.prod"]], "put() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.put"]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.real"]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.reshape"]], "round() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.round"]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.shape"]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.size"]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.squeeze"]], "std() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.std"]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.strides"]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.sum"]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.swapaxes"]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.sycl_context"]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.sycl_device"]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.sycl_queue"]], "take() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.take"]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.to_device"]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.transpose"]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[78, "dpnp.dpnp_array.dpnp_array.usm_type"]], "var() (dpnp.dpnp_array.dpnp_array method)": [[78, "dpnp.dpnp_array.dpnp_array.var"]], "__eq__() (dpnp.dtype method)": [[79, "dpnp.dtype.__eq__"]], "__ge__() (dpnp.dtype method)": [[79, "dpnp.dtype.__ge__"]], "__getitem__() (dpnp.dtype method)": [[79, "dpnp.dtype.__getitem__"]], "__gt__() (dpnp.dtype method)": [[79, "dpnp.dtype.__gt__"]], "__le__() (dpnp.dtype method)": [[79, "dpnp.dtype.__le__"]], "__len__() (dpnp.dtype method)": [[79, "dpnp.dtype.__len__"]], "__lt__() (dpnp.dtype method)": [[79, "dpnp.dtype.__lt__"]], "__ne__() (dpnp.dtype method)": [[79, "dpnp.dtype.__ne__"]], "alignment (dpnp.dtype attribute)": [[79, "dpnp.dtype.alignment"]], "base (dpnp.dtype attribute)": [[79, "dpnp.dtype.base"]], "byteorder (dpnp.dtype attribute)": [[79, "dpnp.dtype.byteorder"]], "char (dpnp.dtype attribute)": [[79, "dpnp.dtype.char"]], "descr (dpnp.dtype attribute)": [[79, "dpnp.dtype.descr"]], "dtype (class in dpnp)": [[79, "dpnp.dtype"]], "fields (dpnp.dtype attribute)": [[79, "dpnp.dtype.fields"]], "flags (dpnp.dtype attribute)": [[79, "dpnp.dtype.flags"]], "hasobject (dpnp.dtype attribute)": [[79, "dpnp.dtype.hasobject"]], "isalignedstruct (dpnp.dtype attribute)": [[79, "dpnp.dtype.isalignedstruct"]], "isbuiltin (dpnp.dtype attribute)": [[79, "dpnp.dtype.isbuiltin"]], "isnative (dpnp.dtype attribute)": [[79, "dpnp.dtype.isnative"]], "itemsize (dpnp.dtype attribute)": [[79, "dpnp.dtype.itemsize"]], "kind (dpnp.dtype attribute)": [[79, "dpnp.dtype.kind"]], "metadata (dpnp.dtype attribute)": [[79, "dpnp.dtype.metadata"]], "name (dpnp.dtype attribute)": [[79, "dpnp.dtype.name"]], "names (dpnp.dtype attribute)": [[79, "dpnp.dtype.names"]], "ndim (dpnp.dtype attribute)": [[79, "dpnp.dtype.ndim"]], "newbyteorder() (dpnp.dtype method)": [[79, "dpnp.dtype.newbyteorder"]], "num (dpnp.dtype attribute)": [[79, "dpnp.dtype.num"]], "shape (dpnp.dtype attribute)": [[79, "dpnp.dtype.shape"]], "str (dpnp.dtype attribute)": [[79, "dpnp.dtype.str"]], "subdtype (dpnp.dtype attribute)": [[79, "dpnp.dtype.subdtype"]], "type (dpnp.dtype attribute)": [[79, "dpnp.dtype.type"]], "ediff1d() (in module dpnp)": [[80, "dpnp.ediff1d"]], "einsum() (in module dpnp)": [[81, "dpnp.einsum"]], "einsum_path() (in module dpnp)": [[82, "dpnp.einsum_path"]], "empty() (in module dpnp)": [[83, "dpnp.empty"]], "empty_like() (in module dpnp)": [[84, "dpnp.empty_like"]], "equal() (in module dpnp)": [[85, "dpnp.equal"]], "erf() (in module dpnp)": [[86, "dpnp.erf"]], "exp() (in module dpnp)": [[87, "dpnp.exp"]], "exp2() (in module dpnp)": [[88, "dpnp.exp2"]], "expand_dims() (in module dpnp)": [[89, "dpnp.expand_dims"]], "expm1() (in module dpnp)": [[90, "dpnp.expm1"]], "extract() (in module dpnp)": [[91, "dpnp.extract"]], "eye() (in module dpnp)": [[92, "dpnp.eye"]], "fabs() (in module dpnp)": [[93, "dpnp.fabs"]], "fft() (in module dpnp.fft)": [[94, "dpnp.fft.fft"]], "fft2() (in module dpnp.fft)": [[95, "dpnp.fft.fft2"]], "fftfreq() (in module dpnp.fft)": [[96, "dpnp.fft.fftfreq"]], "fftn() (in module dpnp.fft)": [[97, "dpnp.fft.fftn"]], "fftshift() (in module dpnp.fft)": [[98, "dpnp.fft.fftshift"]], "hfft() (in module dpnp.fft)": [[99, "dpnp.fft.hfft"]], "ifft() (in module dpnp.fft)": [[100, "dpnp.fft.ifft"]], "ifft2() (in module dpnp.fft)": [[101, "dpnp.fft.ifft2"]], "ifftn() (in module dpnp.fft)": [[102, "dpnp.fft.ifftn"]], "ifftshift() (in module dpnp.fft)": [[103, "dpnp.fft.ifftshift"]], "ihfft() (in module dpnp.fft)": [[104, "dpnp.fft.ihfft"]], "irfft() (in module dpnp.fft)": [[105, "dpnp.fft.irfft"]], "irfft2() (in module dpnp.fft)": [[106, "dpnp.fft.irfft2"]], "irfftn() (in module dpnp.fft)": [[107, "dpnp.fft.irfftn"]], "rfft() (in module dpnp.fft)": [[108, "dpnp.fft.rfft"]], "rfft2() (in module dpnp.fft)": [[109, "dpnp.fft.rfft2"]], "rfftfreq() (in module dpnp.fft)": [[110, "dpnp.fft.rfftfreq"]], "rfftn() (in module dpnp.fft)": [[111, "dpnp.fft.rfftn"]], "fill_diagonal() (in module dpnp)": [[112, "dpnp.fill_diagonal"]], "finfo() (in module dpnp)": [[113, "dpnp.finfo"]], "__eq__() (dpnp.flatiter method)": [[114, "dpnp.flatiter.__eq__"]], "__ge__() (dpnp.flatiter method)": [[114, "dpnp.flatiter.__ge__"]], "__getitem__() (dpnp.flatiter method)": [[114, "dpnp.flatiter.__getitem__"]], "__gt__() (dpnp.flatiter method)": [[114, "dpnp.flatiter.__gt__"]], "__iter__() (dpnp.flatiter method)": [[114, "dpnp.flatiter.__iter__"]], "__le__() (dpnp.flatiter method)": [[114, "dpnp.flatiter.__le__"]], "__lt__() (dpnp.flatiter method)": [[114, "dpnp.flatiter.__lt__"]], "__ne__() (dpnp.flatiter method)": [[114, "dpnp.flatiter.__ne__"]], "__next__() (dpnp.flatiter method)": [[114, "dpnp.flatiter.__next__"]], "__setitem__() (dpnp.flatiter method)": [[114, "dpnp.flatiter.__setitem__"]], "flatiter (class in dpnp)": [[114, "dpnp.flatiter"]], "flip() (in module dpnp)": [[115, "dpnp.flip"]], "fliplr() (in module dpnp)": [[116, "dpnp.fliplr"]], "flipud() (in module dpnp)": [[117, "dpnp.flipud"]], "floor() (in module dpnp)": [[118, "dpnp.floor"]], "floor_divide() (in module dpnp)": [[119, "dpnp.floor_divide"]], "fmax() (in module dpnp)": [[120, "dpnp.fmax"]], "fmin() (in module dpnp)": [[121, "dpnp.fmin"]], "fmod() (in module dpnp)": [[122, "dpnp.fmod"]], "from_dlpack() (in module dpnp)": [[123, "dpnp.from_dlpack"]], "frombuffer() (in module dpnp)": [[124, "dpnp.frombuffer"]], "fromfile() (in module dpnp)": [[125, "dpnp.fromfile"]], "fromfunction() (in module dpnp)": [[126, "dpnp.fromfunction"]], "fromiter() (in module dpnp)": [[127, "dpnp.fromiter"]], "fromstring() (in module dpnp)": [[128, "dpnp.fromstring"]], "full() (in module dpnp)": [[129, "dpnp.full"]], "full_like() (in module dpnp)": [[130, "dpnp.full_like"]], "geomspace() (in module dpnp)": [[131, "dpnp.geomspace"]], "get_include() (in module dpnp)": [[132, "dpnp.get_include"]], "gradient() (in module dpnp)": [[133, "dpnp.gradient"]], "greater() (in module dpnp)": [[134, "dpnp.greater"]], "greater_equal() (in module dpnp)": [[135, "dpnp.greater_equal"]], "histogram() (in module dpnp)": [[136, "dpnp.histogram"]], "hstack() (in module dpnp)": [[137, "dpnp.hstack"]], "hypot() (in module dpnp)": [[138, "dpnp.hypot"]], "identity() (in module dpnp)": [[139, "dpnp.identity"]], "iinfo() (in module dpnp)": [[140, "dpnp.iinfo"]], "imag() (in module dpnp)": [[141, "dpnp.imag"]], "indices() (in module dpnp)": [[142, "dpnp.indices"]], "inner() (in module dpnp)": [[143, "dpnp.inner"]], "invert() (in module dpnp)": [[144, "dpnp.invert"]], "isclose() (in module dpnp)": [[145, "dpnp.isclose"]], "isfinite() (in module dpnp)": [[146, "dpnp.isfinite"]], "isinf() (in module dpnp)": [[147, "dpnp.isinf"]], "isnan() (in module dpnp)": [[148, "dpnp.isnan"]], "isscalar() (in module dpnp)": [[149, "dpnp.isscalar"]], "issubdtype() (in module dpnp)": [[150, "dpnp.issubdtype"]], "issubsctype() (in module dpnp)": [[151, "dpnp.issubsctype"]], "kron() (in module dpnp)": [[152, "dpnp.kron"]], "left_shift() (in module dpnp)": [[153, "dpnp.left_shift"]], "less() (in module dpnp)": [[154, "dpnp.less"]], "less_equal() (in module dpnp)": [[155, "dpnp.less_equal"]], "cholesky() (in module dpnp.linalg)": [[156, "dpnp.linalg.cholesky"]], "cond() (in module dpnp.linalg)": [[157, "dpnp.linalg.cond"]], "det() (in module dpnp.linalg)": [[158, "dpnp.linalg.det"]], "eig() (in module dpnp.linalg)": [[159, "dpnp.linalg.eig"]], "eigh() (in module dpnp.linalg)": [[160, "dpnp.linalg.eigh"]], "eigvals() (in module dpnp.linalg)": [[161, "dpnp.linalg.eigvals"]], "inv() (in module dpnp.linalg)": [[162, "dpnp.linalg.inv"]], "matrix_power() (in module dpnp.linalg)": [[163, "dpnp.linalg.matrix_power"]], "matrix_rank() (in module dpnp.linalg)": [[164, "dpnp.linalg.matrix_rank"]], "multi_dot() (in module dpnp.linalg)": [[165, "dpnp.linalg.multi_dot"]], "norm() (in module dpnp.linalg)": [[166, "dpnp.linalg.norm"]], "qr() (in module dpnp.linalg)": [[167, "dpnp.linalg.qr"]], "svd() (in module dpnp.linalg)": [[168, "dpnp.linalg.svd"]], "linspace() (in module dpnp)": [[169, "dpnp.linspace"]], "loadtxt() (in module dpnp)": [[170, "dpnp.loadtxt"]], "log() (in module dpnp)": [[171, "dpnp.log"]], "log10() (in module dpnp)": [[172, "dpnp.log10"]], "log1p() (in module dpnp)": [[173, "dpnp.log1p"]], "log2() (in module dpnp)": [[174, "dpnp.log2"]], "logaddexp() (in module dpnp)": [[175, "dpnp.logaddexp"]], "logical_and() (in module dpnp)": [[176, "dpnp.logical_and"]], "logical_not() (in module dpnp)": [[177, "dpnp.logical_not"]], "logical_or() (in module dpnp)": [[178, "dpnp.logical_or"]], "logical_xor() (in module dpnp)": [[179, "dpnp.logical_xor"]], "logspace() (in module dpnp)": [[180, "dpnp.logspace"]], "matmul() (in module dpnp)": [[181, "dpnp.matmul"]], "max() (in module dpnp)": [[182, "dpnp.max"]], "maximum() (in module dpnp)": [[183, "dpnp.maximum"]], "mean() (in module dpnp)": [[184, "dpnp.mean"]], "median() (in module dpnp)": [[185, "dpnp.median"]], "meshgrid() (in module dpnp)": [[186, "dpnp.meshgrid"]], "mgrid (in module dpnp)": [[187, "dpnp.mgrid"]], "min() (in module dpnp)": [[188, "dpnp.min"]], "minimum() (in module dpnp)": [[189, "dpnp.minimum"]], "mod() (in module dpnp)": [[190, "dpnp.mod"]], "modf() (in module dpnp)": [[191, "dpnp.modf"]], "moveaxis() (in module dpnp)": [[192, "dpnp.moveaxis"]], "multiply() (in module dpnp)": [[193, "dpnp.multiply"]], "nancumprod() (in module dpnp)": [[194, "dpnp.nancumprod"]], "nancumsum() (in module dpnp)": [[195, "dpnp.nancumsum"]], "nanprod() (in module dpnp)": [[196, "dpnp.nanprod"]], "nansum() (in module dpnp)": [[197, "dpnp.nansum"]], "nanvar() (in module dpnp)": [[198, "dpnp.nanvar"]], "ndarray (in module dpnp)": [[199, "dpnp.ndarray"]], "t (dpnp.ndarray property)": [[200, "dpnp.ndarray.T"]], "__abs__() (dpnp.ndarray method)": [[201, "dpnp.ndarray.__abs__"]], "__add__() (dpnp.ndarray method)": [[202, "dpnp.ndarray.__add__"]], "__and__() (dpnp.ndarray method)": [[203, "dpnp.ndarray.__and__"]], "__complex__() (dpnp.ndarray method)": [[204, "dpnp.ndarray.__complex__"]], "__copy__() (dpnp.ndarray method)": [[205, "dpnp.ndarray.__copy__"]], "__eq__() (dpnp.ndarray method)": [[206, "dpnp.ndarray.__eq__"]], "__float__() (dpnp.ndarray method)": [[207, "dpnp.ndarray.__float__"]], "__floordiv__() (dpnp.ndarray method)": [[208, "dpnp.ndarray.__floordiv__"]], "__ge__() (dpnp.ndarray method)": [[209, "dpnp.ndarray.__ge__"]], "__getitem__() (dpnp.ndarray method)": [[210, "dpnp.ndarray.__getitem__"]], "__gt__() (dpnp.ndarray method)": [[211, "dpnp.ndarray.__gt__"]], "__iadd__() (dpnp.ndarray method)": [[212, "dpnp.ndarray.__iadd__"]], "__iand__() (dpnp.ndarray method)": [[213, "dpnp.ndarray.__iand__"]], "__ifloordiv__() (dpnp.ndarray method)": [[214, "dpnp.ndarray.__ifloordiv__"]], "__ilshift__() (dpnp.ndarray method)": [[215, "dpnp.ndarray.__ilshift__"]], "__imod__() (dpnp.ndarray method)": [[216, "dpnp.ndarray.__imod__"]], "__imul__() (dpnp.ndarray method)": [[217, "dpnp.ndarray.__imul__"]], "__int__() (dpnp.ndarray method)": [[218, "dpnp.ndarray.__int__"]], "__invert__() (dpnp.ndarray method)": [[219, "dpnp.ndarray.__invert__"]], "__ior__() (dpnp.ndarray method)": [[220, "dpnp.ndarray.__ior__"]], "__ipow__() (dpnp.ndarray method)": [[221, "dpnp.ndarray.__ipow__"]], "__irshift__() (dpnp.ndarray method)": [[222, "dpnp.ndarray.__irshift__"]], "__isub__() (dpnp.ndarray method)": [[223, "dpnp.ndarray.__isub__"]], "__itruediv__() (dpnp.ndarray method)": [[224, "dpnp.ndarray.__itruediv__"]], "__ixor__() (dpnp.ndarray method)": [[225, "dpnp.ndarray.__ixor__"]], "__le__() (dpnp.ndarray method)": [[226, "dpnp.ndarray.__le__"]], "__len__() (dpnp.ndarray method)": [[227, "dpnp.ndarray.__len__"]], "__lshift__() (dpnp.ndarray method)": [[228, "dpnp.ndarray.__lshift__"]], "__lt__() (dpnp.ndarray method)": [[229, "dpnp.ndarray.__lt__"]], "__mod__() (dpnp.ndarray method)": [[230, "dpnp.ndarray.__mod__"]], "__mul__() (dpnp.ndarray method)": [[231, "dpnp.ndarray.__mul__"]], "__ne__() (dpnp.ndarray method)": [[232, "dpnp.ndarray.__ne__"]], "__neg__() (dpnp.ndarray method)": [[233, "dpnp.ndarray.__neg__"]], "__new__() (dpnp.ndarray method)": [[234, "dpnp.ndarray.__new__"]], "__or__() (dpnp.ndarray method)": [[235, "dpnp.ndarray.__or__"]], "__pos__() (dpnp.ndarray method)": [[236, "dpnp.ndarray.__pos__"]], "__pow__() (dpnp.ndarray method)": [[237, "dpnp.ndarray.__pow__"]], "__repr__() (dpnp.ndarray method)": [[238, "dpnp.ndarray.__repr__"]], "__rshift__() (dpnp.ndarray method)": [[239, "dpnp.ndarray.__rshift__"]], "__setitem__() (dpnp.ndarray method)": [[240, "dpnp.ndarray.__setitem__"]], "__str__() (dpnp.ndarray method)": [[241, "dpnp.ndarray.__str__"]], "__sub__() (dpnp.ndarray method)": [[242, "dpnp.ndarray.__sub__"]], "__truediv__() (dpnp.ndarray method)": [[243, "dpnp.ndarray.__truediv__"]], "__xor__() (dpnp.ndarray method)": [[244, "dpnp.ndarray.__xor__"]], "all() (dpnp.ndarray method)": [[245, "dpnp.ndarray.all"]], "any() (dpnp.ndarray method)": [[246, "dpnp.ndarray.any"]], "argmax() (dpnp.ndarray method)": [[247, "dpnp.ndarray.argmax"]], "argmin() (dpnp.ndarray method)": [[248, "dpnp.ndarray.argmin"]], "argsort() (dpnp.ndarray method)": [[249, "dpnp.ndarray.argsort"]], "astype() (dpnp.ndarray method)": [[250, "dpnp.ndarray.astype"]], "choose() (dpnp.ndarray method)": [[251, "dpnp.ndarray.choose"]], "conj() (dpnp.ndarray method)": [[252, "dpnp.ndarray.conj"]], "conjugate() (dpnp.ndarray method)": [[253, "dpnp.ndarray.conjugate"]], "copy() (dpnp.ndarray method)": [[254, "dpnp.ndarray.copy"]], "cumsum() (dpnp.ndarray method)": [[255, "dpnp.ndarray.cumsum"]], "diagonal() (dpnp.ndarray method)": [[256, "dpnp.ndarray.diagonal"]], "dtype (dpnp.ndarray property)": [[257, "dpnp.ndarray.dtype"]], "fill() (dpnp.ndarray method)": [[258, "dpnp.ndarray.fill"]], "flags (dpnp.ndarray property)": [[259, "dpnp.ndarray.flags"]], "flat (dpnp.ndarray property)": [[260, "dpnp.ndarray.flat"]], "flatten() (dpnp.ndarray method)": [[261, "dpnp.ndarray.flatten"]], "imag (dpnp.ndarray property)": [[262, "dpnp.ndarray.imag"]], "item() (dpnp.ndarray method)": [[263, "dpnp.ndarray.item"]], "itemsize (dpnp.ndarray property)": [[264, "dpnp.ndarray.itemsize"]], "max() (dpnp.ndarray method)": [[265, "dpnp.ndarray.max"]], "mean() (dpnp.ndarray method)": [[266, "dpnp.ndarray.mean"]], "min() (dpnp.ndarray method)": [[267, "dpnp.ndarray.min"]], "nbytes (dpnp.ndarray property)": [[268, "dpnp.ndarray.nbytes"]], "ndim (dpnp.ndarray property)": [[269, "dpnp.ndarray.ndim"]], "nonzero() (dpnp.ndarray method)": [[270, "dpnp.ndarray.nonzero"]], "partition() (dpnp.ndarray method)": [[271, "dpnp.ndarray.partition"]], "prod() (dpnp.ndarray method)": [[272, "dpnp.ndarray.prod"]], "put() (dpnp.ndarray method)": [[273, "dpnp.ndarray.put"]], "real (dpnp.ndarray property)": [[274, "dpnp.ndarray.real"]], "reshape() (dpnp.ndarray method)": [[275, "dpnp.ndarray.reshape"]], "round() (dpnp.ndarray method)": [[276, "dpnp.ndarray.round"]], "shape (dpnp.ndarray property)": [[277, "dpnp.ndarray.shape"]], "size (dpnp.ndarray property)": [[278, "dpnp.ndarray.size"]], "squeeze() (dpnp.ndarray method)": [[279, "dpnp.ndarray.squeeze"]], "std() (dpnp.ndarray method)": [[280, "dpnp.ndarray.std"]], "strides (dpnp.ndarray property)": [[281, "dpnp.ndarray.strides"]], "sum() (dpnp.ndarray method)": [[282, "dpnp.ndarray.sum"]], "swapaxes() (dpnp.ndarray method)": [[283, "dpnp.ndarray.swapaxes"]], "take() (dpnp.ndarray method)": [[284, "dpnp.ndarray.take"]], "transpose() (dpnp.ndarray method)": [[285, "dpnp.ndarray.transpose"]], "var() (dpnp.ndarray method)": [[286, "dpnp.ndarray.var"]], "negative() (in module dpnp)": [[287, "dpnp.negative"]], "nonzero() (in module dpnp)": [[288, "dpnp.nonzero"]], "not_equal() (in module dpnp)": [[289, "dpnp.not_equal"]], "ogrid (in module dpnp)": [[290, "dpnp.ogrid"]], "ones() (in module dpnp)": [[291, "dpnp.ones"]], "ones_like() (in module dpnp)": [[292, "dpnp.ones_like"]], "outer() (in module dpnp)": [[293, "dpnp.outer"]], "partition() (in module dpnp)": [[294, "dpnp.partition"]], "place() (in module dpnp)": [[295, "dpnp.place"]], "positive() (in module dpnp)": [[296, "dpnp.positive"]], "power() (in module dpnp)": [[297, "dpnp.power"]], "prod() (in module dpnp)": [[298, "dpnp.prod"]], "proj() (in module dpnp)": [[299, "dpnp.proj"]], "ptp() (in module dpnp)": [[300, "dpnp.ptp"]], "put() (in module dpnp)": [[301, "dpnp.put"]], "put_along_axis() (in module dpnp)": [[302, "dpnp.put_along_axis"]], "putmask() (in module dpnp)": [[303, "dpnp.putmask"]], "rad2deg() (in module dpnp)": [[304, "dpnp.rad2deg"]], "radians() (in module dpnp)": [[305, "dpnp.radians"]], "randomstate (class in dpnp.random)": [[306, "dpnp.random.RandomState"]], "__eq__() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.__eq__"]], "__ge__() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.__ge__"]], "__gt__() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.__gt__"]], "__le__() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.__le__"]], "__lt__() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.__lt__"]], "__ne__() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.__ne__"]], "get_state() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.get_state"]], "get_sycl_device() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.get_sycl_device"]], "get_sycl_queue() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.get_sycl_queue"]], "normal() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.normal"]], "rand() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.rand"]], "randint() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.randint"]], "randn() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.randn"]], "random_sample() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.random_sample"]], "standard_normal() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.standard_normal"]], "uniform() (dpnp.random.randomstate method)": [[306, "dpnp.random.RandomState.uniform"]], "beta() (in module dpnp.random)": [[307, "dpnp.random.beta"]], "binomial() (in module dpnp.random)": [[308, "dpnp.random.binomial"]], "bytes() (in module dpnp.random)": [[309, "dpnp.random.bytes"]], "chisquare() (in module dpnp.random)": [[310, "dpnp.random.chisquare"]], "choice() (in module dpnp.random)": [[311, "dpnp.random.choice"]], "dirichlet() (in module dpnp.random)": [[312, "dpnp.random.dirichlet"]], "exponential() (in module dpnp.random)": [[313, "dpnp.random.exponential"]], "f() (in module dpnp.random)": [[314, "dpnp.random.f"]], "gamma() (in module dpnp.random)": [[315, "dpnp.random.gamma"]], "geometric() (in module dpnp.random)": [[316, "dpnp.random.geometric"]], "gumbel() (in module dpnp.random)": [[317, "dpnp.random.gumbel"]], "hypergeometric() (in module dpnp.random)": [[318, "dpnp.random.hypergeometric"]], "laplace() (in module dpnp.random)": [[319, "dpnp.random.laplace"]], "logistic() (in module dpnp.random)": [[320, "dpnp.random.logistic"]], "lognormal() (in module dpnp.random)": [[321, "dpnp.random.lognormal"]], "logseries() (in module dpnp.random)": [[322, "dpnp.random.logseries"]], "multinomial() (in module dpnp.random)": [[323, "dpnp.random.multinomial"]], "multivariate_normal() (in module dpnp.random)": [[324, "dpnp.random.multivariate_normal"]], "negative_binomial() (in module dpnp.random)": [[325, "dpnp.random.negative_binomial"]], "noncentral_chisquare() (in module dpnp.random)": [[326, "dpnp.random.noncentral_chisquare"]], "noncentral_f() (in module dpnp.random)": [[327, "dpnp.random.noncentral_f"]], "normal() (in module dpnp.random)": [[328, "dpnp.random.normal"]], "pareto() (in module dpnp.random)": [[329, "dpnp.random.pareto"]], "permutation() (in module dpnp.random)": [[330, "dpnp.random.permutation"]], "poisson() (in module dpnp.random)": [[331, "dpnp.random.poisson"]], "power() (in module dpnp.random)": [[332, "dpnp.random.power"]], "rand() (in module dpnp.random)": [[333, "dpnp.random.rand"]], "randint() (in module dpnp.random)": [[334, "dpnp.random.randint"]], "randn() (in module dpnp.random)": [[335, "dpnp.random.randn"]], "random() (in module dpnp.random)": [[336, "dpnp.random.random"]], "random_integers() (in module dpnp.random)": [[337, "dpnp.random.random_integers"]], "random_sample() (in module dpnp.random)": [[338, "dpnp.random.random_sample"]], "ranf() (in module dpnp.random)": [[339, "dpnp.random.ranf"]], "rayleigh() (in module dpnp.random)": [[340, "dpnp.random.rayleigh"]], "sample() (in module dpnp.random)": [[341, "dpnp.random.sample"]], "seed() (in module dpnp.random)": [[342, "dpnp.random.seed"]], "shuffle() (in module dpnp.random)": [[343, "dpnp.random.shuffle"]], "standard_cauchy() (in module dpnp.random)": [[344, "dpnp.random.standard_cauchy"]], "standard_exponential() (in module dpnp.random)": [[345, "dpnp.random.standard_exponential"]], "standard_gamma() (in module dpnp.random)": [[346, "dpnp.random.standard_gamma"]], "standard_normal() (in module dpnp.random)": [[347, "dpnp.random.standard_normal"]], "standard_t() (in module dpnp.random)": [[348, "dpnp.random.standard_t"]], "triangular() (in module dpnp.random)": [[349, "dpnp.random.triangular"]], "uniform() (in module dpnp.random)": [[350, "dpnp.random.uniform"]], "vonmises() (in module dpnp.random)": [[351, "dpnp.random.vonmises"]], "wald() (in module dpnp.random)": [[352, "dpnp.random.wald"]], "weibull() (in module dpnp.random)": [[353, "dpnp.random.weibull"]], "zipf() (in module dpnp.random)": [[354, "dpnp.random.zipf"]], "ravel() (in module dpnp)": [[355, "dpnp.ravel"]], "real() (in module dpnp)": [[356, "dpnp.real"]], "reciprocal() (in module dpnp)": [[357, "dpnp.reciprocal"]], "remainder() (in module dpnp)": [[358, "dpnp.remainder"]], "repeat() (in module dpnp)": [[359, "dpnp.repeat"]], "reshape() (in module dpnp)": [[360, "dpnp.reshape"]], "result_type() (in module dpnp)": [[361, "dpnp.result_type"]], "right_shift() (in module dpnp)": [[362, "dpnp.right_shift"]], "rint() (in module dpnp)": [[363, "dpnp.rint"]], "roll() (in module dpnp)": [[364, "dpnp.roll"]], "rollaxis() (in module dpnp)": [[365, "dpnp.rollaxis"]], "round() (in module dpnp)": [[366, "dpnp.round"]], "searchsorted() (in module dpnp)": [[367, "dpnp.searchsorted"]], "select() (in module dpnp)": [[368, "dpnp.select"]], "shape() (in module dpnp)": [[369, "dpnp.shape"]], "sign() (in module dpnp)": [[370, "dpnp.sign"]], "signbit() (in module dpnp)": [[371, "dpnp.signbit"]], "sin() (in module dpnp)": [[372, "dpnp.sin"]], "sinh() (in module dpnp)": [[373, "dpnp.sinh"]], "sort() (in module dpnp)": [[374, "dpnp.sort"]], "sqrt() (in module dpnp)": [[375, "dpnp.sqrt"]], "square() (in module dpnp)": [[376, "dpnp.square"]], "squeeze() (in module dpnp)": [[377, "dpnp.squeeze"]], "stack() (in module dpnp)": [[378, "dpnp.stack"]], "std() (in module dpnp)": [[379, "dpnp.std"]], "subtract() (in module dpnp)": [[380, "dpnp.subtract"]], "sum() (in module dpnp)": [[381, "dpnp.sum"]], "swapaxes() (in module dpnp)": [[382, "dpnp.swapaxes"]], "take() (in module dpnp)": [[383, "dpnp.take"]], "take_along_axis() (in module dpnp)": [[384, "dpnp.take_along_axis"]], "tan() (in module dpnp)": [[385, "dpnp.tan"]], "tanh() (in module dpnp)": [[386, "dpnp.tanh"]], "tensordot() (in module dpnp)": [[387, "dpnp.tensordot"]], "tile() (in module dpnp)": [[388, "dpnp.tile"]], "trace() (in module dpnp)": [[389, "dpnp.trace"]], "transpose() (in module dpnp)": [[390, "dpnp.transpose"]], "trapz() (in module dpnp)": [[391, "dpnp.trapz"]], "tri() (in module dpnp)": [[392, "dpnp.tri"]], "tril() (in module dpnp)": [[393, "dpnp.tril"]], "tril_indices() (in module dpnp)": [[394, "dpnp.tril_indices"]], "tril_indices_from() (in module dpnp)": [[395, "dpnp.tril_indices_from"]], "triu() (in module dpnp)": [[396, "dpnp.triu"]], "triu_indices() (in module dpnp)": [[397, "dpnp.triu_indices"]], "triu_indices_from() (in module dpnp)": [[398, "dpnp.triu_indices_from"]], "true_divide() (in module dpnp)": [[399, "dpnp.true_divide"]], "trunc() (in module dpnp)": [[400, "dpnp.trunc"]], "unique() (in module dpnp)": [[401, "dpnp.unique"]], "unwrap() (in module dpnp)": [[402, "dpnp.unwrap"]], "vander() (in module dpnp)": [[403, "dpnp.vander"]], "var() (in module dpnp)": [[404, "dpnp.var"]], "vdot() (in module dpnp)": [[405, "dpnp.vdot"]], "vstack() (in module dpnp)": [[406, "dpnp.vstack"]], "where() (in module dpnp)": [[407, "dpnp.where"]], "zeros() (in module dpnp)": [[408, "dpnp.zeros"]], "zeros_like() (in module dpnp)": [[409, "dpnp.zeros_like"]], "dpnp.random": [[420, "module-dpnp.random"]]}})