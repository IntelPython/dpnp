Search.setIndex({"alltitles": {"API Reference": [[473, null]], "Adding and removing elements": [[477, "adding-and-removing-elements"]], "Arithmetic": [[482, "arithmetic"]], "Arithmetic operations": [[478, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[480, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Indexing Routines": [[474, null]], "Array Manipulation Routines": [[477, null]], "Array attributes": [[480, "array-attributes"]], "Array conversion": [[480, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[480, "array-methods"]], "Array type testing": [[476, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[488, "available-ufuncs"]], "Averages and variances": [[487, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[477, "basic-operations"]], "Basics": [[482, "basics"]], "Binary Operations": [[5, null]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[488, "bit-twiddling-functions"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[480, "calculation"]], "Changing array shape": [[477, "changing-array-shape"]], "Changing kind of array": [[477, "changing-kind-of-array"]], "Changing number of dimensions": [[477, "changing-number-of-dimensions"]], "Comparison": [[476, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[488, "comparison-functions"]], "Constructing arrays": [[480, "constructing-arrays"]], "Correlations": [[487, "correlations"]], "Counting": [[485, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[480, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[475, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[483, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[486, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exponents and logarithms": [[478, "exponents-and-logarithms"]], "Extrema finding": [[478, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[488, "floating-functions"]], "Floating point routines": [[478, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[474, "generating-index-arrays"]], "Handling complex numbers": [[478, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[487, "histograms"]], "Hyperbolic functions": [[478, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[480, "indexing-arrays"]], "Indexing-like operations": [[474, "indexing-like-operations"]], "Infinities and NaNs": [[476, "infinities-and-nans"]], "Inserting data into arrays": [[474, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[480, "item-selection-and-manipulation"]], "Iterating over arrays": [[474, "iterating-over-arrays"]], "Joining arrays": [[477, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [475, null]], "Logic Functions": [[476, null]], "Logic operations": [[476, "logic-operations"]], "Math operations": [[488, "math-operations"]], "Mathematical functions": [[478, null]], "Matrix and vector products": [[475, "matrix-and-vector-products"]], "Matrix eigenvalues": [[475, "matrix-eigenvalues"]], "Memory layout": [[480, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [478, "miscellaneous"]], "Miscellaneous routines": [[479, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[480, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[475, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[487, "order-statistics"]], "Other attributes": [[480, "other-attributes"]], "Other special functions": [[478, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Padding": [[481, null]], "Permutations": [[483, "permutations"]], "Poly1d": [[482, "poly1d"]], "Polynomial Module": [[482, "polynomial-module"]], "Polynomial Package": [[482, "polynomial-package"]], "Polynomials": [[482, null]], "Polyutils": [[482, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[483, null]], "Random generator": [[483, "random-generator"]], "Rational routines": [[478, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[477, "rearranging-elements"]], "Rounding": [[478, "rounding"]], "Routines": [[484, null]], "Searching": [[485, "searching"]], "Shape manipulation": [[480, "shape-manipulation"]], "Simple random data": [[483, "simple-random-data"]], "Solving linear equations": [[475, "solving-linear-equations"]], "Sorting": [[485, "sorting"]], "Sorting, Searching, and Counting": [[485, null]], "Special Functions": [[486, null]], "Special methods": [[480, "special-methods"]], "Splitting arrays": [[477, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[487, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[478, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[477, "tiling-arrays"]], "Transpose-like operations": [[477, "transpose-like-operations"]], "Trigonometric functions": [[478, "trigonometric-functions"], [488, "trigonometric-functions"]], "Truth value testing": [[476, "truth-value-testing"]], "Type Promotion": [[10, "type-promotion"]], "Universal Functions (ufunc)": [[488, null]], "Utility": [[479, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.add": [[13, null]], "dpnp.all": [[14, null]], "dpnp.allclose": [[15, null]], "dpnp.amax": [[16, null]], "dpnp.amin": [[17, null]], "dpnp.angle": [[18, null]], "dpnp.any": [[19, null]], "dpnp.append": [[20, null]], "dpnp.arange": [[21, null]], "dpnp.arccos": [[22, null]], "dpnp.arccosh": [[23, null]], "dpnp.arcsin": [[24, null]], "dpnp.arcsinh": [[25, null]], "dpnp.arctan": [[26, null]], "dpnp.arctan2": [[27, null]], "dpnp.arctanh": [[28, null]], "dpnp.argmax": [[29, null]], "dpnp.argmin": [[30, null]], "dpnp.argsort": [[31, null]], "dpnp.argwhere": [[32, null]], "dpnp.around": [[33, null]], "dpnp.array": [[34, null]], "dpnp.array_equal": [[35, null]], "dpnp.array_equiv": [[36, null]], "dpnp.array_split": [[37, null]], "dpnp.asanyarray": [[38, null]], "dpnp.asarray": [[39, null]], "dpnp.asarray_chkfinite": [[40, null]], "dpnp.ascontiguousarray": [[41, null]], "dpnp.asfarray": [[42, null]], "dpnp.asfortranarray": [[43, null]], "dpnp.asnumpy": [[44, null]], "dpnp.astype": [[45, null]], "dpnp.atleast_1d": [[46, null]], "dpnp.atleast_2d": [[47, null]], "dpnp.atleast_3d": [[48, null]], "dpnp.average": [[49, null]], "dpnp.bincount": [[50, null]], "dpnp.bitwise_and": [[51, null]], "dpnp.bitwise_not": [[52, null]], "dpnp.bitwise_or": [[53, null]], "dpnp.bitwise_xor": [[54, null]], "dpnp.broadcast_arrays": [[55, null]], "dpnp.broadcast_to": [[56, null]], "dpnp.can_cast": [[57, null]], "dpnp.cbrt": [[58, null]], "dpnp.ceil": [[59, null]], "dpnp.choose": [[60, null]], "dpnp.clip": [[61, null]], "dpnp.column_stack": [[62, null]], "dpnp.concatenate": [[63, null]], "dpnp.conj": [[64, null]], "dpnp.conjugate": [[65, null]], "dpnp.convolve": [[66, null]], "dpnp.copy": [[67, null]], "dpnp.copysign": [[68, null]], "dpnp.copyto": [[69, null]], "dpnp.correlate": [[70, null]], "dpnp.cos": [[71, null]], "dpnp.cosh": [[72, null]], "dpnp.count_nonzero": [[73, null]], "dpnp.cov": [[74, null]], "dpnp.cross": [[75, null]], "dpnp.cumlogsumexp": [[76, null]], "dpnp.cumprod": [[77, null]], "dpnp.cumsum": [[78, null]], "dpnp.deg2rad": [[79, null]], "dpnp.degrees": [[80, null]], "dpnp.diag": [[81, null]], "dpnp.diag_indices": [[82, null]], "dpnp.diag_indices_from": [[83, null]], "dpnp.diagflat": [[84, null]], "dpnp.diagonal": [[85, null]], "dpnp.diff": [[86, null]], "dpnp.digitize": [[87, null]], "dpnp.divide": [[88, null]], "dpnp.dot": [[89, null]], "dpnp.dpnp_array.dpnp_array": [[90, null]], "dpnp.dsplit": [[91, null]], "dpnp.dstack": [[92, null]], "dpnp.dtype": [[93, null]], "dpnp.ediff1d": [[94, null]], "dpnp.einsum": [[95, null]], "dpnp.einsum_path": [[96, null]], "dpnp.empty": [[97, null]], "dpnp.empty_like": [[98, null]], "dpnp.equal": [[99, null]], "dpnp.erf": [[100, null]], "dpnp.exp": [[101, null]], "dpnp.exp2": [[102, null]], "dpnp.expand_dims": [[103, null]], "dpnp.expm1": [[104, null]], "dpnp.extract": [[105, null]], "dpnp.eye": [[106, null]], "dpnp.fabs": [[107, null]], "dpnp.fft.fft": [[108, null]], "dpnp.fft.fft2": [[109, null]], "dpnp.fft.fftfreq": [[110, null]], "dpnp.fft.fftn": [[111, null]], "dpnp.fft.fftshift": [[112, null]], "dpnp.fft.hfft": [[113, null]], "dpnp.fft.ifft": [[114, null]], "dpnp.fft.ifft2": [[115, null]], "dpnp.fft.ifftn": [[116, null]], "dpnp.fft.ifftshift": [[117, null]], "dpnp.fft.ihfft": [[118, null]], "dpnp.fft.irfft": [[119, null]], "dpnp.fft.irfft2": [[120, null]], "dpnp.fft.irfftn": [[121, null]], "dpnp.fft.rfft": [[122, null]], "dpnp.fft.rfft2": [[123, null]], "dpnp.fft.rfftfreq": [[124, null]], "dpnp.fft.rfftn": [[125, null]], "dpnp.fill_diagonal": [[126, null]], "dpnp.finfo": [[127, null]], "dpnp.fix": [[128, null]], "dpnp.flatiter": [[129, null]], "dpnp.flatnonzero": [[130, null]], "dpnp.flip": [[131, null]], "dpnp.fliplr": [[132, null]], "dpnp.flipud": [[133, null]], "dpnp.float_power": [[134, null]], "dpnp.floor": [[135, null]], "dpnp.floor_divide": [[136, null]], "dpnp.fmax": [[137, null]], "dpnp.fmin": [[138, null]], "dpnp.fmod": [[139, null]], "dpnp.from_dlpack": [[140, null]], "dpnp.frombuffer": [[141, null]], "dpnp.fromfile": [[142, null]], "dpnp.fromfunction": [[143, null]], "dpnp.fromiter": [[144, null]], "dpnp.fromstring": [[145, null]], "dpnp.full": [[146, null]], "dpnp.full_like": [[147, null]], "dpnp.geomspace": [[148, null]], "dpnp.get_include": [[149, null]], "dpnp.gradient": [[150, null]], "dpnp.greater": [[151, null]], "dpnp.greater_equal": [[152, null]], "dpnp.heaviside": [[153, null]], "dpnp.histogram": [[154, null]], "dpnp.histogram_bin_edges": [[155, null]], "dpnp.hsplit": [[156, null]], "dpnp.hstack": [[157, null]], "dpnp.hypot": [[158, null]], "dpnp.identity": [[159, null]], "dpnp.iinfo": [[160, null]], "dpnp.imag": [[161, null]], "dpnp.indices": [[162, null]], "dpnp.inner": [[163, null]], "dpnp.invert": [[164, null]], "dpnp.isclose": [[165, null]], "dpnp.iscomplex": [[166, null]], "dpnp.iscomplexobj": [[167, null]], "dpnp.isfinite": [[168, null]], "dpnp.isinf": [[169, null]], "dpnp.isnan": [[170, null]], "dpnp.isneginf": [[171, null]], "dpnp.isposinf": [[172, null]], "dpnp.isreal": [[173, null]], "dpnp.isrealobj": [[174, null]], "dpnp.isscalar": [[175, null]], "dpnp.issubdtype": [[176, null]], "dpnp.ix_": [[177, null]], "dpnp.kron": [[178, null]], "dpnp.left_shift": [[179, null]], "dpnp.less": [[180, null]], "dpnp.less_equal": [[181, null]], "dpnp.linalg.cholesky": [[182, null]], "dpnp.linalg.cond": [[183, null]], "dpnp.linalg.det": [[184, null]], "dpnp.linalg.eig": [[185, null]], "dpnp.linalg.eigh": [[186, null]], "dpnp.linalg.eigvals": [[187, null]], "dpnp.linalg.eigvalsh": [[188, null]], "dpnp.linalg.inv": [[189, null]], "dpnp.linalg.lstsq": [[190, null]], "dpnp.linalg.matrix_power": [[191, null]], "dpnp.linalg.matrix_rank": [[192, null]], "dpnp.linalg.multi_dot": [[193, null]], "dpnp.linalg.norm": [[194, null]], "dpnp.linalg.pinv": [[195, null]], "dpnp.linalg.qr": [[196, null]], "dpnp.linalg.slogdet": [[197, null]], "dpnp.linalg.solve": [[198, null]], "dpnp.linalg.svd": [[199, null]], "dpnp.linalg.tensorinv": [[200, null]], "dpnp.linalg.tensorsolve": [[201, null]], "dpnp.linspace": [[202, null]], "dpnp.loadtxt": [[203, null]], "dpnp.log": [[204, null]], "dpnp.log10": [[205, null]], "dpnp.log1p": [[206, null]], "dpnp.log2": [[207, null]], "dpnp.logaddexp": [[208, null]], "dpnp.logaddexp2": [[209, null]], "dpnp.logical_and": [[210, null]], "dpnp.logical_not": [[211, null]], "dpnp.logical_or": [[212, null]], "dpnp.logical_xor": [[213, null]], "dpnp.logspace": [[214, null]], "dpnp.logsumexp": [[215, null]], "dpnp.mask_indices": [[216, null]], "dpnp.matmul": [[217, null]], "dpnp.max": [[218, null]], "dpnp.maximum": [[219, null]], "dpnp.mean": [[220, null]], "dpnp.median": [[221, null]], "dpnp.meshgrid": [[222, null]], "dpnp.mgrid": [[223, null]], "dpnp.min": [[224, null]], "dpnp.minimum": [[225, null]], "dpnp.mod": [[226, null]], "dpnp.modf": [[227, null]], "dpnp.moveaxis": [[228, null]], "dpnp.multiply": [[229, null]], "dpnp.nan_to_num": [[230, null]], "dpnp.nanargmax": [[231, null]], "dpnp.nanargmin": [[232, null]], "dpnp.nancumprod": [[233, null]], "dpnp.nancumsum": [[234, null]], "dpnp.nanmax": [[235, null]], "dpnp.nanmean": [[236, null]], "dpnp.nanmin": [[237, null]], "dpnp.nanprod": [[238, null]], "dpnp.nanstd": [[239, null]], "dpnp.nansum": [[240, null]], "dpnp.nanvar": [[241, null]], "dpnp.ndarray": [[242, null]], "dpnp.ndarray.T": [[243, null]], "dpnp.ndarray.__abs__": [[244, null]], "dpnp.ndarray.__add__": [[245, null]], "dpnp.ndarray.__and__": [[246, null]], "dpnp.ndarray.__bool__": [[247, null]], "dpnp.ndarray.__complex__": [[248, null]], "dpnp.ndarray.__copy__": [[249, null]], "dpnp.ndarray.__eq__": [[250, null]], "dpnp.ndarray.__float__": [[251, null]], "dpnp.ndarray.__floordiv__": [[252, null]], "dpnp.ndarray.__ge__": [[253, null]], "dpnp.ndarray.__getitem__": [[254, null]], "dpnp.ndarray.__gt__": [[255, null]], "dpnp.ndarray.__iadd__": [[256, null]], "dpnp.ndarray.__iand__": [[257, null]], "dpnp.ndarray.__ifloordiv__": [[258, null]], "dpnp.ndarray.__ilshift__": [[259, null]], "dpnp.ndarray.__imod__": [[260, null]], "dpnp.ndarray.__imul__": [[261, null]], "dpnp.ndarray.__int__": [[262, null]], "dpnp.ndarray.__invert__": [[263, null]], "dpnp.ndarray.__ior__": [[264, null]], "dpnp.ndarray.__ipow__": [[265, null]], "dpnp.ndarray.__irshift__": [[266, null]], "dpnp.ndarray.__isub__": [[267, null]], "dpnp.ndarray.__itruediv__": [[268, null]], "dpnp.ndarray.__ixor__": [[269, null]], "dpnp.ndarray.__le__": [[270, null]], "dpnp.ndarray.__len__": [[271, null]], "dpnp.ndarray.__lshift__": [[272, null]], "dpnp.ndarray.__lt__": [[273, null]], "dpnp.ndarray.__matmul__": [[274, null]], "dpnp.ndarray.__mod__": [[275, null]], "dpnp.ndarray.__mul__": [[276, null]], "dpnp.ndarray.__ne__": [[277, null]], "dpnp.ndarray.__neg__": [[278, null]], "dpnp.ndarray.__new__": [[279, null]], "dpnp.ndarray.__or__": [[280, null]], "dpnp.ndarray.__pos__": [[281, null]], "dpnp.ndarray.__pow__": [[282, null]], "dpnp.ndarray.__repr__": [[283, null]], "dpnp.ndarray.__rshift__": [[284, null]], "dpnp.ndarray.__setitem__": [[285, null]], "dpnp.ndarray.__str__": [[286, null]], "dpnp.ndarray.__sub__": [[287, null]], "dpnp.ndarray.__truediv__": [[288, null]], "dpnp.ndarray.__xor__": [[289, null]], "dpnp.ndarray.all": [[290, null]], "dpnp.ndarray.any": [[291, null]], "dpnp.ndarray.argmax": [[292, null]], "dpnp.ndarray.argmin": [[293, null]], "dpnp.ndarray.argsort": [[294, null]], "dpnp.ndarray.astype": [[295, null]], "dpnp.ndarray.choose": [[296, null]], "dpnp.ndarray.clip": [[297, null]], "dpnp.ndarray.conj": [[298, null]], "dpnp.ndarray.conjugate": [[299, null]], "dpnp.ndarray.copy": [[300, null]], "dpnp.ndarray.cumprod": [[301, null]], "dpnp.ndarray.cumsum": [[302, null]], "dpnp.ndarray.diagonal": [[303, null]], "dpnp.ndarray.dtype": [[304, null]], "dpnp.ndarray.fill": [[305, null]], "dpnp.ndarray.flags": [[306, null]], "dpnp.ndarray.flat": [[307, null]], "dpnp.ndarray.flatten": [[308, null]], "dpnp.ndarray.imag": [[309, null]], "dpnp.ndarray.item": [[310, null]], "dpnp.ndarray.itemsize": [[311, null]], "dpnp.ndarray.max": [[312, null]], "dpnp.ndarray.mean": [[313, null]], "dpnp.ndarray.min": [[314, null]], "dpnp.ndarray.nbytes": [[315, null]], "dpnp.ndarray.ndim": [[316, null]], "dpnp.ndarray.nonzero": [[317, null]], "dpnp.ndarray.partition": [[318, null]], "dpnp.ndarray.prod": [[319, null]], "dpnp.ndarray.put": [[320, null]], "dpnp.ndarray.ravel": [[321, null]], "dpnp.ndarray.real": [[322, null]], "dpnp.ndarray.repeat": [[323, null]], "dpnp.ndarray.reshape": [[324, null]], "dpnp.ndarray.round": [[325, null]], "dpnp.ndarray.searchsorted": [[326, null]], "dpnp.ndarray.shape": [[327, null]], "dpnp.ndarray.size": [[328, null]], "dpnp.ndarray.sort": [[329, null]], "dpnp.ndarray.squeeze": [[330, null]], "dpnp.ndarray.std": [[331, null]], "dpnp.ndarray.strides": [[332, null]], "dpnp.ndarray.sum": [[333, null]], "dpnp.ndarray.swapaxes": [[334, null]], "dpnp.ndarray.take": [[335, null]], "dpnp.ndarray.trace": [[336, null]], "dpnp.ndarray.transpose": [[337, null]], "dpnp.ndarray.var": [[338, null]], "dpnp.ndim": [[339, null]], "dpnp.negative": [[340, null]], "dpnp.nextafter": [[341, null]], "dpnp.nonzero": [[342, null]], "dpnp.not_equal": [[343, null]], "dpnp.ogrid": [[344, null]], "dpnp.ones": [[345, null]], "dpnp.ones_like": [[346, null]], "dpnp.outer": [[347, null]], "dpnp.partition": [[348, null]], "dpnp.place": [[349, null]], "dpnp.positive": [[350, null]], "dpnp.power": [[351, null]], "dpnp.prod": [[352, null]], "dpnp.proj": [[353, null]], "dpnp.ptp": [[354, null]], "dpnp.put": [[355, null]], "dpnp.put_along_axis": [[356, null]], "dpnp.putmask": [[357, null]], "dpnp.rad2deg": [[358, null]], "dpnp.radians": [[359, null]], "dpnp.random.RandomState": [[360, null]], "dpnp.random.beta": [[361, null]], "dpnp.random.binomial": [[362, null]], "dpnp.random.bytes": [[363, null]], "dpnp.random.chisquare": [[364, null]], "dpnp.random.choice": [[365, null]], "dpnp.random.dirichlet": [[366, null]], "dpnp.random.exponential": [[367, null]], "dpnp.random.f": [[368, null]], "dpnp.random.gamma": [[369, null]], "dpnp.random.geometric": [[370, null]], "dpnp.random.gumbel": [[371, null]], "dpnp.random.hypergeometric": [[372, null]], "dpnp.random.laplace": [[373, null]], "dpnp.random.logistic": [[374, null]], "dpnp.random.lognormal": [[375, null]], "dpnp.random.logseries": [[376, null]], "dpnp.random.multinomial": [[377, null]], "dpnp.random.multivariate_normal": [[378, null]], "dpnp.random.negative_binomial": [[379, null]], "dpnp.random.noncentral_chisquare": [[380, null]], "dpnp.random.noncentral_f": [[381, null]], "dpnp.random.normal": [[382, null]], "dpnp.random.pareto": [[383, null]], "dpnp.random.permutation": [[384, null]], "dpnp.random.poisson": [[385, null]], "dpnp.random.power": [[386, null]], "dpnp.random.rand": [[387, null]], "dpnp.random.randint": [[388, null]], "dpnp.random.randn": [[389, null]], "dpnp.random.random": [[390, null]], "dpnp.random.random_integers": [[391, null]], "dpnp.random.random_sample": [[392, null]], "dpnp.random.ranf": [[393, null]], "dpnp.random.rayleigh": [[394, null]], "dpnp.random.sample": [[395, null]], "dpnp.random.seed": [[396, null]], "dpnp.random.shuffle": [[397, null]], "dpnp.random.standard_cauchy": [[398, null]], "dpnp.random.standard_exponential": [[399, null]], "dpnp.random.standard_gamma": [[400, null]], "dpnp.random.standard_normal": [[401, null]], "dpnp.random.standard_t": [[402, null]], "dpnp.random.triangular": [[403, null]], "dpnp.random.uniform": [[404, null]], "dpnp.random.vonmises": [[405, null]], "dpnp.random.wald": [[406, null]], "dpnp.random.weibull": [[407, null]], "dpnp.random.zipf": [[408, null]], "dpnp.ravel": [[409, null]], "dpnp.real": [[410, null]], "dpnp.real_if_close": [[411, null]], "dpnp.reciprocal": [[412, null]], "dpnp.reduce_hypot": [[413, null]], "dpnp.remainder": [[414, null]], "dpnp.repeat": [[415, null]], "dpnp.reshape": [[416, null]], "dpnp.result_type": [[417, null]], "dpnp.right_shift": [[418, null]], "dpnp.rint": [[419, null]], "dpnp.roll": [[420, null]], "dpnp.rollaxis": [[421, null]], "dpnp.round": [[422, null]], "dpnp.row_stack": [[423, null]], "dpnp.rsqrt": [[424, null]], "dpnp.searchsorted": [[425, null]], "dpnp.select": [[426, null]], "dpnp.shape": [[427, null]], "dpnp.sign": [[428, null]], "dpnp.signbit": [[429, null]], "dpnp.sin": [[430, null]], "dpnp.sinh": [[431, null]], "dpnp.size": [[432, null]], "dpnp.sort": [[433, null]], "dpnp.sort_complex": [[434, null]], "dpnp.split": [[435, null]], "dpnp.sqrt": [[436, null]], "dpnp.square": [[437, null]], "dpnp.squeeze": [[438, null]], "dpnp.stack": [[439, null]], "dpnp.std": [[440, null]], "dpnp.subtract": [[441, null]], "dpnp.sum": [[442, null]], "dpnp.swapaxes": [[443, null]], "dpnp.take": [[444, null]], "dpnp.take_along_axis": [[445, null]], "dpnp.tan": [[446, null]], "dpnp.tanh": [[447, null]], "dpnp.tensordot": [[448, null]], "dpnp.tile": [[449, null]], "dpnp.trace": [[450, null]], "dpnp.transpose": [[451, null]], "dpnp.trapezoid": [[452, null]], "dpnp.tri": [[453, null]], "dpnp.tril": [[454, null]], "dpnp.tril_indices": [[455, null]], "dpnp.tril_indices_from": [[456, null]], "dpnp.trim_zeros": [[457, null]], "dpnp.triu": [[458, null]], "dpnp.triu_indices": [[459, null]], "dpnp.triu_indices_from": [[460, null]], "dpnp.true_divide": [[461, null]], "dpnp.trunc": [[462, null]], "dpnp.unique": [[463, null]], "dpnp.unwrap": [[464, null]], "dpnp.vander": [[465, null]], "dpnp.var": [[466, null]], "dpnp.vdot": [[467, null]], "dpnp.vsplit": [[468, null]], "dpnp.vstack": [[469, null]], "dpnp.where": [[470, null]], "dpnp.zeros": [[471, null]], "dpnp.zeros_like": [[472, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[244, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[245, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[246, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[247, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[248, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[249, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[93, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[129, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[250, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[251, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[252, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[93, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[129, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[253, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[93, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[129, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[254, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[93, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[129, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[255, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[256, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[257, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[258, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[259, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[260, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[261, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[262, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[263, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[264, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[265, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[266, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[267, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[129, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[268, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[269, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[93, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[129, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[93, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[93, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[129, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[93, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[129, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[129, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[129, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "add() (in module dpnp)": [[13, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[93, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[290, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[14, "dpnp.all", false]], "allclose() (in module dpnp)": [[15, "dpnp.allclose", false]], "amax() (in module dpnp)": [[16, "dpnp.amax", false]], "amin() (in module dpnp)": [[17, "dpnp.amin", false]], "angle() (in module dpnp)": [[18, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[291, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[19, "dpnp.any", false]], "append() (in module dpnp)": [[20, "dpnp.append", false]], "arange() (in module dpnp)": [[21, "dpnp.arange", false]], "arccos() (in module dpnp)": [[22, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[23, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[24, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[25, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[26, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[27, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[28, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[292, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[29, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[293, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[30, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[294, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[31, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[32, "dpnp.argwhere", false]], "around() (in module dpnp)": [[33, "dpnp.around", false]], "array() (in module dpnp)": [[34, "dpnp.array", false]], "array_equal() (in module dpnp)": [[35, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[36, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[37, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[38, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[39, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[40, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[41, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[42, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[43, "dpnp.asfortranarray", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[44, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[295, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[45, "dpnp.astype", false]], "atleast_1d() (in module dpnp)": [[46, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[47, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[48, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[49, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[93, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[361, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[50, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[362, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[51, "dpnp.bitwise_and", false]], "bitwise_not() (in module dpnp)": [[52, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[53, "dpnp.bitwise_or", false]], "bitwise_xor() (in module dpnp)": [[54, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[55, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[56, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[93, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[363, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[57, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[58, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[59, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[93, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[364, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[365, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[182, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[296, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[60, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[297, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[61, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[62, "dpnp.column_stack", false]], "concatenate() (in module dpnp)": [[63, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[183, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[298, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[64, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[299, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[65, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[66, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[300, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[67, "dpnp.copy", false]], "copysign() (in module dpnp)": [[68, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[69, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[70, "dpnp.correlate", false]], "cos() (in module dpnp)": [[71, "dpnp.cos", false]], "cosh() (in module dpnp)": [[72, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[73, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[74, "dpnp.cov", false]], "cross() (in module dpnp)": [[75, "dpnp.cross", false]], "cumlogsumexp() (in module dpnp)": [[76, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[301, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[77, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[302, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[78, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[79, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[80, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[93, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[184, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[81, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[82, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[83, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[84, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[303, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[85, "dpnp.diagonal", false]], "diff() (in module dpnp)": [[86, "dpnp.diff", false]], "digitize() (in module dpnp)": [[87, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[366, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[88, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[89, "dpnp.dot", false]], "dpnp": [[2, "module-dpnp", false], [3, "module-dpnp", false]], "dpnp.fft": [[10, "module-0", false], [10, "module-dpnp.fft", false]], "dpnp.random": [[483, "module-dpnp.random", false]], "dpnp_array (class in dpnp.dpnp_array)": [[90, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[91, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[92, "dpnp.dstack", false]], "dtype (class in dpnp)": [[93, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[304, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[94, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[185, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[186, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[187, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[188, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[95, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[96, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[97, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[98, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[99, "dpnp.equal", false]], "erf() (in module dpnp)": [[100, "dpnp.erf", false]], "exp() (in module dpnp)": [[101, "dpnp.exp", false]], "exp2() (in module dpnp)": [[102, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[103, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[104, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[367, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[105, "dpnp.extract", false]], "eye() (in module dpnp)": [[106, "dpnp.eye", false]], "f() (in module dpnp.random)": [[368, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[107, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[108, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[109, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[110, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[111, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[112, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[93, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[305, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[126, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[127, "dpnp.finfo", false]], "fix() (in module dpnp)": [[128, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[93, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[306, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[307, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[129, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[130, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[308, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[131, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[132, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[133, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[134, "dpnp.float_power", false]], "floor() (in module dpnp)": [[135, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[136, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[137, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[138, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[139, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[140, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[141, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[142, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[143, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[144, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[145, "dpnp.fromstring", false]], "full() (in module dpnp)": [[146, "dpnp.full", false]], "full_like() (in module dpnp)": [[147, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[369, "dpnp.random.gamma", false]], "geometric() (in module dpnp.random)": [[370, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[148, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[149, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[150, "dpnp.gradient", false]], "greater() (in module dpnp)": [[151, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[152, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[371, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[93, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[153, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[113, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[154, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[155, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[156, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[157, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[372, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[158, "dpnp.hypot", false]], "identity() (in module dpnp)": [[159, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[114, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[115, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[116, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[117, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[118, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[160, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[309, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[161, "dpnp.imag", false]], "indices() (in module dpnp)": [[162, "dpnp.indices", false]], "inner() (in module dpnp)": [[163, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[189, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[164, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[119, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[120, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[121, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[93, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[93, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[165, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[166, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[167, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[168, "dpnp.isfinite", false]], "isinf() (in module dpnp)": [[169, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[170, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[93, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[171, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[172, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[173, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[174, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[175, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[176, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[310, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[93, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[311, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[177, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[93, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[178, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[373, "dpnp.random.laplace", false]], "left_shift() (in module dpnp)": [[179, "dpnp.left_shift", false]], "less() (in module dpnp)": [[180, "dpnp.less", false]], "less_equal() (in module dpnp)": [[181, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[202, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[203, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[204, "dpnp.log", false]], "log10() (in module dpnp)": [[205, "dpnp.log10", false]], "log1p() (in module dpnp)": [[206, "dpnp.log1p", false]], "log2() (in module dpnp)": [[207, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[208, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[209, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[210, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[211, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[212, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[213, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[374, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[375, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[376, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[214, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[215, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[190, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[216, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[217, "dpnp.matmul", false]], "matrix_power() (in module dpnp.linalg)": [[191, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[192, "dpnp.linalg.matrix_rank", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[312, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[218, "dpnp.max", false]], "maximum() (in module dpnp)": [[219, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[313, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[220, "dpnp.mean", false]], "median() (in module dpnp)": [[221, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[222, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[93, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[223, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[314, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[224, "dpnp.min", false]], "minimum() (in module dpnp)": [[225, "dpnp.minimum", false]], "mod() (in module dpnp)": [[226, "dpnp.mod", false]], "modf() (in module dpnp)": [[227, "dpnp.modf", false]], "module": [[2, "module-dpnp", false], [3, "module-dpnp", false], [10, "module-0", false], [10, "module-dpnp.fft", false], [483, "module-dpnp.random", false]], "moveaxis() (in module dpnp)": [[228, "dpnp.moveaxis", false]], "multi_dot() (in module dpnp.linalg)": [[193, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[377, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[229, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[378, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[93, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[93, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[230, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[231, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[232, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[233, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[234, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[235, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[236, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[237, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[238, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[239, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[240, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[241, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[315, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[242, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[93, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[316, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[339, "dpnp.ndim", false]], "negative() (in module dpnp)": [[340, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[379, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[93, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[341, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[380, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[381, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[317, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[342, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[194, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[382, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[343, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[93, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[344, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[345, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[346, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[347, "dpnp.outer", false]], "pareto() (in module dpnp.random)": [[383, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[318, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[348, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[384, "dpnp.random.permutation", false]], "pinv() (in module dpnp.linalg)": [[195, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[349, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[385, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[350, "dpnp.positive", false]], "power() (in module dpnp)": [[351, "dpnp.power", false]], "power() (in module dpnp.random)": [[386, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[319, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[352, "dpnp.prod", false]], "proj() (in module dpnp)": [[353, "dpnp.proj", false]], "ptp() (in module dpnp)": [[354, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[320, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[355, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[356, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[357, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[196, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[358, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[359, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[387, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[388, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[389, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[390, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[391, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[392, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[360, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[393, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[321, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[409, "dpnp.ravel", false]], "rayleigh() (in module dpnp.random)": [[394, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[322, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[410, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[411, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[412, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[413, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[414, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[323, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[415, "dpnp.repeat", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[324, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[416, "dpnp.reshape", false]], "result_type() (in module dpnp)": [[417, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[122, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[123, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[124, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[125, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[418, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[419, "dpnp.rint", false]], "roll() (in module dpnp)": [[420, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[421, "dpnp.rollaxis", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[325, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[422, "dpnp.round", false]], "row_stack() (in module dpnp)": [[423, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[424, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[395, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[326, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[425, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[396, "dpnp.random.seed", false]], "select() (in module dpnp)": [[426, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[93, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[327, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[427, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[397, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[428, "dpnp.sign", false]], "signbit() (in module dpnp)": [[429, "dpnp.signbit", false]], "sin() (in module dpnp)": [[430, "dpnp.sin", false]], "sinh() (in module dpnp)": [[431, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[328, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[432, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[197, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[198, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[329, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[433, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[434, "dpnp.sort_complex", false]], "split() (in module dpnp)": [[435, "dpnp.split", false]], "sqrt() (in module dpnp)": [[436, "dpnp.sqrt", false]], "square() (in module dpnp)": [[437, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[330, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[438, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[439, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[398, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[399, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[400, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[401, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[402, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[331, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[440, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[93, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[332, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[93, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[441, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[333, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[442, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[199, "dpnp.linalg.svd", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[334, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[443, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[243, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[335, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[444, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[445, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[446, "dpnp.tan", false]], "tanh() (in module dpnp)": [[447, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[448, "dpnp.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[200, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[201, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[449, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[336, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[450, "dpnp.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[337, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[451, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[452, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[453, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[403, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[454, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[455, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[456, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[457, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[458, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[459, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[460, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[461, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[462, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[93, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[360, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[404, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[463, "dpnp.unique", false]], "unwrap() (in module dpnp)": [[464, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[90, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[465, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[90, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[338, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[466, "dpnp.var", false]], "vdot() (in module dpnp)": [[467, "dpnp.vdot", false]], "vonmises() (in module dpnp.random)": [[405, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[468, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[469, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[406, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[407, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[470, "dpnp.where", false]], "zeros() (in module dpnp)": [[471, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[472, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[408, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argsort"], [32, 1, 1, "", "argwhere"], [33, 1, 1, "", "around"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_equiv"], [37, 1, 1, "", "array_split"], [38, 1, 1, "", "asanyarray"], [39, 1, 1, "", "asarray"], [40, 1, 1, "", "asarray_chkfinite"], [41, 1, 1, "", "ascontiguousarray"], [42, 1, 1, "", "asfarray"], [43, 1, 1, "", "asfortranarray"], [44, 1, 1, "", "asnumpy"], [45, 1, 1, "", "astype"], [46, 1, 1, "", "atleast_1d"], [47, 1, 1, "", "atleast_2d"], [48, 1, 1, "", "atleast_3d"], [49, 1, 1, "", "average"], [50, 1, 1, "", "bincount"], [51, 1, 1, "", "bitwise_and"], [52, 1, 1, "", "bitwise_not"], [53, 1, 1, "", "bitwise_or"], [54, 1, 1, "", "bitwise_xor"], [55, 1, 1, "", "broadcast_arrays"], [56, 1, 1, "", "broadcast_to"], [57, 1, 1, "", "can_cast"], [58, 1, 1, "", "cbrt"], [59, 1, 1, "", "ceil"], [60, 1, 1, "", "choose"], [61, 1, 1, "", "clip"], [62, 1, 1, "", "column_stack"], [63, 1, 1, "", "concatenate"], [64, 1, 1, "", "conj"], [65, 1, 1, "", "conjugate"], [66, 1, 1, "", "convolve"], [67, 1, 1, "", "copy"], [68, 1, 1, "", "copysign"], [69, 1, 1, "", "copyto"], [70, 1, 1, "", "correlate"], [71, 1, 1, "", "cos"], [72, 1, 1, "", "cosh"], [73, 1, 1, "", "count_nonzero"], [74, 1, 1, "", "cov"], [75, 1, 1, "", "cross"], [76, 1, 1, "", "cumlogsumexp"], [77, 1, 1, "", "cumprod"], [78, 1, 1, "", "cumsum"], [79, 1, 1, "", "deg2rad"], [80, 1, 1, "", "degrees"], [81, 1, 1, "", "diag"], [82, 1, 1, "", "diag_indices"], [83, 1, 1, "", "diag_indices_from"], [84, 1, 1, "", "diagflat"], [85, 1, 1, "", "diagonal"], [86, 1, 1, "", "diff"], [87, 1, 1, "", "digitize"], [88, 1, 1, "", "divide"], [89, 1, 1, "", "dot"], [91, 1, 1, "", "dsplit"], [92, 1, 1, "", "dstack"], [93, 2, 1, "", "dtype"], [94, 1, 1, "", "ediff1d"], [95, 1, 1, "", "einsum"], [96, 1, 1, "", "einsum_path"], [97, 1, 1, "", "empty"], [98, 1, 1, "", "empty_like"], [99, 1, 1, "", "equal"], [100, 1, 1, "", "erf"], [101, 1, 1, "", "exp"], [102, 1, 1, "", "exp2"], [103, 1, 1, "", "expand_dims"], [104, 1, 1, "", "expm1"], [105, 1, 1, "", "extract"], [106, 1, 1, "", "eye"], [107, 1, 1, "", "fabs"], [10, 0, 0, "module-0", "fft"], [126, 1, 1, "", "fill_diagonal"], [127, 1, 1, "", "finfo"], [128, 1, 1, "", "fix"], [129, 2, 1, "", "flatiter"], [130, 1, 1, "", "flatnonzero"], [131, 1, 1, "", "flip"], [132, 1, 1, "", "fliplr"], [133, 1, 1, "", "flipud"], [134, 1, 1, "", "float_power"], [135, 1, 1, "", "floor"], [136, 1, 1, "", "floor_divide"], [137, 1, 1, "", "fmax"], [138, 1, 1, "", "fmin"], [139, 1, 1, "", "fmod"], [140, 1, 1, "", "from_dlpack"], [141, 1, 1, "", "frombuffer"], [142, 1, 1, "", "fromfile"], [143, 1, 1, "", "fromfunction"], [144, 1, 1, "", "fromiter"], [145, 1, 1, "", "fromstring"], [146, 1, 1, "", "full"], [147, 1, 1, "", "full_like"], [148, 1, 1, "", "geomspace"], [149, 1, 1, "", "get_include"], [150, 1, 1, "", "gradient"], [151, 1, 1, "", "greater"], [152, 1, 1, "", "greater_equal"], [153, 1, 1, "", "heaviside"], [154, 1, 1, "", "histogram"], [155, 1, 1, "", "histogram_bin_edges"], [156, 1, 1, "", "hsplit"], [157, 1, 1, "", "hstack"], [158, 1, 1, "", "hypot"], [159, 1, 1, "", "identity"], [160, 1, 1, "", "iinfo"], [161, 1, 1, "", "imag"], [162, 1, 1, "", "indices"], [163, 1, 1, "", "inner"], [164, 1, 1, "", "invert"], [165, 1, 1, "", "isclose"], [166, 1, 1, "", "iscomplex"], [167, 1, 1, "", "iscomplexobj"], [168, 1, 1, "", "isfinite"], [169, 1, 1, "", "isinf"], [170, 1, 1, "", "isnan"], [171, 1, 1, "", "isneginf"], [172, 1, 1, "", "isposinf"], [173, 1, 1, "", "isreal"], [174, 1, 1, "", "isrealobj"], [175, 1, 1, "", "isscalar"], [176, 1, 1, "", "issubdtype"], [177, 1, 1, "", "ix_"], [178, 1, 1, "", "kron"], [179, 1, 1, "", "left_shift"], [180, 1, 1, "", "less"], [181, 1, 1, "", "less_equal"], [202, 1, 1, "", "linspace"], [203, 1, 1, "", "loadtxt"], [204, 1, 1, "", "log"], [205, 1, 1, "", "log10"], [206, 1, 1, "", "log1p"], [207, 1, 1, "", "log2"], [208, 1, 1, "", "logaddexp"], [209, 1, 1, "", "logaddexp2"], [210, 1, 1, "", "logical_and"], [211, 1, 1, "", "logical_not"], [212, 1, 1, "", "logical_or"], [213, 1, 1, "", "logical_xor"], [214, 1, 1, "", "logspace"], [215, 1, 1, "", "logsumexp"], [216, 1, 1, "", "mask_indices"], [217, 1, 1, "", "matmul"], [218, 1, 1, "", "max"], [219, 1, 1, "", "maximum"], [220, 1, 1, "", "mean"], [221, 1, 1, "", "median"], [222, 1, 1, "", "meshgrid"], [223, 5, 1, "", "mgrid"], [224, 1, 1, "", "min"], [225, 1, 1, "", "minimum"], [226, 1, 1, "", "mod"], [227, 1, 1, "", "modf"], [228, 1, 1, "", "moveaxis"], [229, 1, 1, "", "multiply"], [230, 1, 1, "", "nan_to_num"], [231, 1, 1, "", "nanargmax"], [232, 1, 1, "", "nanargmin"], [233, 1, 1, "", "nancumprod"], [234, 1, 1, "", "nancumsum"], [235, 1, 1, "", "nanmax"], [236, 1, 1, "", "nanmean"], [237, 1, 1, "", "nanmin"], [238, 1, 1, "", "nanprod"], [239, 1, 1, "", "nanstd"], [240, 1, 1, "", "nansum"], [241, 1, 1, "", "nanvar"], [242, 3, 1, "", "ndarray"], [339, 1, 1, "", "ndim"], [340, 1, 1, "", "negative"], [341, 1, 1, "", "nextafter"], [342, 1, 1, "", "nonzero"], [343, 1, 1, "", "not_equal"], [344, 5, 1, "", "ogrid"], [345, 1, 1, "", "ones"], [346, 1, 1, "", "ones_like"], [347, 1, 1, "", "outer"], [348, 1, 1, "", "partition"], [349, 1, 1, "", "place"], [350, 1, 1, "", "positive"], [351, 1, 1, "", "power"], [352, 1, 1, "", "prod"], [353, 1, 1, "", "proj"], [354, 1, 1, "", "ptp"], [355, 1, 1, "", "put"], [356, 1, 1, "", "put_along_axis"], [357, 1, 1, "", "putmask"], [358, 1, 1, "", "rad2deg"], [359, 1, 1, "", "radians"], [483, 0, 0, "-", "random"], [409, 1, 1, "", "ravel"], [410, 1, 1, "", "real"], [411, 1, 1, "", "real_if_close"], [412, 1, 1, "", "reciprocal"], [413, 1, 1, "", "reduce_hypot"], [414, 1, 1, "", "remainder"], [415, 1, 1, "", "repeat"], [416, 1, 1, "", "reshape"], [417, 1, 1, "", "result_type"], [418, 1, 1, "", "right_shift"], [419, 1, 1, "", "rint"], [420, 1, 1, "", "roll"], [421, 1, 1, "", "rollaxis"], [422, 1, 1, "", "round"], [423, 1, 1, "", "row_stack"], [424, 1, 1, "", "rsqrt"], [425, 1, 1, "", "searchsorted"], [426, 1, 1, "", "select"], [427, 1, 1, "", "shape"], [428, 1, 1, "", "sign"], [429, 1, 1, "", "signbit"], [430, 1, 1, "", "sin"], [431, 1, 1, "", "sinh"], [432, 1, 1, "", "size"], [433, 1, 1, "", "sort"], [434, 1, 1, "", "sort_complex"], [435, 1, 1, "", "split"], [436, 1, 1, "", "sqrt"], [437, 1, 1, "", "square"], [438, 1, 1, "", "squeeze"], [439, 1, 1, "", "stack"], [440, 1, 1, "", "std"], [441, 1, 1, "", "subtract"], [442, 1, 1, "", "sum"], [443, 1, 1, "", "swapaxes"], [444, 1, 1, "", "take"], [445, 1, 1, "", "take_along_axis"], [446, 1, 1, "", "tan"], [447, 1, 1, "", "tanh"], [448, 1, 1, "", "tensordot"], [449, 1, 1, "", "tile"], [450, 1, 1, "", "trace"], [451, 1, 1, "", "transpose"], [452, 1, 1, "", "trapezoid"], [453, 1, 1, "", "tri"], [454, 1, 1, "", "tril"], [455, 1, 1, "", "tril_indices"], [456, 1, 1, "", "tril_indices_from"], [457, 1, 1, "", "trim_zeros"], [458, 1, 1, "", "triu"], [459, 1, 1, "", "triu_indices"], [460, 1, 1, "", "triu_indices_from"], [461, 1, 1, "", "true_divide"], [462, 1, 1, "", "trunc"], [463, 1, 1, "", "unique"], [464, 1, 1, "", "unwrap"], [465, 1, 1, "", "vander"], [466, 1, 1, "", "var"], [467, 1, 1, "", "vdot"], [468, 1, 1, "", "vsplit"], [469, 1, 1, "", "vstack"], [470, 1, 1, "", "where"], [471, 1, 1, "", "zeros"], [472, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[90, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[90, 3, 1, "", "T"], [90, 4, 1, "", "__eq__"], [90, 4, 1, "", "__ge__"], [90, 4, 1, "", "__getitem__"], [90, 4, 1, "", "__gt__"], [90, 4, 1, "", "__le__"], [90, 4, 1, "", "__len__"], [90, 4, 1, "", "__lt__"], [90, 4, 1, "", "__ne__"], [90, 4, 1, "", "__setitem__"], [90, 4, 1, "", "all"], [90, 4, 1, "", "any"], [90, 4, 1, "", "argmax"], [90, 4, 1, "", "argmin"], [90, 4, 1, "", "argsort"], [90, 4, 1, "", "asnumpy"], [90, 4, 1, "", "astype"], [90, 4, 1, "", "choose"], [90, 4, 1, "", "clip"], [90, 4, 1, "", "conj"], [90, 4, 1, "", "conjugate"], [90, 4, 1, "", "copy"], [90, 4, 1, "", "cumprod"], [90, 4, 1, "", "cumsum"], [90, 3, 1, "", "device"], [90, 4, 1, "", "diagonal"], [90, 4, 1, "", "dot"], [90, 3, 1, "", "dtype"], [90, 4, 1, "", "fill"], [90, 3, 1, "", "flags"], [90, 3, 1, "", "flat"], [90, 4, 1, "", "flatten"], [90, 4, 1, "", "get_array"], [90, 3, 1, "", "imag"], [90, 4, 1, "", "item"], [90, 3, 1, "", "itemsize"], [90, 4, 1, "", "max"], [90, 4, 1, "", "mean"], [90, 4, 1, "", "min"], [90, 3, 1, "", "nbytes"], [90, 3, 1, "", "ndim"], [90, 4, 1, "", "nonzero"], [90, 4, 1, "", "partition"], [90, 4, 1, "", "prod"], [90, 4, 1, "", "put"], [90, 4, 1, "", "ravel"], [90, 3, 1, "", "real"], [90, 4, 1, "", "repeat"], [90, 4, 1, "", "reshape"], [90, 4, 1, "", "round"], [90, 4, 1, "", "searchsorted"], [90, 3, 1, "", "shape"], [90, 3, 1, "", "size"], [90, 4, 1, "", "sort"], [90, 4, 1, "", "squeeze"], [90, 4, 1, "", "std"], [90, 3, 1, "", "strides"], [90, 4, 1, "", "sum"], [90, 4, 1, "", "swapaxes"], [90, 3, 1, "", "sycl_context"], [90, 3, 1, "", "sycl_device"], [90, 3, 1, "", "sycl_queue"], [90, 4, 1, "", "take"], [90, 4, 1, "", "to_device"], [90, 4, 1, "", "trace"], [90, 4, 1, "", "transpose"], [90, 3, 1, "", "usm_type"], [90, 4, 1, "", "var"]], "dpnp.dtype": [[93, 4, 1, "", "__eq__"], [93, 4, 1, "", "__ge__"], [93, 4, 1, "", "__getitem__"], [93, 4, 1, "", "__gt__"], [93, 4, 1, "", "__le__"], [93, 4, 1, "", "__len__"], [93, 4, 1, "", "__lt__"], [93, 4, 1, "", "__ne__"], [93, 3, 1, "", "alignment"], [93, 3, 1, "", "base"], [93, 3, 1, "", "byteorder"], [93, 3, 1, "", "char"], [93, 3, 1, "", "descr"], [93, 3, 1, "", "fields"], [93, 3, 1, "", "flags"], [93, 3, 1, "", "hasobject"], [93, 3, 1, "", "isalignedstruct"], [93, 3, 1, "", "isbuiltin"], [93, 3, 1, "", "isnative"], [93, 3, 1, "", "itemsize"], [93, 3, 1, "", "kind"], [93, 3, 1, "", "metadata"], [93, 3, 1, "", "name"], [93, 3, 1, "", "names"], [93, 3, 1, "", "ndim"], [93, 4, 1, "", "newbyteorder"], [93, 3, 1, "", "num"], [93, 3, 1, "", "shape"], [93, 3, 1, "", "str"], [93, 3, 1, "", "subdtype"], [93, 3, 1, "", "type"]], "dpnp.fft": [[108, 1, 1, "", "fft"], [109, 1, 1, "", "fft2"], [110, 1, 1, "", "fftfreq"], [111, 1, 1, "", "fftn"], [112, 1, 1, "", "fftshift"], [113, 1, 1, "", "hfft"], [114, 1, 1, "", "ifft"], [115, 1, 1, "", "ifft2"], [116, 1, 1, "", "ifftn"], [117, 1, 1, "", "ifftshift"], [118, 1, 1, "", "ihfft"], [119, 1, 1, "", "irfft"], [120, 1, 1, "", "irfft2"], [121, 1, 1, "", "irfftn"], [122, 1, 1, "", "rfft"], [123, 1, 1, "", "rfft2"], [124, 1, 1, "", "rfftfreq"], [125, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[129, 4, 1, "", "__eq__"], [129, 4, 1, "", "__ge__"], [129, 4, 1, "", "__getitem__"], [129, 4, 1, "", "__gt__"], [129, 4, 1, "", "__iter__"], [129, 4, 1, "", "__le__"], [129, 4, 1, "", "__lt__"], [129, 4, 1, "", "__ne__"], [129, 4, 1, "", "__next__"], [129, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[182, 1, 1, "", "cholesky"], [183, 1, 1, "", "cond"], [184, 1, 1, "", "det"], [185, 1, 1, "", "eig"], [186, 1, 1, "", "eigh"], [187, 1, 1, "", "eigvals"], [188, 1, 1, "", "eigvalsh"], [189, 1, 1, "", "inv"], [190, 1, 1, "", "lstsq"], [191, 1, 1, "", "matrix_power"], [192, 1, 1, "", "matrix_rank"], [193, 1, 1, "", "multi_dot"], [194, 1, 1, "", "norm"], [195, 1, 1, "", "pinv"], [196, 1, 1, "", "qr"], [197, 1, 1, "", "slogdet"], [198, 1, 1, "", "solve"], [199, 1, 1, "", "svd"], [200, 1, 1, "", "tensorinv"], [201, 1, 1, "", "tensorsolve"]], "dpnp.ndarray": [[243, 6, 1, "", "T"], [244, 4, 1, "", "__abs__"], [245, 4, 1, "", "__add__"], [246, 4, 1, "", "__and__"], [247, 4, 1, "", "__bool__"], [248, 4, 1, "", "__complex__"], [249, 4, 1, "", "__copy__"], [250, 4, 1, "", "__eq__"], [251, 4, 1, "", "__float__"], [252, 4, 1, "", "__floordiv__"], [253, 4, 1, "", "__ge__"], [254, 4, 1, "", "__getitem__"], [255, 4, 1, "", "__gt__"], [256, 4, 1, "", "__iadd__"], [257, 4, 1, "", "__iand__"], [258, 4, 1, "", "__ifloordiv__"], [259, 4, 1, "", "__ilshift__"], [260, 4, 1, "", "__imod__"], [261, 4, 1, "", "__imul__"], [262, 4, 1, "", "__int__"], [263, 4, 1, "", "__invert__"], [264, 4, 1, "", "__ior__"], [265, 4, 1, "", "__ipow__"], [266, 4, 1, "", "__irshift__"], [267, 4, 1, "", "__isub__"], [268, 4, 1, "", "__itruediv__"], [269, 4, 1, "", "__ixor__"], [270, 4, 1, "", "__le__"], [271, 4, 1, "", "__len__"], [272, 4, 1, "", "__lshift__"], [273, 4, 1, "", "__lt__"], [274, 4, 1, "", "__matmul__"], [275, 4, 1, "", "__mod__"], [276, 4, 1, "", "__mul__"], [277, 4, 1, "", "__ne__"], [278, 4, 1, "", "__neg__"], [279, 4, 1, "", "__new__"], [280, 4, 1, "", "__or__"], [281, 4, 1, "", "__pos__"], [282, 4, 1, "", "__pow__"], [283, 4, 1, "", "__repr__"], [284, 4, 1, "", "__rshift__"], [285, 4, 1, "", "__setitem__"], [286, 4, 1, "", "__str__"], [287, 4, 1, "", "__sub__"], [288, 4, 1, "", "__truediv__"], [289, 4, 1, "", "__xor__"], [290, 4, 1, "", "all"], [291, 4, 1, "", "any"], [292, 4, 1, "", "argmax"], [293, 4, 1, "", "argmin"], [294, 4, 1, "", "argsort"], [295, 4, 1, "", "astype"], [296, 4, 1, "", "choose"], [297, 4, 1, "", "clip"], [298, 4, 1, "", "conj"], [299, 4, 1, "", "conjugate"], [300, 4, 1, "", "copy"], [301, 4, 1, "", "cumprod"], [302, 4, 1, "", "cumsum"], [303, 4, 1, "", "diagonal"], [304, 6, 1, "", "dtype"], [305, 4, 1, "", "fill"], [306, 6, 1, "", "flags"], [307, 6, 1, "", "flat"], [308, 4, 1, "", "flatten"], [309, 6, 1, "", "imag"], [310, 4, 1, "", "item"], [311, 6, 1, "", "itemsize"], [312, 4, 1, "", "max"], [313, 4, 1, "", "mean"], [314, 4, 1, "", "min"], [315, 6, 1, "", "nbytes"], [316, 6, 1, "", "ndim"], [317, 4, 1, "", "nonzero"], [318, 4, 1, "", "partition"], [319, 4, 1, "", "prod"], [320, 4, 1, "", "put"], [321, 4, 1, "", "ravel"], [322, 6, 1, "", "real"], [323, 4, 1, "", "repeat"], [324, 4, 1, "", "reshape"], [325, 4, 1, "", "round"], [326, 4, 1, "", "searchsorted"], [327, 6, 1, "", "shape"], [328, 6, 1, "", "size"], [329, 4, 1, "", "sort"], [330, 4, 1, "", "squeeze"], [331, 4, 1, "", "std"], [332, 6, 1, "", "strides"], [333, 4, 1, "", "sum"], [334, 4, 1, "", "swapaxes"], [335, 4, 1, "", "take"], [336, 4, 1, "", "trace"], [337, 4, 1, "", "transpose"], [338, 4, 1, "", "var"]], "dpnp.random": [[360, 2, 1, "", "RandomState"], [361, 1, 1, "", "beta"], [362, 1, 1, "", "binomial"], [363, 1, 1, "", "bytes"], [364, 1, 1, "", "chisquare"], [365, 1, 1, "", "choice"], [366, 1, 1, "", "dirichlet"], [367, 1, 1, "", "exponential"], [368, 1, 1, "", "f"], [369, 1, 1, "", "gamma"], [370, 1, 1, "", "geometric"], [371, 1, 1, "", "gumbel"], [372, 1, 1, "", "hypergeometric"], [373, 1, 1, "", "laplace"], [374, 1, 1, "", "logistic"], [375, 1, 1, "", "lognormal"], [376, 1, 1, "", "logseries"], [377, 1, 1, "", "multinomial"], [378, 1, 1, "", "multivariate_normal"], [379, 1, 1, "", "negative_binomial"], [380, 1, 1, "", "noncentral_chisquare"], [381, 1, 1, "", "noncentral_f"], [382, 1, 1, "", "normal"], [383, 1, 1, "", "pareto"], [384, 1, 1, "", "permutation"], [385, 1, 1, "", "poisson"], [386, 1, 1, "", "power"], [387, 1, 1, "", "rand"], [388, 1, 1, "", "randint"], [389, 1, 1, "", "randn"], [390, 1, 1, "", "random"], [391, 1, 1, "", "random_integers"], [392, 1, 1, "", "random_sample"], [393, 1, 1, "", "ranf"], [394, 1, 1, "", "rayleigh"], [395, 1, 1, "", "sample"], [396, 1, 1, "", "seed"], [397, 1, 1, "", "shuffle"], [398, 1, 1, "", "standard_cauchy"], [399, 1, 1, "", "standard_exponential"], [400, 1, 1, "", "standard_gamma"], [401, 1, 1, "", "standard_normal"], [402, 1, 1, "", "standard_t"], [403, 1, 1, "", "triangular"], [404, 1, 1, "", "uniform"], [405, 1, 1, "", "vonmises"], [406, 1, 1, "", "wald"], [407, 1, 1, "", "weibull"], [408, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[360, 4, 1, "", "__eq__"], [360, 4, 1, "", "__ge__"], [360, 4, 1, "", "__gt__"], [360, 4, 1, "", "__le__"], [360, 4, 1, "", "__lt__"], [360, 4, 1, "", "__ne__"], [360, 4, 1, "", "get_state"], [360, 4, 1, "", "get_sycl_device"], [360, 4, 1, "", "get_sycl_queue"], [360, 4, 1, "", "normal"], [360, 4, 1, "", "rand"], [360, 4, 1, "", "randint"], [360, 4, 1, "", "randn"], [360, 4, 1, "", "random_sample"], [360, 4, 1, "", "standard_normal"], [360, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 20, 75, 78, 90, 93, 94, 109, 111, 113, 115, 116, 118, 120, 121, 123, 125, 126, 141, 142, 190, 192, 194, 199, 304, 337, 360, 361, 362, 367, 368, 369, 371, 372, 373, 374, 375, 377, 379, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 449, 480], "0": [0, 4, 6, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 57, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 150, 153, 154, 155, 156, 159, 162, 163, 165, 168, 169, 170, 171, 172, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 202, 203, 204, 205, 206, 207, 211, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 300, 303, 305, 309, 310, 322, 325, 327, 329, 331, 336, 337, 338, 339, 342, 344, 345, 346, 349, 351, 352, 353, 354, 355, 356, 359, 360, 362, 367, 369, 370, 371, 373, 374, 375, 377, 378, 379, 382, 384, 385, 386, 387, 390, 392, 393, 394, 395, 398, 401, 403, 404, 405, 412, 414, 415, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 480], "00": [71, 96, 108, 430], "000": [230, 362], "00000000005e": 104, "00000000e": [108, 230], "000000082740371e": 104, "000000e": [71, 430], "00001e10": [15, 165], "0001e10": 165, "000e": 96, "000j": 230, "002": 230, "00867716": 364, "01": 96, "02": [96, 230], "03": 230, "03088525e": 97, "0396842": 214, "04": 96, "04719755": 359, "04921661": 360, "05": [15, 96, 165], "0614962j": [109, 123], "06310682": 360, "07": 230, "07944154": [76, 197], "08": [15, 71, 96, 134, 165, 378, 430], "08156915": 360, "0943951": 359, "09640474": 209, "09861229": [76, 197, 206], "0d": 32, "0dev0": 6, "0j": [18, 89, 90, 166, 167, 173, 174, 217, 309, 322, 428], "0th": 448, "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 166, 167, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 294, 295, 300, 303, 305, 308, 309, 310, 316, 318, 322, 327, 329, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 362, 364, 365, 367, 369, 371, 373, 374, 375, 377, 378, 379, 382, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 399, 401, 404, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 480], "10": [0, 4, 13, 23, 25, 29, 30, 49, 61, 67, 76, 77, 78, 82, 83, 86, 87, 90, 91, 93, 95, 96, 104, 105, 112, 124, 146, 148, 154, 155, 156, 161, 165, 177, 178, 179, 204, 205, 206, 207, 214, 215, 221, 229, 324, 354, 356, 360, 362, 372, 384, 413, 417, 418, 420, 422, 425, 435, 439, 445, 454, 455, 456, 458, 459, 460, 468, 470], "100": [82, 124, 148, 165, 178, 193, 214, 372, 398, 411, 464], "1000": [57, 148, 193, 214, 361, 362, 367, 369, 371, 372, 373, 374, 375, 382, 383, 386, 388, 390, 393, 395, 401, 405, 406, 407, 408, 411, 452], "10000": [78, 193, 370, 385, 394, 404], "100000": 379, "1000000": [398, 400, 402, 403], "1024": 0, "105": 96, "11": [29, 30, 49, 72, 82, 83, 90, 91, 105, 150, 156, 194, 324, 379, 388, 422, 425, 431, 454, 455, 456, 458, 459, 460, 468, 470], "110": [95, 163], "111111": 230, "113": 208, "11570901": 360, "1179187": 360, "118033988749895": 440, "119": 95, "1196081": 360, "12": [10, 29, 30, 48, 75, 80, 82, 83, 87, 91, 93, 95, 105, 109, 123, 156, 161, 214, 352, 354, 359, 384, 425, 454, 455, 456, 458, 459, 460, 468, 470], "120": [77, 80], "123": [90, 96, 310], "125": [134, 351, 465], "127": 148, "128": [0, 148, 230], "12th": 95, "13": [10, 29, 30, 52, 82, 83, 89, 91, 93, 95, 156, 164, 217, 425, 455, 456, 459, 460, 468], "130": 95, "134": 163, "13436424": 360, "135": 27, "13710533": 364, "139884456208480": 14, "13j": 411, "14": [29, 30, 51, 52, 82, 83, 89, 91, 128, 156, 163, 164, 425, 448, 455, 456, 459, 460, 468], "140": 464, "140053638309840": 19, "14157194": 452, "14159265": [22, 27, 79, 359], "14423775e": 108, "14j": 411, "15": [29, 30, 78, 82, 83, 87, 91, 95, 113, 118, 156, 195, 205, 384, 425, 455, 456, 459, 460, 468], "150": 80, "15888336": 214, "15j": 411, "16": [6, 51, 82, 83, 91, 93, 108, 134, 144, 148, 150, 156, 229, 351, 411, 426, 446, 455, 456, 459, 460, 468], "16227766": [183, 413], "16394577": 360, "164": 209, "166": 209, "169": 6, "16j": 108, "17": [108, 109, 123], "17157288": [186, 188], "17281316e": 108, "177": [148, 214], "17j": 108, "18": [6, 77, 93, 94, 95, 111, 194, 214], "180": [27, 79, 80, 95, 358, 464, 488], "1805": 10, "18236388": 360, "18557831": 360, "1887902": 359, "19": [10, 73, 93, 464], "1923875335537315": 389, "19245009": 424, "1924881e": 134, "1965": 10, "19722458": 76, "1d": [94, 355, 356, 445, 452], "1e": [15, 104, 165, 185, 195, 205, 206, 208, 209, 378], "1e10": [15, 165], "1j": [11, 12, 18, 35, 64, 65, 90, 119, 161, 166, 173, 185, 199, 309, 322, 410, 434, 437], "1th": 448, "2": [0, 3, 4, 10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 51, 53, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 166, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 295, 300, 303, 305, 308, 310, 316, 318, 327, 328, 337, 339, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 358, 359, 360, 364, 368, 372, 378, 384, 387, 389, 400, 402, 403, 406, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "20": [6, 77, 87, 95, 124, 162, 165, 178, 179, 194, 356, 362, 377, 425, 445, 464], "20000": 362, "2007": 10, "200e": 96, "20477401j": [109, 123], "2048": 0, "21": [78, 93], "210": 80, "215": 214, "21941987": 360, "21968665": 360, "22": 355, "220": 464, "220446049250313e": 411, "222222": 230, "22460635e": 446, "22464680e": 108, "22497216": 194, "22776602": 214, "23": [6, 360], "230": 95, "23598776": 359, "23606798": 194, "24": [29, 30, 75, 77, 90, 94, 95, 163, 178, 200, 327, 352, 448, 450], "240": 80, "24264069": 194, "24544512": 360, "247219128924647": 239, "25": [93, 95, 100, 110, 150, 154, 155, 189, 202, 229, 241, 389, 398, 426, 465, 466], "255": [51, 53], "25506903": 360, "256": [0, 148], "26": [54, 95], "260": 464, "262": 6, "26618007j": 207, "27": [58, 134, 214, 351, 424, 465], "270": 80, "28": 95, "28000000e": 230, "2800000e": 230, "283185307179586": 464, "28318531": 464, "28352814": 360, "28904982": 209, "297": 10, "299": 6, "2d": [199, 217, 463], "2e": 78, "2f": 0, "2j": [64, 65, 89, 108, 161, 166, 173, 186, 188, 217, 410, 428, 434, 467], "2k": 464, "3": [0, 3, 4, 13, 20, 21, 22, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 54, 55, 56, 58, 61, 62, 63, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 110, 111, 112, 113, 117, 118, 120, 121, 124, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 148, 150, 154, 155, 156, 157, 158, 159, 161, 162, 163, 166, 167, 173, 174, 175, 177, 178, 179, 183, 184, 185, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 300, 303, 308, 310, 316, 318, 327, 328, 329, 337, 339, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 355, 359, 360, 364, 368, 375, 378, 384, 387, 388, 389, 399, 403, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 429, 432, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "30": [75, 80, 90, 95, 124, 328, 356, 359, 445, 467], "300": [80, 464], "3003003": 412, "301": 10, "30102999566": 205, "3012989": 431, "30258509": [76, 215], "308": 230, "308j": 230, "31": [54, 148], "312": 97, "316": 214, "32": [93, 95, 148, 238, 240, 448], "33": 412, "330": 80, "333": 193, "33333333": 230, "3333333e": 230, "33340275": 452, "33486982e": 108, "33836967": 360, "340": 464, "34074171": 360, "34132519": 214, "34846923": 194, "34960421": 214, "35": [95, 370], "35106603e": 194, "35355338": 424, "36": 75, "360": 464, "37": 422, "371139e": 71, "38": [163, 362], "380": 464, "38268343": 186, "38268343j": 186, "38629436": 76, "387": 6, "38885": 362, "389056099": [101, 104], "39": 6, "39295758": 360, "397": 6, "3e": [0, 78, 411], "3j": [89, 217, 434], "3rd": [63, 91, 435], "3x3": 216, "3x8000": 399, "4": [0, 13, 14, 20, 21, 29, 30, 32, 34, 35, 37, 46, 48, 49, 51, 53, 55, 61, 62, 63, 66, 69, 71, 73, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 105, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 130, 131, 134, 136, 137, 138, 142, 143, 144, 146, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 166, 173, 177, 178, 181, 184, 189, 191, 192, 194, 197, 200, 201, 202, 207, 210, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 231, 232, 234, 236, 239, 241, 300, 303, 308, 316, 318, 327, 329, 337, 339, 342, 344, 346, 351, 352, 354, 355, 359, 360, 361, 364, 384, 389, 405, 409, 410, 411, 414, 415, 416, 420, 421, 422, 423, 426, 428, 432, 433, 435, 436, 439, 440, 441, 443, 444, 448, 449, 451, 452, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 472], "40": [95, 124, 179, 356, 445], "40882036": 360, "4096": 0, "41421356": [183, 194], "42": 426, "420": 464, "429": 6, "44": [349, 355], "4400": [95, 448], "443469": 214, "44509285e": 108, "45": [18, 27], "4532": [95, 448], "46": 95, "460": 464, "46394577": 360, "464": 214, "4664": [95, 448], "47": 6, "4730": [95, 448], "4796": [95, 448], "48": [6, 75], "48093112": 360, "4874": [95, 448], "48927254": 360, "49": 6, "4928": [95, 448], "49543509": 360, "49778714": 464, "499128": 89, "4d": 199, "4e": 411, "4j": [161, 410, 467], "4x4": [455, 459], "5": [0, 6, 13, 14, 19, 20, 21, 28, 29, 32, 37, 46, 49, 50, 51, 53, 54, 55, 59, 61, 63, 66, 69, 70, 73, 75, 77, 78, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 100, 105, 109, 110, 112, 120, 123, 124, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 148, 150, 153, 154, 155, 156, 157, 158, 161, 162, 163, 166, 173, 177, 178, 179, 182, 186, 188, 189, 193, 194, 198, 202, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 236, 239, 295, 300, 328, 339, 342, 344, 345, 346, 351, 354, 355, 359, 360, 361, 362, 364, 367, 379, 383, 384, 385, 386, 389, 392, 407, 409, 410, 411, 412, 414, 416, 418, 419, 420, 421, 422, 423, 425, 426, 428, 432, 434, 435, 439, 440, 442, 443, 444, 448, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472], "50": [109, 123, 124, 148, 178, 208, 209, 214, 356, 445, 448, 452, 470], "500": [178, 464], "5018": [95, 448], "5091786": 72, "51": 6, "512": 0, "5162": [95, 448], "52069395e": 108, "52359878": 359, "52928804": 360, "5306": [95, 448], "5399045e": 134, "54": 360, "540": 464, "542": 6, "54288406": 360, "54465213": 360, "548739": 431, "54930614": 28, "55": [349, 355, 426], "5555555555555554": 241, "56": 6, "562": 214, "5620499351813308": [11, 12], "56920387": 360, "5707963267948966": 24, "57079633": [18, 27, 359, 464], "58997253": 360, "591953": 72, "5e": [208, 209], "5j": [223, 344, 434], "6": [0, 4, 6, 13, 20, 21, 29, 30, 32, 37, 46, 49, 53, 54, 61, 63, 69, 75, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 99, 104, 105, 110, 113, 124, 131, 134, 147, 150, 156, 157, 161, 162, 163, 177, 178, 194, 195, 196, 199, 200, 202, 214, 216, 233, 234, 238, 300, 310, 327, 339, 342, 346, 349, 351, 354, 360, 377, 379, 384, 389, 409, 410, 416, 420, 421, 422, 423, 426, 432, 434, 435, 439, 441, 442, 443, 444, 448, 450, 452, 454, 455, 456, 458, 459, 460, 461, 463, 464, 467, 468, 469, 470, 472], "60": [75, 80, 95, 356, 445, 448, 464, 470], "600": 178, "60943791": 76, "61799388": 359, "62": 163, "6227766": 148, "62318272": 364, "62341325": 148, "624": 96, "63": 148, "63317787e": 446, "63522211": 360, "63836967": 360, "64": [0, 4, 95, 134, 148, 238, 240, 351, 422], "64000": 95, "65745445": 23, "66519143": 359, "6666666666666665": 236, "67": 95, "67305985": 141, "673174": 360, "67718303": 360, "69295758": 360, "69314718": [76, 197, 206], "6990877": 360, "6j": [161, 410, 467], "7": [13, 15, 20, 21, 37, 46, 59, 61, 69, 73, 75, 78, 81, 82, 83, 85, 86, 88, 90, 91, 94, 101, 105, 131, 135, 148, 150, 156, 163, 165, 177, 178, 194, 199, 216, 221, 226, 229, 310, 342, 353, 354, 360, 384, 410, 414, 417, 419, 420, 435, 441, 442, 443, 444, 448, 454, 455, 456, 458, 459, 460, 461, 462, 464, 467, 468, 470], "70": [178, 467, 470], "700": 178, "700e": 96, "70710677": [90, 309, 322], "70710678": [183, 185], "70710678j": 185, "70882036": 360, "71238898": 359, "718281828": [101, 104], "72": 75, "720": [77, 464], "72075441": 214, "72538256": 25, "74165739": 194, "742278e": 430, "74596669": 194, "74921661": 360, "75": [49, 100, 110, 150, 155, 189, 202], "754": 127, "75958653": 359, "76096244": 360, "76377462": 360, "77447665": 209, "78539816": [18, 26, 27, 464], "78927254": 360, "79175947": 76, "79769313e": 230, "7j": 353, "8": [4, 13, 15, 20, 37, 46, 58, 61, 69, 75, 81, 82, 83, 85, 86, 90, 91, 93, 95, 96, 105, 108, 110, 124, 125, 131, 134, 148, 150, 156, 161, 165, 177, 184, 194, 197, 199, 200, 202, 214, 216, 327, 342, 351, 352, 354, 360, 384, 403, 410, 420, 424, 430, 435, 444, 448, 450, 452, 454, 455, 456, 458, 459, 460, 464, 465, 468, 470], "80": [93, 95, 470], "8000": 399, "80226506": 360, "81715362": 360, "827941": [148, 214], "82842712": [186, 188], "84288406": 360, "84401099": 360, "84743374": 360, "84803548": 194, "85": 95, "86": 163, "87649168": 208, "88": 94, "88178420e": 108, "88997253": 360, "89920014": 364, "8f": 93, "8j": 467, "9": [4, 13, 20, 37, 46, 61, 69, 75, 78, 81, 82, 83, 85, 88, 90, 91, 95, 97, 105, 108, 111, 112, 117, 128, 134, 136, 144, 148, 150, 156, 165, 177, 185, 190, 194, 195, 196, 199, 214, 216, 229, 230, 310, 342, 354, 360, 362, 364, 384, 410, 420, 435, 436, 441, 448, 454, 455, 456, 458, 459, 460, 461, 464, 465, 468, 470], "90": [18, 80, 358, 470], "917152": 447, "92387953": 186, "92387953j": 186, "94": 95, "94591015": 76, "95": 190, "95799250e": 108, "98": 217, "98024613": 214, "99": [94, 206, 356], "99322285": 23, "99532227": 100, "996272": 447, "99822295": 25, "99853728": 100, "999": 96, "9990000e": 230, "99959305": 100, "99989938": 100, "9999": 230, "99997791": 100, "999999e": 165, "A": [10, 11, 12, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 65, 67, 68, 69, 71, 72, 76, 77, 78, 79, 80, 81, 82, 84, 85, 88, 90, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 114, 115, 116, 120, 121, 122, 123, 124, 125, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 158, 159, 161, 162, 164, 168, 169, 170, 171, 172, 179, 180, 181, 182, 186, 187, 188, 190, 192, 193, 196, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 223, 225, 226, 229, 233, 234, 238, 240, 295, 300, 308, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 353, 358, 359, 360, 362, 379, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 409, 412, 414, 418, 419, 424, 428, 429, 430, 431, 435, 436, 437, 441, 443, 444, 446, 447, 448, 449, 451, 453, 455, 457, 459, 461, 462, 465, 470, 471, 472, 488], "AND": [14, 51, 52, 53, 54, 164, 210, 211, 212, 213], "And": [4, 44, 45, 82, 90, 295, 455, 459], "As": 463, "Be": 185, "Being": 3, "But": [4, 93], "By": [29, 30, 40, 45, 75, 90, 109, 113, 115, 119, 121, 125, 148, 190, 202, 214, 217, 218, 220, 224, 231, 232, 235, 236, 237, 238, 239, 240, 241, 295, 409, 415, 420, 432, 440, 444, 453, 455, 457, 459, 466], "For": [0, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 308, 309, 310, 316, 322, 324, 327, 332, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 480, 488], "If": [4, 10, 11, 12, 14, 15, 19, 20, 21, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 49, 61, 63, 73, 75, 76, 77, 78, 81, 85, 86, 89, 90, 93, 94, 95, 96, 103, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 137, 138, 140, 145, 148, 150, 154, 155, 157, 161, 162, 163, 165, 171, 172, 173, 182, 190, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 214, 215, 218, 219, 220, 222, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 329, 349, 352, 355, 356, 360, 382, 404, 410, 411, 413, 415, 416, 420, 422, 423, 425, 433, 435, 438, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 463, 464, 465, 466, 467, 469, 470, 480, 488], "In": [4, 10, 29, 30, 77, 78, 95, 96, 114, 115, 116, 119, 121, 150, 182, 187, 193, 196, 209, 214, 233, 234, 236, 238, 240, 352, 355, 360, 404, 416, 442, 444, 462], "It": [4, 10, 14, 19, 20, 29, 30, 61, 77, 78, 87, 89, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 150, 186, 188, 209, 217, 220, 231, 232, 233, 234, 235, 236, 237, 239, 241, 352, 426, 440, 442, 444, 466, 488], "Its": [61, 200, 356, 450], "NOT": [52, 164, 210, 211, 212, 213], "No": [39, 40, 95, 182], "Not": [14, 19, 40, 168, 230, 233, 234, 235, 237, 238, 240, 352], "OR": [19, 51, 52, 53, 54, 164, 210, 211, 212, 213], "On": 4, "One": [46, 47, 48, 75, 92, 93, 119, 416], "Or": [150, 452], "That": 216, "The": [3, 4, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 51, 52, 53, 54, 56, 58, 61, 62, 63, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 164, 165, 167, 168, 169, 170, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 295, 300, 309, 316, 318, 322, 327, 339, 340, 341, 342, 343, 344, 345, 346, 350, 351, 352, 354, 355, 356, 358, 359, 360, 363, 365, 366, 376, 381, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 409, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 433, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 469, 470, 471, 472, 480, 484, 488], "Then": [10, 41, 43, 216], "There": [10, 202, 463], "These": [4, 20, 93, 95, 96, 103, 216, 228, 356, 445, 455, 459, 480, 484], "To": [4, 113, 119, 121, 134, 342, 464], "With": [29, 30, 49, 73, 156, 194, 218, 224, 231, 232, 238, 240, 352, 442, 468], "_": [0, 155, 439, 452], "__array_interface__": 93, "__bool__": 480, "__dlpack__": 140, "__dlpack_device__": 140, "__eq__": [90, 93, 129, 360], "__ge__": [90, 93, 129, 360], "__getitem__": [90, 93, 129], "__gt__": [90, 93, 129, 360], "__iter__": 129, "__le__": [90, 93, 129, 360], "__len__": [90, 93], "__lt__": [90, 93, 129, 360], "__main__": 0, "__name__": 0, "__ne__": [90, 93, 129, 360], "__next__": 129, "__setitem__": [90, 129], "__sycl_usm_array_interface__": 42, "_dtypes_list": 0, "a1": [35, 36], "a2": [35, 36], "a_": 10, "a_k": 10, "a_m": 10, "a_max": 61, "a_min": 61, "a_resamp": 119, "ab": [6, 10, 12, 15, 165], "abc": 95, "abcd": 96, "about": [41, 43, 90, 127, 185, 306, 480], "abov": [3, 76, 81, 84, 111, 116, 121, 125, 162, 196, 215, 230, 413, 453, 454, 458], "absolut": [6, 11, 15, 18, 107, 165, 197, 239, 241, 353, 411, 440, 464, 466, 488], "accept": [31, 95, 360, 433, 455, 459], "access": [10, 82, 83, 126, 216, 455, 459, 480], "accord": [14, 19, 49, 57, 93, 125, 127, 185, 186, 187, 188, 215, 220, 236, 239, 241, 413, 418, 440, 466], "accordingli": [235, 237], "account": 416, "accumul": [76, 77, 78, 95, 154, 233, 234, 238, 240, 352, 442, 450], "accur": [93, 104, 150, 206, 208], "accuraci": [114, 115, 116, 119, 121], "achiev": 95, "across": [85, 155, 233, 234, 238, 240], "activ": 4, "actual": [93, 154, 155, 182, 193], "ad": [15, 93, 96, 103, 119, 165, 184, 197, 209, 464, 484], "add": [6, 93, 488], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [76, 182, 236, 463], "address": 93, "adjac": 464, "advanc": 95, "advers": 95, "advis": 4, "affect": [21, 85, 95, 126, 154, 155], "after": [92, 126, 341, 379, 420], "ag": 93, "against": [15, 29, 30, 55, 56, 61, 73, 149, 165, 194, 195, 218, 224, 231, 232, 238, 240, 352, 356, 442, 445], "ai": [3, 356, 445], "ai_max": 445, "ai_min": 445, "ainv": [189, 200], "al": 10, "algebra": [473, 484], "algorithm": [10, 95, 96, 108, 114, 122], "alia": [10, 16, 17, 88, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 127, 226, 242, 360, 390, 393, 395, 414, 423, 461, 464, 469], "alias": [9, 113, 114, 119, 121], "align": 93, "all": [4, 6, 9, 15, 18, 19, 20, 35, 36, 40, 45, 49, 62, 73, 80, 86, 90, 92, 93, 95, 96, 101, 102, 104, 106, 111, 112, 116, 117, 120, 121, 125, 126, 131, 132, 133, 141, 142, 144, 148, 150, 157, 159, 161, 177, 182, 192, 195, 202, 214, 218, 224, 231, 232, 235, 237, 295, 298, 305, 318, 352, 362, 410, 411, 420, 423, 426, 438, 442, 463, 469, 480, 488], "allclos": [6, 35, 165, 189, 195, 196, 198, 199, 201], "alloc": [3, 4, 20, 21, 34, 38, 39, 40, 41, 42, 43, 45, 49, 67, 76, 81, 82, 84, 90, 97, 98, 106, 110, 124, 128, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 171, 172, 202, 203, 214, 215, 216, 220, 223, 236, 239, 241, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 413, 438, 440, 453, 455, 459, 465, 466, 471, 472], "allow": [37, 45, 90, 95, 154, 155, 209, 216, 295, 324, 444, 480], "alltru": 6, "almost": [32, 185, 455], "along": [3, 4, 14, 16, 17, 19, 20, 29, 30, 31, 49, 62, 63, 73, 76, 77, 78, 81, 82, 84, 85, 86, 90, 91, 92, 94, 105, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 131, 132, 133, 137, 138, 143, 148, 150, 156, 157, 162, 194, 196, 200, 201, 202, 214, 215, 218, 219, 220, 221, 222, 224, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 292, 293, 294, 301, 302, 312, 314, 319, 320, 328, 331, 333, 335, 336, 338, 349, 352, 354, 355, 356, 413, 415, 420, 421, 423, 426, 432, 433, 435, 439, 440, 442, 444, 445, 448, 449, 450, 452, 455, 456, 459, 460, 463, 464, 466, 468, 469, 480], "alpha": [361, 366, 367, 383, 386], "alreadi": [4, 10, 39, 40, 46, 47, 48, 347, 463], "also": [3, 10, 13, 15, 18, 21, 27, 51, 53, 54, 68, 88, 90, 93, 95, 99, 103, 111, 116, 120, 121, 122, 125, 134, 136, 137, 138, 139, 143, 145, 150, 151, 152, 153, 154, 158, 165, 179, 180, 181, 182, 208, 209, 216, 219, 225, 226, 228, 229, 327, 342, 343, 351, 398, 414, 418, 441, 444, 461, 463, 480], "alter": 85, "altern": [3, 4, 14, 19, 77, 78, 89, 90, 217, 218, 220, 224, 233, 234, 236, 238, 239, 240, 241, 337, 352, 440, 442, 466], "although": [18, 93, 115, 116, 117, 449], "alwai": [4, 10, 31, 38, 45, 85, 90, 91, 94, 107, 134, 140, 156, 186, 188, 239, 241, 295, 342, 416, 434, 440, 466, 468], "amax": [6, 218], "ambigu": 480, "amin": [6, 224], "among": 94, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 174, 177, 179, 180, 181, 184, 187, 190, 192, 193, 194, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 249, 294, 295, 296, 297, 300, 310, 312, 316, 318, 320, 323, 324, 327, 328, 329, 330, 334, 335, 337, 339, 340, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 362, 367, 368, 370, 379, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 480, 488], "anaconda": [3, 4], "analog": [109, 111, 113, 115, 116, 118], "analysi": 10, "analyt": 3, "angl": [6, 10, 26, 27, 79, 80, 161, 358, 359, 410, 411, 464, 488], "ani": [3, 6, 14, 15, 20, 34, 38, 39, 40, 41, 42, 43, 45, 55, 56, 67, 81, 84, 86, 90, 93, 95, 96, 109, 111, 115, 116, 121, 125, 126, 146, 147, 148, 150, 155, 157, 167, 174, 175, 191, 201, 202, 214, 216, 235, 237, 295, 316, 360, 404, 433, 465, 480], "anoth": [4, 69, 90, 105, 115, 116, 140, 300, 320, 349, 355, 421], "answer": 362, "anti": [85, 126], "anyth": 93, "ap": 190, "apart": 452, "api": [0, 2, 3, 6, 21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 93, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472], "appear": [103, 132, 133, 463], "append": [0, 6, 86, 94, 96, 103, 114, 115, 116, 179], "appli": [29, 30, 31, 49, 57, 95, 230, 417, 448, 452], "applic": [10, 93], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [90, 93, 114, 115, 116, 327], "appropri": [4, 29, 30, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 149, 201, 231, 232, 235, 237, 360, 388, 391, 444, 480], "approxim": [127, 452], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 85, 86, 88, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 148, 150, 151, 152, 153, 154, 155, 158, 163, 164, 165, 168, 169, 170, 179, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 317, 318, 327, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 382, 383, 385, 386, 388, 391, 392, 394, 400, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 418, 419, 420, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 452, 456, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 480, 488], "arang": [0, 6, 13, 29, 30, 32, 37, 46, 47, 48, 49, 50, 61, 68, 80, 81, 82, 83, 85, 88, 89, 90, 91, 95, 99, 101, 102, 104, 105, 108, 130, 131, 134, 139, 147, 148, 150, 154, 156, 162, 163, 177, 178, 194, 202, 205, 206, 210, 211, 212, 213, 214, 216, 217, 218, 222, 224, 226, 229, 303, 343, 346, 349, 351, 355, 359, 384, 414, 417, 420, 426, 435, 441, 448, 450, 452, 455, 456, 459, 460, 461, 468, 470, 472], "arbitrari": [44, 89, 93, 95, 163, 217, 417, 455, 459], "arbitrarili": 95, "arc": [18, 26], "arcco": [6, 23, 24, 26, 27, 71], "arccosh": [6, 22, 25, 28, 72], "arcsin": [6, 22, 25, 26, 27, 430], "arcsinh": [6, 23, 24, 28, 431], "arctan": [6, 18, 22, 24, 27, 28, 446], "arctan2": [6, 18, 26], "arctanh": [6, 23, 25, 26, 27, 447], "area": 452, "arg": [55, 177, 360], "arg1": 176, "arg2": 176, "argmax": [0, 6, 30, 90, 231, 356, 445, 480], "argmin": [6, 29, 90, 232, 445, 480], "argpartit": [6, 31, 356, 445, 480], "argsort": [6, 90, 356, 425, 433, 445, 451, 480], "argument": [0, 10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 51, 52, 53, 54, 57, 58, 59, 61, 63, 68, 71, 72, 79, 80, 88, 89, 90, 93, 96, 100, 101, 102, 104, 134, 135, 136, 137, 138, 139, 153, 158, 161, 164, 175, 176, 179, 193, 194, 205, 206, 207, 208, 209, 216, 217, 219, 225, 226, 227, 229, 324, 337, 340, 341, 350, 351, 353, 355, 358, 359, 410, 411, 412, 414, 417, 418, 419, 424, 428, 429, 430, 431, 439, 441, 446, 447, 448, 452, 461, 462, 480, 488], "argwher": [6, 342], "ari": [37, 46, 47, 48, 91, 94, 156, 435, 468], "arithmet": [49, 148, 220, 221, 236, 239, 241, 350, 440, 442, 466, 473, 484], "around": [6, 90, 148, 355, 422], "arr": [20, 40, 83, 93, 155, 357, 384, 456, 460], "arr2": 93, "arr_t": [45, 90, 295], "arrai": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 249, 292, 293, 294, 295, 296, 297, 300, 303, 304, 305, 306, 308, 309, 310, 311, 313, 315, 316, 318, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 484, 488], "array2str": 6, "array_equ": 6, "array_equiv": [6, 35], "array_lik": [20, 34, 38, 39, 40, 41, 42, 43, 44, 49, 67, 69, 81, 84, 94, 105, 146, 147, 148, 167, 174, 202, 214, 339, 349, 355, 356, 360, 427, 432, 444, 448, 465], "array_of_diagon": 85, "array_repr": 6, "array_split": [6, 63, 435], "array_str": 6, "arrays_and_dtyp": 417, "art": 10, "asanyarrai": [6, 39, 40, 43], "asarrai": [4, 6, 38, 40, 41, 43, 44, 339, 432], "asarray_chkfinit": [6, 38, 39], "ascend": [186, 188, 425], "ascii": 93, "ascontiguousarrai": [6, 38, 39, 40, 43], "asfarrai": [6, 38, 39], "asfortranarrai": [6, 38, 39, 40, 41], "asmatrix": 6, "asnumpi": 90, "aspect": 93, "assembl": [63, 92, 157, 423, 439, 469], "assign": [90, 305, 327, 455, 459], "associ": [49, 154, 155, 480], "assum": [10, 49, 96, 113, 119, 121, 192, 195, 199, 216, 452], "astyp": [6, 90, 148, 342], "atleast_1d": [6, 47, 48, 103], "atleast_2d": [6, 46, 48, 103], "atleast_3d": [6, 46, 47, 103], "atol": [15, 165], "attain": 0, "attempt": [89, 193], "attribut": [90, 93, 98, 127, 147, 160, 196, 346, 472, 473], "automat": [154, 155], "avail": [2, 3, 4, 10, 70, 74, 93, 100, 221, 227, 231, 232, 235, 237, 238, 473, 480], "averag": [6, 90, 220, 236, 313, 442, 484], "avg": 49, "avoid": [34, 39, 47, 48, 113, 119, 121], "aweight": 74, "ax": [14, 19, 29, 30, 49, 73, 76, 86, 89, 90, 95, 103, 109, 111, 112, 115, 116, 117, 120, 121, 123, 125, 131, 150, 163, 194, 198, 200, 201, 215, 217, 218, 220, 224, 228, 231, 232, 235, 236, 237, 238, 239, 240, 241, 334, 337, 347, 352, 413, 420, 421, 438, 440, 442, 443, 448, 449, 450, 451, 463, 466], "axi": [14, 16, 17, 19, 20, 29, 30, 31, 37, 49, 62, 63, 73, 75, 76, 77, 78, 85, 86, 90, 91, 92, 94, 95, 103, 105, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 131, 132, 133, 137, 138, 143, 148, 150, 156, 157, 162, 190, 194, 202, 214, 215, 217, 218, 219, 220, 221, 224, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 290, 291, 292, 293, 294, 301, 302, 308, 312, 313, 314, 318, 319, 320, 323, 328, 329, 330, 331, 333, 335, 337, 338, 348, 349, 352, 354, 355, 356, 409, 413, 415, 416, 420, 421, 423, 426, 432, 433, 435, 438, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 463, 464, 466, 468, 469, 480], "axis1": [85, 90, 303, 334, 336, 443, 450], "axis2": [85, 90, 303, 334, 336, 443, 450], "axisa": 75, "axisb": 75, "axisc": 75, "axiserror": [31, 433], "b": [10, 13, 15, 20, 29, 30, 35, 36, 51, 54, 62, 63, 69, 75, 78, 89, 90, 92, 93, 95, 96, 99, 141, 142, 151, 152, 157, 163, 165, 178, 180, 181, 184, 190, 193, 194, 195, 197, 198, 199, 200, 201, 210, 212, 217, 218, 224, 341, 343, 347, 351, 361, 417, 423, 439, 448, 449, 457, 467, 469, 488], "back": [90, 143, 308, 409, 416, 421, 457], "backend": [2, 149, 363, 365, 366, 376, 381, 397], "backward": [10, 45, 90, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 150, 295, 420, 421], "bad": 372, "bartlett": 6, "base": [0, 4, 93, 95, 102, 105, 134, 148, 154, 155, 199, 204, 205, 206, 207, 208, 209, 214, 215, 217, 349, 351, 355, 357], "base_repr": 6, "basic": [57, 95, 480, 484], "bc": [184, 197], "bcde": 96, "becaus": [10, 14, 19, 113, 119, 121, 464, 480], "becom": [10, 90, 154, 337], "been": [92, 356, 421, 445], "befor": [4, 20, 31, 63, 76, 90, 94, 114, 115, 116, 132, 133, 201, 215, 218, 224, 239, 241, 318, 329, 352, 413, 420, 421, 433, 440, 442, 449, 466, 467], "begin": [94, 96, 148, 202, 214, 426], "behav": [203, 355], "behavior": [90, 123, 300, 449], "behaviour": 230, "behind": [90, 318], "being": [3, 93, 137, 138, 219, 225], "belong": [87, 154], "below": [0, 4, 9, 81, 84, 93, 119, 192, 453, 454, 458, 464, 480], "best": 96, "beta": [6, 371], "between": [15, 21, 37, 57, 86, 94, 127, 142, 145, 150, 163, 165, 202, 214, 377, 391, 441, 452, 464], "beyond": [4, 420], "bia": 74, "big": 93, "bin": [87, 108, 110, 124, 154, 155, 398], "bin_edg": [154, 155], "binari": [51, 53, 54, 141, 142, 144, 145, 473, 484], "binary_repr": 6, "bincount": [6, 87, 154], "binomi": [6, 379], "bins_0": 155, "bins_1": 155, "bit": [51, 52, 53, 54, 93, 127, 160, 164, 179, 210, 212, 213, 238, 240, 418, 429, 484], "bitwis": [51, 53, 54], "bitwise_and": [6, 52, 53, 54, 164, 210], "bitwise_not": 6, "bitwise_or": [6, 51, 52, 54, 164, 212], "bitwise_xor": [6, 51, 52, 53, 164, 213], "biufcmmosuv": 93, "blackman": 6, "block": [6, 63, 92, 126, 157, 178, 423, 439, 469], "bmat": 6, "bool": [9, 14, 15, 19, 29, 30, 34, 35, 36, 39, 42, 45, 49, 57, 69, 73, 76, 87, 90, 93, 96, 99, 126, 140, 148, 151, 152, 154, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 192, 194, 195, 199, 202, 214, 215, 218, 220, 222, 224, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 295, 342, 343, 352, 413, 416, 426, 429, 440, 442, 444, 463, 465, 466, 480], "bool_": 9, "boolean": [51, 52, 53, 54, 69, 76, 93, 105, 134, 140, 162, 164, 165, 168, 169, 170, 171, 172, 173, 177, 210, 212, 215, 216, 220, 236, 238, 239, 241, 342, 349, 413, 416, 440, 444, 466], "boolean_sequ": 177, "both": [10, 13, 15, 20, 27, 35, 36, 49, 51, 53, 54, 61, 68, 75, 88, 89, 99, 115, 122, 134, 136, 137, 138, 139, 151, 152, 153, 158, 163, 165, 178, 179, 180, 181, 194, 208, 209, 210, 212, 213, 217, 219, 225, 226, 229, 240, 341, 343, 351, 414, 418, 441, 448, 450, 455, 457, 459, 461, 467, 470], "bound": [355, 425, 444, 445], "boundari": [150, 355], "briefli": 480, "broadcast": [13, 14, 19, 29, 30, 36, 49, 55, 56, 61, 69, 73, 88, 95, 105, 134, 137, 138, 158, 171, 172, 194, 195, 213, 215, 217, 218, 219, 220, 224, 225, 229, 231, 232, 236, 238, 239, 240, 241, 351, 352, 355, 356, 413, 415, 440, 441, 442, 445, 449, 461, 466, 470], "broadcast_arrai": [6, 56], "broadcast_shap": 6, "broadcast_to": [6, 55, 449], "brought": 10, "buffer": [42, 77, 78, 90, 140, 141, 142, 144, 145, 203, 218, 224, 233, 234, 416], "buffer_lik": 141, "buffererror": 140, "build": 484, "build_loc": 4, "built": 93, "busday_count": 6, "busday_offset": 6, "byte": [6, 45, 90, 93, 95, 141, 142, 203, 295, 311, 315], "byte_bound": 6, "byteord": 93, "byteswap": 6, "bz2": 203, "c": [2, 4, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 58, 59, 61, 64, 65, 67, 68, 71, 72, 75, 79, 80, 88, 89, 90, 93, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 128, 134, 135, 136, 137, 138, 139, 146, 147, 149, 151, 152, 153, 158, 161, 163, 164, 168, 169, 170, 178, 179, 180, 181, 184, 190, 193, 194, 197, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 225, 226, 229, 295, 300, 308, 321, 340, 341, 342, 343, 345, 346, 350, 351, 353, 358, 359, 409, 412, 414, 416, 418, 419, 424, 428, 429, 430, 431, 436, 437, 441, 446, 447, 448, 449, 461, 462, 463, 470, 471, 472, 488], "c_contigu": [41, 43, 90, 300], "ca": 66, "calcul": [10, 11, 12, 13, 18, 27, 49, 76, 78, 86, 88, 94, 95, 99, 101, 102, 104, 108, 117, 134, 135, 136, 139, 150, 155, 158, 185, 186, 187, 188, 190, 195, 206, 208, 209, 215, 217, 220, 226, 229, 236, 239, 241, 343, 351, 352, 413, 414, 440, 441, 461, 466, 467, 473, 488], "call": [10, 18, 20, 29, 30, 31, 41, 43, 93, 114, 115, 116, 119, 122, 143, 185, 187, 193, 216, 249, 342, 438, 444, 449, 452, 488], "callabl": [143, 216], "cambridg": 10, "can": [0, 3, 4, 10, 13, 15, 20, 21, 27, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 51, 52, 53, 54, 57, 67, 68, 75, 81, 82, 84, 85, 88, 89, 90, 93, 95, 96, 97, 98, 99, 106, 108, 109, 110, 111, 114, 115, 116, 119, 120, 121, 124, 126, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 159, 162, 163, 164, 165, 167, 174, 175, 177, 178, 179, 180, 181, 182, 189, 190, 191, 201, 202, 203, 208, 209, 210, 212, 213, 214, 216, 217, 219, 223, 225, 226, 229, 238, 240, 295, 300, 327, 329, 340, 341, 342, 343, 344, 345, 346, 350, 351, 356, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 414, 416, 418, 433, 441, 444, 445, 448, 450, 452, 453, 455, 459, 460, 461, 463, 465, 467, 470, 471, 472, 480, 488], "can_cast": [6, 484], "cannot": [63, 231, 232, 435, 438, 439], "capabl": [21, 34, 38, 39, 41, 43, 49, 107, 148, 202, 214, 217], "care": [21, 185], "cartesian": 222, "case": [4, 14, 19, 21, 29, 30, 34, 38, 39, 40, 41, 43, 49, 67, 77, 78, 81, 84, 86, 95, 96, 97, 98, 106, 110, 113, 118, 122, 124, 141, 142, 143, 144, 146, 147, 148, 150, 159, 185, 196, 199, 202, 203, 209, 214, 223, 233, 234, 238, 240, 344, 345, 346, 352, 416, 442, 448, 453, 464, 465, 471, 472, 480], "cast": [14, 19, 45, 57, 63, 69, 76, 77, 78, 90, 95, 134, 157, 185, 215, 217, 220, 230, 233, 234, 236, 238, 239, 240, 241, 295, 352, 413, 423, 439, 440, 442, 466, 469], "cat": [362, 379], "cauchi": 398, "cbrt": [6, 436], "cdef": 96, "cdot": 448, "cdoubl": 9, "ceil": [6, 33, 128, 135, 136, 419, 422, 462], "center": [109, 110, 111, 112, 116, 117, 124], "central": [150, 380, 381], "certain": [93, 216], "ch": 10, "chain": [89, 90, 95, 96], "chang": [45, 67, 75, 90, 93, 95, 105, 233, 234, 295, 308, 332, 337, 340, 349, 350, 355, 356, 357, 409, 416, 421, 464, 484], "char": 93, "charact": [93, 142], "check": [14, 19, 38, 39, 40, 57, 113, 167, 174, 182, 195, 198], "check_valid": 378, "chi": [364, 380], "chisquar": 6, "choic": [6, 60, 90, 108, 109, 111, 114, 115, 116, 120, 121, 123, 125, 186, 188, 296], "choicelist": 426, "choleski": 6, "choos": [6, 18, 26, 90, 96, 426, 470, 480], "chosen": [32, 154, 463, 470], "circ": 488, "circl": [197, 452], "clamp": [355, 444, 445], "clariti": 126, "class": [3, 90, 93, 129, 141, 142, 143, 145, 162, 203, 360, 388, 453, 484], "classic": 95, "clear": [93, 480], "clip": [6, 90, 355, 444, 445, 480], "close": [18, 22, 23, 24, 26, 44, 45, 90, 95, 103, 161, 202, 295, 360, 388, 410, 411, 419, 422, 452], "closer": 462, "cloud": 3, "cmake": 4, "co": [6, 22, 72, 187, 430, 446, 452], "code": [42, 93, 176], "coeffici": [190, 198, 201], "coerc": [42, 141, 142, 143, 144, 145, 203], "coin": 362, "col": 162, "collaps": [90, 308, 463], "column": [6, 38, 39, 40, 41, 43, 44, 45, 62, 63, 77, 78, 85, 90, 92, 106, 126, 132, 133, 150, 156, 157, 159, 185, 186, 190, 193, 196, 199, 295, 409, 423, 435, 439, 453, 455, 459, 465, 469], "column_stack": [6, 63, 92, 157, 423, 439, 469], "com": 4, "combin": [0, 93, 103, 111, 116, 121, 125, 150], "combinatori": 96, "come": 463, "comma": [93, 95], "command": 4, "common": [114, 115, 116, 342, 448], "common_typ": 6, "compani": [362, 379], "compar": [15, 35, 99, 137, 138, 155, 165, 219, 225], "compare_chararrai": 6, "comparison": [2, 99, 151, 152, 180, 181, 343, 473, 484], "compat": [3, 10, 14, 19, 45, 49, 90, 215, 220, 235, 236, 237, 239, 241, 295, 413, 416, 440, 466, 484], "compil": [4, 93, 149], "complement": 464, "complementari": [136, 464], "complet": [3, 4, 96, 142, 143, 196, 421, 480], "complex": [10, 11, 12, 18, 26, 27, 35, 57, 76, 89, 90, 93, 96, 100, 107, 108, 109, 111, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 127, 134, 137, 138, 161, 166, 167, 173, 174, 185, 186, 187, 188, 196, 197, 199, 215, 217, 219, 225, 230, 239, 241, 298, 299, 353, 410, 411, 413, 434, 440, 463, 466, 467, 480, 484], "complex128": [9, 10, 49, 417], "complex64": [9, 10, 49, 90, 134, 328], "compliant": 90, "complic": [95, 488], "compon": [10, 35, 112, 117, 124, 127, 161, 230, 410], "compos": 68, "composit": [78, 178, 442, 452], "compress": [6, 105, 426, 444, 480], "comput": [4, 10, 18, 22, 23, 24, 25, 26, 27, 28, 33, 49, 51, 52, 53, 54, 58, 64, 65, 71, 72, 76, 77, 78, 86, 87, 95, 101, 102, 103, 104, 107, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 135, 150, 151, 152, 153, 154, 155, 161, 162, 164, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 210, 211, 212, 213, 215, 217, 220, 221, 226, 233, 234, 235, 236, 237, 238, 239, 240, 241, 340, 350, 353, 410, 412, 413, 414, 419, 422, 424, 428, 429, 430, 431, 436, 440, 442, 446, 447, 448, 452, 455, 459, 466], "compute_uv": [183, 199], "concaten": [6, 62, 92, 157, 423, 435, 439, 445, 469], "concept": [21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472, 480], "cond": [6, 189], "condit": [32, 45, 89, 90, 105, 183, 189, 193, 295, 342, 349, 355, 357, 426, 470], "condlist": 426, "confus": 139, "conj": [6, 65, 90, 113, 161, 182, 185, 353], "conjug": [6, 10, 64, 89, 90, 119, 122, 161, 182, 185, 186, 187, 188, 217, 298, 353, 467], "consecut": [86, 94, 150], "conserv": 222, "consid": [15, 21, 34, 35, 38, 39, 41, 43, 96, 124, 148, 165, 168, 186, 188, 192, 202, 214, 217, 360, 388, 463], "consist": [35, 36, 94, 108, 109, 111, 114, 115, 116, 120, 121, 123, 125, 142, 155, 201, 202, 445, 448], "constant": [9, 93, 150], "constraint": 49, "construct": [38, 39, 40, 60, 81, 84, 85, 90, 93, 106, 141, 142, 143, 144, 145, 159, 177, 203, 223, 296, 344, 426, 449, 450, 470, 473], "constructor": 480, "consum": [90, 315], "contain": [10, 11, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 40, 51, 52, 53, 54, 58, 59, 61, 64, 65, 68, 69, 71, 72, 75, 76, 85, 88, 90, 93, 99, 101, 102, 104, 109, 110, 111, 114, 119, 122, 124, 130, 134, 135, 136, 137, 138, 139, 140, 145, 149, 150, 151, 152, 154, 155, 158, 161, 162, 164, 179, 180, 181, 186, 196, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 219, 220, 225, 226, 229, 231, 232, 235, 236, 237, 239, 241, 324, 340, 342, 343, 350, 351, 353, 360, 410, 412, 413, 414, 418, 419, 422, 424, 428, 429, 430, 431, 436, 437, 440, 441, 446, 447, 451, 455, 456, 459, 460, 461, 462, 466, 480], "content": [41, 90, 397], "context": 10, "contigu": [38, 39, 40, 41, 43, 89, 90, 95, 193, 321, 409, 416], "continu": [360, 392], "contourf": 222, "contract": [95, 96, 448], "contrast": [95, 355], "contribut": [10, 49, 154, 155], "control": [4, 45, 57, 63, 69, 90, 95, 157, 217, 295, 423, 439, 469], "conveni": [90, 337, 360], "convent": [89, 95, 96, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 163, 201, 217, 347, 448], "convers": [45, 90, 95, 295, 473], "convert": [20, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 67, 79, 80, 81, 84, 93, 95, 96, 103, 146, 147, 148, 167, 174, 202, 214, 358, 359, 464, 465], "convolut": [10, 66, 70], "convolv": [6, 70], "coolei": 10, "coordin": [73, 143, 150, 162, 177, 222], "copi": [6, 20, 21, 31, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 69, 81, 82, 84, 85, 90, 93, 97, 98, 105, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 222, 223, 230, 249, 295, 308, 310, 318, 324, 327, 344, 345, 346, 348, 349, 350, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 416, 425, 433, 438, 453, 454, 455, 458, 459, 465, 471, 472, 480], "copysign": [6, 340, 350], "copyto": [6, 90, 105, 300, 349], "core": [3, 93, 95, 480], "corner": [109, 111, 115, 116], "corrcoef": [6, 74], "correct": [11, 12, 13, 18, 20, 22, 23, 24, 25, 26, 27, 28, 32, 33, 51, 52, 53, 54, 58, 59, 63, 64, 65, 68, 71, 72, 79, 80, 88, 99, 101, 102, 104, 107, 113, 119, 121, 128, 134, 135, 136, 137, 138, 139, 151, 152, 153, 158, 161, 164, 168, 169, 170, 179, 180, 181, 198, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 225, 226, 229, 340, 341, 343, 350, 351, 353, 358, 359, 412, 414, 418, 419, 422, 424, 428, 429, 430, 431, 436, 437, 439, 441, 446, 447, 461, 462], "correctli": [18, 26, 29, 30, 73, 194, 218, 224, 231, 232, 238, 240, 342, 352, 442], "correl": [6, 484], "correspond": [6, 10, 21, 29, 30, 34, 38, 39, 40, 41, 42, 43, 45, 61, 63, 67, 79, 80, 81, 82, 84, 85, 90, 97, 98, 106, 109, 110, 111, 113, 115, 116, 119, 120, 121, 122, 123, 124, 125, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 159, 162, 177, 185, 186, 202, 203, 214, 216, 217, 223, 295, 300, 304, 344, 345, 346, 358, 359, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 420, 426, 427, 435, 440, 448, 451, 452, 453, 455, 459, 465, 466, 471, 472, 480], "correspondingli": [10, 435], "cosh": [6, 23, 71, 431, 447], "cosin": [22, 23, 24, 25, 26, 27, 28, 71, 72, 430, 431, 446, 447], "cost": [95, 96], "costli": 96, "could": [90, 113, 119, 121, 329], "count": [14, 19, 50, 73, 87, 93, 96, 131, 141, 142, 144, 145, 150, 154, 155, 342, 352, 362, 432, 442, 463, 473, 484], "count_nonzero": [6, 342], "counterpart": [10, 113, 119, 121, 480], "cov": [6, 378], "covari": 74, "cover": [455, 459, 484], "cpu": [4, 21, 34, 38, 39, 40, 41, 43, 67, 70, 74, 81, 84, 97, 98, 100, 106, 110, 124, 141, 142, 143, 144, 146, 147, 148, 159, 202, 203, 214, 221, 223, 227, 238, 344, 345, 346, 453, 465, 471, 472], "creat": [3, 4, 21, 34, 36, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 83, 84, 85, 90, 93, 96, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 230, 295, 300, 344, 345, 346, 356, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 450, 453, 455, 456, 459, 460, 465, 471, 472, 480, 484], "creation": [93, 96, 473, 480, 484, 488], "crop": [108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125], "cross": [6, 70, 177], "csingl": 9, "ct": 10, "cube": [58, 134, 436], "cubic": 96, "cumprod": [6, 90, 233, 480], "cumproduct": 6, "cumsum": [6, 86, 90, 234, 442, 452, 480], "cumul": [76, 77, 78, 86, 90, 233, 234, 301, 302, 442, 452], "cupi": [2, 473], "current": [10, 11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 51, 52, 53, 54, 58, 59, 61, 68, 71, 72, 79, 80, 88, 90, 93, 96, 101, 102, 104, 134, 135, 136, 137, 138, 139, 142, 153, 155, 158, 159, 164, 179, 205, 206, 207, 208, 209, 219, 225, 226, 227, 229, 327, 340, 341, 350, 351, 353, 358, 359, 412, 414, 418, 419, 424, 428, 429, 430, 431, 441, 446, 447, 461, 462], "curv": 452, "custom": 480, "customarili": 10, "cut": 190, "cutoff": 195, "cycl": [110, 124, 177], "cyclic": 355, "cython": 4, "d": [0, 14, 19, 21, 49, 62, 63, 77, 78, 81, 82, 83, 84, 85, 89, 90, 92, 93, 106, 110, 112, 117, 124, 126, 130, 132, 133, 145, 156, 157, 159, 163, 177, 184, 186, 187, 193, 194, 197, 217, 222, 233, 234, 240, 308, 342, 351, 352, 355, 365, 409, 416, 423, 425, 427, 439, 442, 444, 448, 449, 450, 457, 463, 465, 469, 480], "d0": [360, 387, 389], "d1": [360, 389], "d3": 82, "data": [1, 3, 4, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 51, 52, 53, 54, 56, 57, 58, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 79, 80, 81, 84, 87, 88, 89, 90, 93, 95, 97, 98, 99, 100, 101, 102, 104, 106, 107, 113, 119, 121, 127, 128, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 174, 179, 180, 181, 190, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 225, 226, 227, 229, 230, 231, 232, 235, 236, 237, 238, 239, 241, 295, 324, 337, 339, 340, 341, 343, 345, 346, 349, 350, 351, 353, 355, 356, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 436, 437, 438, 439, 440, 441, 445, 446, 447, 450, 453, 461, 462, 466, 469, 470, 471, 472, 473, 484], "datatyp": [93, 192], "date": 4, "datetim": 93, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [74, 90, 239, 241, 331, 338, 440, 466], "decai": 373, "decim": [33, 90, 127, 128, 325, 419, 422], "decomposit": [182, 189, 192, 195, 199, 484], "decompress": 203, "decreas": [87, 452], "decreasingli": [10, 109, 111, 115, 116], "deem": 140, "def": 0, "default": [3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 164, 165, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 186, 188, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 300, 308, 340, 341, 343, 344, 345, 346, 348, 350, 351, 352, 353, 355, 358, 359, 360, 364, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 399, 401, 404, 409, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 480], "default_rng": 6, "defg": 96, "defici": 192, "defin": [10, 75, 93, 98, 108, 137, 138, 147, 153, 154, 155, 219, 225, 230, 346, 350, 411, 472, 480], "definit": [75, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 135, 182, 452], "deg": [18, 359], "deg2rad": [6, 358, 359, 464], "degre": [6, 18, 79, 239, 241, 358, 359, 402, 440, 464, 466, 488], "del": 488, "delet": [6, 20], "delta": [10, 239, 241, 440, 464, 466], "demonstr": [0, 4, 93], "dens": [162, 177, 223], "densiti": 154, "depend": [4, 32, 85, 107, 113, 119, 121, 186, 190, 196, 198, 199, 202, 238, 240, 426, 470], "deprec": 6, "deprecate_with_doc": 6, "depth": [62, 63, 91, 92, 157, 423, 435, 439, 469], "deriv": 150, "descend": 199, "descr": 93, "describ": [76, 93, 215, 413, 484], "descript": [76, 93, 114, 116, 154, 215, 413, 480], "design": 10, "desir": [21, 34, 38, 39, 41, 43, 44, 56, 97, 98, 106, 114, 115, 116, 146, 147, 148, 159, 202, 214, 345, 346, 449, 453, 471, 472], "destin": [63, 157, 228, 355, 356, 423, 439, 445, 469], "destruct": 488, "det": [6, 197], "detail": [33, 109, 111, 115, 116, 120, 121, 123, 125, 140, 422, 455, 456, 459, 460, 463, 480], "determin": [13, 18, 22, 23, 24, 25, 26, 27, 28, 51, 53, 54, 58, 68, 71, 72, 79, 80, 88, 101, 102, 104, 136, 137, 138, 139, 142, 143, 145, 158, 179, 184, 190, 196, 197, 204, 205, 206, 207, 208, 209, 217, 219, 225, 226, 229, 341, 351, 358, 359, 412, 414, 418, 424, 426, 428, 430, 431, 436, 437, 441, 446, 447, 450, 461, 462], "devel": 4, "develop": [3, 4], "deviat": [90, 220, 236, 239, 241, 331, 360, 375, 382, 440, 466], "devic": [0, 2, 3, 21, 34, 38, 39, 40, 41, 42, 43, 45, 49, 67, 76, 81, 82, 84, 90, 95, 97, 98, 106, 107, 110, 124, 128, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 215, 216, 217, 220, 223, 236, 239, 241, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 413, 438, 440, 453, 455, 459, 465, 466, 471, 472], "df": [364, 380, 402, 403], "dfden": [368, 381], "dfnum": [368, 381], "dft": [10, 108, 113, 114, 118, 119, 122], "di": [82, 83], "diag": [6, 84, 85, 95, 106, 132, 133, 159, 185, 187, 199, 426, 450], "diag_indic": [6, 83, 126], "diag_indices_from": [6, 82, 126], "diagflat": [6, 81, 85, 450], "diagon": [6, 81, 82, 83, 84, 90, 95, 106, 126, 159, 182, 186, 187, 188, 216, 336, 426, 450, 453, 454, 455, 456, 458, 459, 460, 480], "dice": 377, "dictionari": 93, "diff": [6, 78, 94, 150, 154], "differ": [3, 10, 15, 21, 34, 37, 38, 39, 40, 41, 43, 49, 67, 76, 78, 81, 84, 86, 90, 93, 94, 97, 98, 106, 109, 110, 114, 115, 117, 120, 123, 124, 127, 132, 133, 134, 141, 142, 143, 144, 146, 147, 148, 150, 159, 165, 188, 202, 203, 214, 215, 217, 223, 300, 344, 345, 346, 349, 351, 356, 413, 441, 445, 453, 455, 459, 464, 465, 471, 472, 484], "digit": [6, 10, 127, 154], "dim": 15, "dimens": [14, 19, 20, 29, 30, 34, 46, 47, 48, 49, 62, 63, 69, 73, 74, 75, 82, 85, 86, 90, 91, 93, 103, 115, 116, 128, 132, 133, 150, 157, 162, 163, 177, 192, 194, 196, 215, 218, 220, 222, 223, 224, 228, 231, 232, 235, 236, 237, 238, 239, 240, 241, 308, 316, 327, 339, 342, 344, 352, 356, 360, 390, 392, 393, 395, 413, 416, 427, 435, 438, 439, 440, 442, 443, 444, 445, 449, 450, 455, 456, 459, 460, 463, 466, 468, 480, 484], "dimension": [2, 4, 31, 66, 70, 73, 76, 82, 83, 84, 85, 86, 87, 90, 94, 95, 108, 109, 111, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126, 141, 142, 144, 150, 156, 162, 177, 190, 196, 200, 201, 215, 218, 222, 223, 224, 231, 232, 235, 237, 239, 241, 330, 339, 344, 347, 352, 413, 433, 440, 442, 444, 449, 452, 463, 466, 467, 468, 473], "direct": [10, 75, 86, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 132, 133, 150, 341], "directli": [93, 143, 162, 214, 342, 445], "directori": 149, "dirichlet": 6, "discard": 462, "discont": 464, "discontinu": 464, "discret": [3, 10, 66, 70, 78, 86, 94, 108, 109, 110, 111, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 150, 360, 473], "disp": 6, "dispers": 405, "displac": [90, 332], "distanc": 150, "distinct": [137, 138, 219, 225], "distinguish": 93, "distribut": [3, 4, 214, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 484], "divid": [6, 37, 92, 136, 139, 226, 414, 435, 461], "divis": [88, 136, 139, 226, 351, 414, 435, 461, 462], "divisor": [239, 241, 440, 466], "divmod": [6, 480], "dlpack": 140, "dmlc": 140, "dn": [360, 387, 389], "do": [3, 4, 93, 216, 362, 421, 452], "docstr": 480, "document": [0, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 480], "doe": [20, 21, 37, 57, 95, 105, 107, 122, 137, 138, 140, 196, 230, 233, 234, 349, 435, 444], "domain": [10, 113, 118], "done": [3, 45, 90, 95, 201, 295, 463, 464], "dot": [6, 90, 95, 96, 163, 182, 187, 189, 193, 195, 196, 198, 199, 200, 201, 217, 448, 467], "doubl": [9, 373, 448], "down": 133, "dp": [88, 184, 186, 197, 198, 351, 416, 417, 441, 461], "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 231, 232, 235, 237, 238, 295, 300, 344, 345, 346, 354, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472], "dpnp": [0, 2, 3, 4, 10, 473, 480, 484, 485, 488], "dpnp_arrai": [21, 34, 38, 39, 40, 41, 43, 45, 67, 81, 82, 84, 97, 98, 106, 110, 124, 127, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 160, 162, 202, 203, 214, 216, 223, 242, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472, 473], "dpnp_iface_arraycr": [223, 344], "draw": [360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "drawn": [360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 382, 383, 385, 386, 388, 391, 394, 400, 401, 402, 403, 404, 405, 406, 407, 408, 426], "drill": [362, 379], "driver": 2, "drop": [3, 93], "dsplit": [6, 63, 92, 435], "dst": 69, "dstack": [6, 62, 63, 157, 423, 435, 439, 469], "dt": [93, 452], "dt2": 93, "dtype": [0, 9, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 38, 39, 40, 41, 42, 43, 45, 49, 51, 52, 53, 54, 57, 58, 59, 63, 64, 65, 68, 71, 72, 74, 76, 77, 78, 79, 80, 82, 88, 90, 95, 97, 98, 99, 101, 102, 104, 106, 107, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 164, 168, 169, 170, 171, 172, 179, 180, 181, 193, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 301, 302, 313, 319, 328, 331, 333, 336, 338, 340, 341, 343, 345, 346, 350, 351, 352, 353, 358, 359, 360, 382, 388, 404, 412, 413, 414, 417, 418, 419, 422, 423, 424, 428, 429, 430, 431, 434, 436, 437, 439, 440, 441, 442, 444, 446, 447, 450, 453, 454, 458, 461, 462, 466, 468, 469, 471, 472, 480], "due": [122, 488], "dump": 6, "dx": [150, 452], "dy": 150, "dz": 150, "e": [9, 10, 23, 25, 76, 77, 85, 93, 97, 98, 103, 106, 109, 113, 114, 115, 116, 119, 121, 122, 134, 142, 146, 147, 150, 159, 179, 185, 197, 200, 204, 345, 346, 360, 411, 415, 443, 453, 471, 472], "ea": 96, "each": [0, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 64, 65, 68, 71, 72, 77, 78, 82, 85, 87, 88, 90, 93, 96, 99, 101, 102, 104, 109, 111, 113, 115, 116, 119, 120, 121, 123, 125, 132, 133, 134, 135, 136, 139, 143, 150, 151, 152, 154, 155, 161, 164, 168, 169, 170, 177, 179, 180, 181, 185, 186, 187, 188, 190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 226, 228, 229, 230, 325, 340, 342, 343, 350, 351, 353, 356, 362, 379, 410, 412, 414, 415, 418, 419, 420, 422, 424, 428, 429, 430, 431, 435, 436, 437, 439, 441, 445, 446, 447, 449, 452, 455, 456, 459, 460, 461, 462, 463, 480], "easier": 444, "easiest": 4, "easili": [0, 155], "edg": [61, 87, 154, 155], "edge_ord": 150, "ediff1d": [6, 86, 150], "effect": [96, 134, 137, 138, 219, 225, 351, 464], "effici": [10, 108, 122, 142, 192, 195, 199], "efgh": 96, "eig": [6, 186, 187, 188], "eigenvalu": [185, 186, 187, 188, 484], "eigenvector": [185, 186, 187, 188], "eigh": [6, 185, 187, 188], "eigval": [6, 185, 186, 188], "eigvalsh": [6, 185, 186, 187], "einstein": [89, 95, 96, 163, 201, 217, 347, 448], "einsum": [6, 89, 96, 163, 201, 217, 347, 448], "einsum_path": [6, 95], "either": [35, 36, 43, 49, 76, 85, 93, 109, 111, 113, 115, 116, 119, 121, 123, 125, 126, 150, 163, 186, 188, 194, 196, 215, 231, 232, 235, 237, 238, 240, 413, 425, 426, 445, 452], "element": [4, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 40, 49, 50, 51, 52, 53, 54, 58, 59, 61, 64, 65, 68, 69, 71, 72, 76, 77, 78, 83, 85, 86, 87, 88, 90, 93, 94, 96, 99, 101, 102, 104, 105, 106, 107, 109, 111, 115, 116, 120, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 145, 150, 151, 152, 153, 154, 155, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 187, 191, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 225, 226, 227, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 290, 291, 298, 299, 301, 302, 304, 305, 308, 310, 311, 313, 315, 317, 318, 323, 324, 325, 326, 328, 331, 332, 335, 338, 340, 341, 342, 343, 349, 350, 351, 352, 353, 355, 357, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 440, 441, 442, 444, 446, 447, 448, 449, 450, 452, 454, 456, 458, 460, 461, 462, 463, 464, 466, 470, 480, 484, 488], "element_count": [90, 328, 432], "ellipsi": 95, "els": [0, 197, 247], "elsewher": [106, 159, 453, 470], "empti": [4, 6, 34, 90, 98, 109, 111, 115, 116, 120, 121, 123, 125, 142, 146, 147, 190, 305, 345, 346, 349, 435, 471, 472], "empty_lik": [6, 34, 97, 147, 346, 472], "enabl": [126, 192, 195, 199], "encount": [233, 234, 235, 237, 426], "end": [20, 21, 85, 93, 94, 96, 114, 148, 202, 214], "end_tim": 0, "endian": 93, "endpoint": [21, 148, 202, 214, 452], "engin": 396, "enough": 154, "entir": [49, 76, 113, 154, 155, 215, 220, 235, 236, 237, 239, 241, 413, 440, 466], "entri": [90, 93, 97, 105, 113, 119, 121, 126, 131, 132, 133, 330, 435, 438], "enumer": 140, "env": 4, "environ": 4, "ep": [127, 192, 341, 411], "epsilon": [192, 411], "epsneg": 127, "equal": [6, 14, 15, 19, 35, 36, 37, 49, 63, 70, 74, 78, 90, 91, 106, 148, 150, 151, 152, 154, 155, 156, 157, 165, 167, 174, 176, 179, 180, 181, 191, 195, 196, 201, 202, 214, 226, 318, 343, 360, 370, 404, 414, 418, 419, 422, 423, 428, 435, 438, 439, 453, 455, 459, 468, 469], "equal_nan": [15, 35, 165, 463], "equat": [190, 198, 200, 201, 484], "equiv": [45, 57, 63, 69, 90, 95, 157, 191, 217, 295, 423, 439, 469], "equival": [10, 13, 14, 16, 17, 19, 29, 30, 31, 33, 36, 49, 67, 75, 76, 79, 80, 88, 89, 90, 91, 92, 96, 103, 105, 130, 137, 138, 139, 156, 177, 200, 215, 226, 229, 249, 290, 291, 303, 316, 324, 327, 337, 339, 342, 347, 350, 358, 359, 360, 388, 413, 414, 416, 422, 427, 433, 441, 442, 444, 448, 451, 461, 463, 468, 480, 488], "error": [76, 95, 100, 113, 118, 185, 215, 413, 435, 438, 473, 480], "essenti": 4, "estim": [74, 155, 362, 379, 452], "et": 10, "etc": [10, 34, 39, 93, 109, 111, 115, 116, 120, 121, 123, 125, 379], "euclidean": 190, "euler_gamma": 9, "evalu": [14, 15, 19, 90, 95, 96, 99, 167, 174, 201, 222, 290, 291, 347, 426, 448, 480], "even": [10, 93, 110, 112, 113, 114, 117, 118, 119, 121, 122, 124, 167, 174, 419, 422], "evenli": [21, 148, 202, 214, 419, 452], "event": 209, "everi": [121, 356, 445], "everywher": 119, "exact": [105, 193, 349], "exactli": [10, 44, 145, 360, 388, 426], "examin": 190, "exampl": [2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 300, 303, 305, 308, 309, 310, 316, 318, 322, 324, 327, 328, 329, 332, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 488], "exce": [209, 435], "except": [4, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 38, 39, 40, 41, 43, 51, 52, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 67, 68, 71, 72, 79, 80, 86, 87, 88, 89, 90, 97, 98, 99, 101, 102, 104, 106, 120, 121, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 156, 157, 158, 159, 164, 168, 169, 170, 179, 180, 181, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 224, 225, 226, 229, 235, 236, 237, 238, 239, 240, 241, 295, 340, 341, 343, 345, 346, 350, 351, 352, 353, 358, 359, 412, 414, 415, 416, 418, 419, 424, 428, 429, 430, 431, 433, 435, 436, 437, 440, 441, 442, 446, 447, 461, 462, 466, 471, 472], "exclud": [11, 12, 20, 202, 360, 404], "exclus": [360, 388], "execut": [3, 4, 38, 39, 40, 70, 74, 100, 143, 221, 227, 238, 363, 365, 366, 376, 381, 397, 488], "executor": 0, "exist": [10, 62, 63, 92, 93, 103, 140, 157, 416, 423, 435, 439, 469, 484], "exp": [6, 10, 102, 104, 108, 197, 206, 208, 215], "exp2": [6, 101, 104], "expand": [86, 103], "expand_dim": [6, 29, 30], "expect": [4, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 27, 28, 33, 51, 52, 53, 54, 58, 59, 64, 65, 68, 71, 72, 73, 76, 77, 78, 79, 80, 88, 89, 93, 99, 101, 102, 104, 107, 119, 128, 134, 135, 136, 137, 138, 139, 151, 152, 153, 158, 161, 164, 165, 168, 169, 170, 179, 180, 181, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 224, 225, 226, 229, 233, 234, 236, 238, 239, 240, 241, 340, 341, 343, 350, 351, 352, 353, 358, 359, 410, 412, 413, 414, 418, 419, 422, 424, 428, 429, 430, 431, 436, 437, 440, 441, 442, 446, 447, 461, 462, 466, 470], "explain": [111, 116, 121, 125, 480], "explan": 93, "explicit": 95, "explicitli": [85, 109, 111, 115, 116, 120, 121, 123, 125], "exploit": [10, 122], "explor": [96, 362, 379], "expm1": [6, 101, 102, 206], "expon": [10, 101, 102, 104, 134, 191, 208, 209, 215, 351, 386, 484], "exponenti": [6, 10, 96, 208, 209, 215, 373, 399], "expos": [141, 480], "express": [10, 27, 95, 96, 203, 488], "extend": [10, 93, 178, 480], "extens": [0, 1, 3, 4, 9, 149, 203, 473], "extobj": 217, "extra": [93, 119, 145], "extract": [6, 81, 84, 85, 95, 106, 130, 159, 162, 216, 349, 426, 444, 450], "extrema": 484, "ey": [6, 64, 65, 73, 90, 115, 116, 137, 138, 159, 163, 178, 189, 191, 192, 200, 201, 213, 219, 225, 427, 450], "f": [0, 6, 10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 38, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 58, 59, 61, 64, 65, 67, 68, 71, 72, 79, 80, 88, 90, 93, 95, 97, 98, 99, 101, 102, 104, 106, 107, 110, 122, 124, 128, 134, 135, 136, 137, 138, 139, 146, 147, 150, 151, 152, 153, 158, 161, 164, 168, 169, 170, 179, 180, 181, 191, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 225, 226, 229, 295, 300, 308, 340, 341, 343, 345, 346, 350, 351, 353, 358, 359, 381, 409, 412, 414, 416, 418, 419, 424, 428, 429, 430, 431, 436, 437, 441, 446, 447, 457, 461, 462, 470, 471, 472], "f0": 93, "f1": 93, "f2": 93, "f4": 57, "f8": [57, 93], "f_contigu": [41, 43], "f_k": 10, "fab": [6, 11, 12], "fact": 187, "factor": [10, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 182, 196], "fail": [90, 327, 362], "fallback": [185, 187, 363, 365, 366, 376, 381, 397], "fals": [14, 15, 16, 17, 18, 19, 29, 30, 34, 35, 36, 39, 41, 43, 45, 49, 51, 52, 54, 55, 56, 57, 67, 73, 74, 76, 78, 87, 90, 93, 95, 96, 98, 99, 105, 126, 140, 143, 147, 148, 151, 152, 154, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 192, 194, 195, 199, 202, 210, 211, 212, 213, 214, 215, 218, 220, 221, 222, 224, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 247, 290, 291, 292, 293, 295, 312, 313, 314, 319, 331, 333, 338, 342, 343, 346, 352, 354, 413, 416, 426, 429, 440, 442, 463, 465, 466, 470, 472, 480], "famili": 10, "fanci": 444, "fashion": [209, 480], "fast": [10, 108, 109, 111, 115, 116, 121, 122, 125], "fastcopyandtranspos": 6, "faster": [10, 137, 138], "fastest": [90, 308, 409, 416], "fb": [96, 457], "featur": 93, "few": 126, "fft": [6, 473, 484], "fft2": [6, 108, 111, 115], "fftfreq": [6, 10, 108, 112, 117, 124], "fftn": [6, 108, 109, 116, 122, 125], "fftshift": [6, 10, 109, 111, 116, 117], "fh": 142, "field": [93, 222], "field1": 93, "file": [141, 142, 144, 145, 149, 203], "filenam": [142, 203], "fill": [6, 20, 34, 90, 97, 98, 126, 146, 147, 154, 155, 222, 230, 300, 345, 346, 453, 471, 472], "fill_diagon": 6, "fill_valu": [146, 147], "filt": 457, "filter": [10, 21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472], "final": [4, 10, 121, 122, 123, 125, 148, 214], "find": [32, 50, 87, 90, 107, 154, 192, 195, 199, 326, 341, 342, 415, 425, 433, 463, 484], "find_common_typ": 6, "fine": 4, "finfo": [341, 411], "finfo_object": 127, "finit": [40, 168, 169, 170, 171, 172, 230], "first": [13, 14, 15, 19, 27, 29, 30, 31, 35, 36, 49, 51, 53, 54, 62, 63, 68, 75, 76, 85, 88, 89, 90, 93, 96, 99, 102, 109, 111, 113, 115, 116, 131, 134, 136, 137, 138, 139, 150, 151, 152, 154, 155, 158, 163, 165, 176, 178, 179, 180, 181, 193, 200, 203, 208, 209, 210, 212, 213, 216, 217, 218, 219, 222, 224, 225, 226, 229, 231, 232, 308, 343, 347, 349, 351, 352, 409, 414, 416, 418, 420, 423, 425, 426, 433, 434, 437, 441, 442, 443, 445, 448, 450, 461, 463, 467, 468, 469], "fit": [190, 415], "fix": [6, 33, 59, 85, 93, 135, 355, 419, 422, 462], "flag": [41, 43, 90, 93, 300], "flanneri": 10, "flat": [29, 30, 90, 94, 129, 308, 415], "flatnonzero": [6, 342], "flatten": [6, 20, 29, 30, 31, 63, 73, 77, 78, 81, 84, 85, 90, 94, 126, 130, 154, 155, 218, 224, 231, 232, 233, 234, 238, 240, 307, 321, 329, 342, 347, 356, 409, 415, 420, 433, 444, 445, 450, 463, 467], "flexibl": [89, 93, 142, 193], "flip": [6, 52, 85, 126, 132, 133, 164, 362], "fliplr": [6, 85, 126, 131, 133], "flipud": [6, 85, 126, 131, 132], "float": [11, 12, 18, 21, 27, 38, 39, 42, 49, 57, 68, 76, 78, 93, 97, 98, 102, 106, 107, 110, 124, 127, 128, 134, 141, 142, 143, 144, 145, 146, 147, 150, 154, 155, 159, 161, 190, 191, 192, 194, 195, 202, 203, 208, 209, 214, 215, 218, 220, 224, 230, 236, 239, 241, 341, 345, 346, 351, 360, 364, 389, 390, 392, 393, 395, 398, 399, 401, 404, 410, 411, 412, 413, 424, 440, 453, 464, 466, 471, 472, 480, 484], "float16": [9, 134], "float32": [0, 9, 10, 40, 42, 45, 57, 77, 90, 93, 95, 134, 295, 341, 360, 382, 387, 389, 390, 392, 393, 395, 401, 404, 417], "float64": [0, 9, 10, 42, 45, 49, 57, 78, 90, 93, 95, 295, 360, 361, 367, 368, 369, 371, 373, 374, 375, 382, 383, 386, 387, 389, 390, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 417, 468], "float_pow": [6, 351], "floor": [6, 33, 59, 128, 136, 226, 414, 419, 422, 462], "floor_divid": [6, 226, 414], "flop": 96, "flush": 142, "fmax": [6, 138, 218, 219, 225, 235, 351], "fmin": [6, 137, 219, 224, 225, 237, 351], "fmod": [6, 226, 351, 414], "fn": 143, "fname": 203, "follow": [4, 10, 49, 93, 103, 119, 127, 140, 160, 186, 188, 195, 448, 480, 484], "forc": [93, 95], "forg": 4, "form": [10, 20, 34, 38, 39, 40, 41, 42, 43, 62, 67, 81, 84, 90, 92, 95, 96, 115, 116, 119, 146, 147, 148, 167, 174, 177, 202, 214, 337, 423, 465, 469], "format": [93, 140, 142, 145, 484], "format_float_posit": 6, "format_float_scientif": 6, "former": [356, 445], "forth": 448, "fortran": [43, 45, 90, 295, 308, 409, 416], "forward": [10, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 150], "found": [4, 425, 480], "four": [360, 389], "fourier": [10, 108, 109, 110, 111, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 473], "fourth": 109, "frac": [10, 452], "fraction": [227, 462], "free": [90, 324], "freedom": [239, 241, 402, 440, 466], "freq": [110, 112, 117, 124], "freq_spectrum": 113, "frequenc": [10, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124], "freshli": [171, 172], "frexp": 6, "fro": [183, 194], "frobeniu": 183, "from": [3, 10, 14, 19, 20, 21, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 55, 57, 60, 63, 67, 69, 76, 79, 80, 81, 82, 84, 85, 90, 92, 93, 95, 97, 98, 102, 105, 106, 110, 114, 123, 124, 125, 131, 134, 140, 141, 142, 143, 144, 145, 146, 147, 150, 154, 157, 159, 162, 177, 185, 187, 188, 192, 193, 203, 215, 216, 222, 223, 296, 300, 330, 335, 344, 345, 346, 349, 352, 356, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 413, 416, 417, 423, 425, 426, 437, 438, 439, 442, 444, 445, 450, 453, 455, 457, 459, 460, 463, 464, 465, 469, 470, 471, 472, 484], "from_": 57, "from_dlpack": 6, "frombuff": [6, 142, 144, 145, 203], "fromfil": [6, 141, 144, 145], "fromfunct": [6, 38, 39, 40], "fromit": [6, 38, 39, 40, 141, 142, 145], "frompyfunc": 6, "fromregex": [6, 203], "fromstr": [6, 141, 142, 144, 203], "front": 457, "full": [6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "full_lik": [6, 34, 98, 146, 346, 472], "full_matric": 199, "fulli": 93, "function": [0, 2, 3, 11, 12, 16, 17, 21, 29, 30, 33, 34, 37, 38, 39, 40, 41, 43, 44, 67, 70, 74, 76, 79, 80, 85, 88, 90, 95, 97, 98, 100, 104, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 119, 121, 122, 125, 126, 134, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 153, 154, 155, 159, 177, 185, 187, 193, 203, 206, 208, 209, 215, 216, 221, 222, 226, 227, 238, 290, 291, 300, 303, 324, 327, 337, 345, 346, 351, 356, 358, 359, 360, 363, 365, 366, 376, 381, 397, 413, 414, 422, 423, 428, 440, 444, 445, 449, 455, 456, 459, 460, 461, 466, 469, 470, 471, 472, 473, 480, 484], "fundament": [10, 93], "further": [455, 459], "futur": [93, 155], "fweight": 74, "g": [4, 10, 93, 97, 98, 106, 146, 147, 159, 345, 346, 360, 453, 471, 472, 488], "g5227757820a": 6, "gamma": [6, 400], "gauss": 10, "gaussian": [360, 382, 406], "gc": 96, "gcd": 6, "gen": 95, "gender": 93, "gener": [10, 31, 49, 93, 114, 119, 122, 125, 148, 163, 185, 186, 187, 188, 195, 196, 203, 214, 360, 362, 365, 396, 452, 455, 459, 465, 480, 484], "genfromtxt": [6, 203], "geometr": [6, 148, 202], "geomspac": [6, 202, 214], "get": [21, 34, 38, 39, 40, 41, 42, 43, 67, 81, 82, 83, 84, 90, 97, 98, 106, 110, 113, 119, 121, 124, 134, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 300, 327, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 445, 453, 455, 456, 459, 460, 465, 471, 472, 480], "get_arrai": 90, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 360], "get_sycl_devic": 360, "get_sycl_queu": 360, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 93], "getter": [90, 327], "gid": 155, "github": 140, "give": [10, 84, 90, 134, 155, 337, 416, 427, 432, 463], "given": [14, 15, 19, 20, 21, 29, 30, 33, 34, 35, 38, 39, 41, 43, 45, 49, 62, 67, 73, 74, 77, 78, 86, 89, 90, 92, 93, 94, 96, 97, 98, 105, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 131, 137, 138, 146, 147, 148, 150, 154, 155, 165, 189, 202, 214, 216, 218, 219, 222, 224, 225, 233, 234, 235, 237, 238, 239, 240, 241, 292, 293, 295, 301, 302, 314, 319, 320, 325, 328, 331, 333, 338, 342, 345, 346, 349, 352, 354, 355, 360, 365, 387, 404, 413, 415, 419, 420, 421, 423, 425, 426, 432, 435, 440, 442, 444, 448, 449, 452, 453, 463, 466, 469, 471, 472, 480], "global": 0, "good": 372, "gpu": [0, 3, 4, 21, 34, 38, 39, 40, 41, 43, 67, 81, 84, 97, 98, 106, 110, 124, 141, 142, 143, 144, 146, 147, 148, 159, 202, 203, 214, 223, 344, 345, 346, 453, 465, 471, 472], "grade": 93, "gradient": [6, 86, 94, 190], "graphic": 4, "great": 10, "greater": [6, 90, 91, 99, 136, 152, 179, 180, 181, 192, 196, 318, 343, 418, 426, 428, 438, 464], "greater_equ": [6, 99, 151, 180, 181, 343], "greatest": 136, "greedi": [95, 96], "grid": [38, 39, 40, 143, 162, 222, 223, 344], "group": [32, 342], "guarante": [93, 416], "guid": [2, 3], "gumbel": 6, "gz": 203, "h": [149, 182, 196, 222], "ha": [4, 10, 11, 12, 14, 18, 19, 20, 29, 30, 31, 49, 76, 77, 78, 87, 93, 99, 103, 113, 118, 119, 143, 150, 151, 152, 157, 161, 166, 167, 173, 174, 180, 181, 187, 197, 199, 215, 220, 226, 233, 234, 236, 238, 239, 240, 241, 343, 352, 410, 411, 412, 413, 414, 415, 421, 424, 426, 438, 439, 440, 442, 443, 444, 449, 450, 466, 480], "had": [356, 445], "hadamard": 96, "half": [23, 109, 111, 112, 113, 115, 116, 202, 360, 390, 392, 393, 395, 404, 443], "ham": 6, "han": 6, "hand": [75, 201], "handl": [21, 93, 107, 203, 342, 444, 445, 484], "happen": [45, 49, 90, 295, 362, 452], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 93, "have": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 46, 47, 48, 49, 51, 52, 53, 54, 56, 58, 59, 62, 63, 64, 65, 68, 71, 72, 75, 76, 77, 78, 79, 80, 88, 89, 92, 93, 99, 101, 102, 104, 107, 115, 116, 125, 127, 128, 134, 135, 136, 137, 138, 139, 151, 152, 153, 157, 158, 161, 164, 165, 168, 169, 170, 171, 172, 179, 180, 181, 190, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 225, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 340, 341, 343, 349, 350, 351, 352, 353, 358, 359, 379, 410, 412, 413, 414, 415, 418, 419, 422, 423, 424, 428, 429, 430, 431, 436, 437, 439, 440, 441, 442, 446, 447, 449, 461, 462, 464, 466, 469, 480], "hd": 96, "header": 149, "heavisid": 6, "hello": 93, "help": 488, "helper": 484, "henc": [103, 150], "here": [6, 31, 93, 95, 113, 118, 119, 433, 455, 459], "hermit": [186, 188], "hermitian": [113, 118, 119, 121, 122, 182, 185, 186, 187, 188, 192, 195, 199, 484], "hfft": [6, 10, 118], "hierarchi": 176, "high": [119, 360, 388, 391, 404], "higher": [95, 156, 467, 468], "highest": 108, "highli": 142, "hist": [154, 398], "hist_0": 155, "hist_1": 155, "histogram": [6, 87, 155, 425, 484], "histogram2d": 6, "histogram_bin_edg": [6, 154], "histogramdd": [6, 154], "hold": [61, 77, 78, 154, 194, 233, 234, 238, 240, 450], "homogen": 93, "horizont": [62, 63, 85, 92, 126, 131, 156, 157, 423, 435, 439, 469], "host": [3, 4, 21, 34, 38, 39, 40, 41, 42, 43, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 453, 455, 459, 465, 471, 472], "household": 196, "how": [0, 4, 93, 119, 122, 150, 355, 444, 445, 455, 459], "howev": [90, 329, 444], "hsplit": [6, 63, 435], "hstack": [6, 62, 63, 92, 423, 435, 439, 469], "http": [4, 140], "hyperbol": [22, 23, 24, 25, 26, 27, 28, 71, 72, 430, 431, 446, 447, 484], "hypergeometr": 6, "hypot": [6, 413], "hypotenus": [158, 413], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 249, 295, 300, 318, 324, 327, 329, 332, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 480, 488], "i0": 6, "i1": [90, 93, 332], "i2": [90, 93, 332], "i3": [90, 332], "i4": [57, 93], "i7": 95, "i8": [57, 93], "icpx": 4, "icx": 4, "id": [14, 19, 90, 310], "ident": [3, 6, 14, 19, 40, 76, 93, 106, 117, 126, 198, 399], "identifi": 93, "ieee": 127, "ifft": [6, 108, 115, 116, 118, 119, 124], "ifft2": [6, 109, 114, 116], "ifftn": [6, 111, 114, 115], "ifftshift": [6, 10, 112, 116], "ignor": [29, 30, 75, 93, 137, 138, 145, 154, 155, 218, 219, 220, 224, 225, 231, 232, 235, 236, 237, 239, 241, 440, 466], "ihfft": [6, 113], "ii": [95, 383], "iinfo": 377, "iinfo_object": 160, "ij": [95, 96, 222], "ijk": 95, "il": 96, "il1": 455, "il2": 455, "illustr": 187, "ilm": 95, "imag": [6, 10, 18, 35, 90, 410, 411, 480], "imaginari": [18, 35, 90, 119, 137, 138, 161, 166, 167, 173, 174, 185, 186, 188, 191, 219, 225, 230, 309, 410, 411, 434, 463], "implement": [3, 6, 42, 108, 140], "impli": 93, "implicit": 95, "import": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 300, 303, 308, 309, 316, 318, 322, 327, 328, 329, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 385, 394, 398, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "improv": 95, "in1d": 6, "in_array1": 100, "includ": [4, 10, 14, 19, 20, 21, 34, 38, 39, 40, 41, 42, 43, 49, 67, 76, 81, 84, 87, 95, 96, 107, 146, 147, 148, 149, 154, 155, 167, 174, 195, 202, 214, 215, 220, 235, 236, 237, 239, 241, 360, 404, 413, 440, 465, 466], "include_initi": 76, "inclus": [360, 388, 391, 426], "increas": [87, 93, 103, 114, 119, 154, 465], "ind": [31, 87, 200, 355, 356, 455, 456, 459, 460], "index": [4, 20, 29, 30, 31, 32, 60, 90, 93, 96, 106, 109, 115, 123, 130, 140, 162, 177, 222, 231, 232, 296, 308, 332, 342, 355, 356, 409, 416, 425, 426, 435, 444, 445, 455, 459, 463, 470, 473, 484], "index_arrai": [29, 30, 31], "indic": [6, 10, 29, 30, 31, 32, 76, 82, 83, 87, 90, 93, 95, 96, 105, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 130, 140, 143, 154, 200, 201, 216, 217, 223, 231, 232, 292, 293, 294, 317, 320, 326, 335, 342, 355, 356, 416, 425, 428, 429, 433, 435, 444, 445, 451, 455, 456, 459, 460, 463, 470], "indices_or_sect": [37, 91, 156, 435, 468], "indirect": [31, 433], "individu": 370, "inequ": 343, "inexact": [134, 230, 238, 240], "inf": [9, 15, 23, 27, 38, 39, 40, 68, 88, 165, 168, 169, 170, 171, 172, 183, 194, 204, 205, 207, 219, 225, 230, 231, 232, 235, 237, 240, 353, 436, 461], "infer": [40, 76, 215, 413, 416], "infin": [14, 19, 40, 136, 168, 169, 170, 171, 172, 226, 230, 235, 237, 240, 414, 462, 484], "infinit": 183, "info": 6, "inform": [0, 41, 43, 90, 93, 113, 119, 121, 127, 306, 480, 484], "initi": [16, 17, 76, 90, 97, 145, 218, 224, 235, 237, 238, 240, 312, 314, 319, 333, 352, 360, 442], "inner": [6, 75, 95, 96, 193, 217, 347], "input": [10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 186, 192, 194, 196, 197, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 308, 316, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 382, 388, 404, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 467, 471, 472], "insert": [6, 20, 29, 30, 85, 87, 90, 95, 103, 148, 154, 202, 214, 231, 232, 235, 237, 326, 356, 425, 426, 484], "instal": 2, "instanc": [3, 21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 97, 98, 106, 110, 113, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 159, 162, 202, 203, 214, 216, 217, 223, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472], "instead": [32, 45, 85, 89, 90, 95, 103, 135, 148, 154, 155, 162, 193, 202, 209, 214, 218, 224, 295, 342, 352, 442, 480], "instruct": 4, "int": [9, 14, 19, 20, 21, 29, 30, 31, 33, 42, 49, 56, 63, 73, 75, 76, 77, 78, 81, 82, 84, 85, 86, 90, 93, 97, 98, 99, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 159, 160, 162, 190, 191, 194, 200, 201, 202, 214, 215, 216, 218, 220, 224, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 316, 328, 337, 339, 345, 346, 348, 352, 355, 356, 360, 388, 391, 413, 415, 416, 420, 421, 422, 432, 433, 435, 438, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 463, 464, 465, 466, 471, 472, 480], "int16": 93, "int32": [0, 9, 42, 57, 93, 97, 98, 106, 141, 144, 146, 147, 159, 203, 238, 240, 345, 346, 360, 362, 370, 372, 377, 379, 385, 388, 404, 417, 442, 453, 471, 472], "int64": [0, 9, 57, 93, 238, 240, 417], "int8": [93, 352], "int_": 9, "int_0": 452, "int_t": 452, "intc": 9, "integ": [21, 33, 37, 49, 50, 51, 52, 53, 54, 56, 59, 76, 77, 78, 87, 90, 93, 128, 131, 134, 135, 136, 140, 154, 160, 164, 177, 179, 191, 194, 200, 215, 218, 220, 224, 226, 233, 234, 235, 236, 237, 238, 239, 240, 241, 329, 337, 351, 352, 355, 360, 388, 391, 396, 413, 414, 415, 416, 418, 419, 420, 422, 425, 426, 427, 435, 437, 440, 442, 444, 448, 450, 462, 463, 464, 466, 480], "integer_lik": 448, "integr": [3, 4, 49, 76, 78, 134, 154, 215, 220, 227, 236, 239, 241, 351, 413, 440, 442, 452, 466], "intel": [3, 95], "intend": [90, 337], "intent": 134, "interchang": [90, 228, 334, 443], "interfac": [0, 141], "interior": 150, "intermedi": [77, 95, 96], "intern": 360, "interp": 6, "interpol": 119, "interpret": [2, 38, 39, 40, 44, 56, 67, 93, 113, 119, 121, 141, 177, 216, 342, 355, 480], "intersect1d": 6, "interv": [10, 21, 22, 23, 24, 26, 87, 103, 148, 202, 214, 360, 388, 390, 392, 393, 395, 403, 404, 443], "intp": [238, 240], "intrins": 480, "introduc": 420, "introduct": 10, "introselect": [90, 318, 348], "inv": [6, 183, 195], "invers": [10, 18, 22, 23, 24, 25, 26, 27, 28, 71, 72, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 189, 195, 200, 201, 206, 406, 430, 431, 446, 447, 463], "invert": [6, 52, 189, 195, 200], "invok": 480, "involv": 200, "io": [140, 203], "irfft": [6, 110, 113, 118, 120, 121, 122, 124], "irfft2": [6, 119, 121, 123], "irfftn": [6, 119, 120, 125], "irrespect": 31, "is_busdai": 6, "isalignedstruct": 93, "isbuiltin": 93, "isclos": [6, 15], "iscomplex": [6, 167, 173], "iscomplexobj": [6, 166, 174], "isfinit": [6, 169, 170, 171, 172, 230, 235, 237, 240], "isfortran": 6, "isin": 6, "isinf": [6, 168, 170, 171, 172, 230], "isn": 93, "isnan": [6, 168, 169, 171, 172, 230, 233, 234, 235, 237, 238, 240], "isnat": [6, 170], "isneginf": [6, 168, 169, 170, 172, 230], "isposinf": [6, 168, 169, 170, 171, 230], "isreal": [6, 166, 174], "isrealobj": [6, 167, 173], "isscalar": 6, "issctyp": 6, "issu": 115, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 32, 90, 141, 142, 144, 463, 473], "item_dtyp": 93, "item_hasobject": 93, "item_is_point": 93, "items": [90, 93], "itemset": 6, "iter": [6, 38, 39, 40, 90, 96, 129, 141, 142, 144, 145, 307, 308, 356, 445, 484], "its": [4, 6, 10, 11, 12, 14, 19, 31, 49, 81, 90, 113, 119, 121, 127, 154, 155, 159, 185, 186, 187, 188, 193, 195, 201, 220, 236, 239, 241, 337, 397, 409, 413, 416, 433, 440, 451, 452, 453, 466, 480], "itself": [45, 90, 93, 230, 295, 480], "iu": 216, "iu1": [216, 459], "iu2": 459, "ix_": 6, "ixgrid": 177, "j": [64, 65, 90, 95, 109, 111, 113, 114, 115, 116, 118, 119, 122, 123, 125, 134, 143, 161, 162, 178, 182, 185, 186, 207, 217, 230, 337, 347, 353, 356, 410, 434, 437, 445, 448], "j1": 178, "jame": 10, "ji": 95, "jil": 95, "jk": [95, 96], "jl": 96, "john": 10, "join": [62, 63, 92, 157, 423, 435, 439, 469, 484], "jump": [79, 358], "just": [62, 85, 93, 109, 115, 120, 122, 123], "k": [10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 38, 39, 40, 44, 45, 51, 52, 53, 54, 58, 59, 61, 64, 65, 67, 68, 71, 72, 79, 80, 81, 84, 88, 90, 95, 99, 101, 102, 104, 106, 107, 128, 134, 135, 136, 137, 138, 139, 151, 152, 153, 158, 161, 164, 168, 169, 170, 178, 179, 180, 181, 190, 196, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 219, 225, 226, 229, 249, 295, 300, 340, 341, 343, 350, 351, 353, 358, 359, 412, 414, 418, 419, 424, 428, 429, 430, 431, 436, 437, 441, 446, 447, 448, 453, 454, 455, 456, 458, 459, 460, 461, 462, 464, 470, 488], "kaiser": 6, "kappa": 405, "keep": [44, 45, 90, 295, 463], "keepdim": [14, 16, 17, 19, 29, 30, 49, 73, 90, 194, 215, 218, 220, 221, 224, 231, 232, 235, 236, 237, 238, 239, 240, 241, 290, 291, 292, 293, 312, 313, 314, 319, 331, 333, 338, 352, 354, 356, 413, 440, 442, 445, 466], "kei": [3, 31, 90, 93, 129, 254, 285, 433], "key2": 93, "keyword": [10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 58, 59, 61, 67, 68, 71, 72, 75, 79, 80, 81, 82, 84, 88, 90, 97, 98, 101, 102, 104, 106, 110, 124, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 153, 158, 159, 162, 164, 179, 203, 205, 206, 207, 208, 209, 216, 217, 219, 223, 225, 226, 227, 229, 230, 300, 340, 341, 344, 345, 346, 350, 351, 353, 358, 359, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 412, 414, 418, 419, 424, 428, 429, 430, 431, 441, 446, 447, 453, 455, 459, 461, 462, 465, 470, 471, 472, 480], "ki": 95, "kind": [31, 45, 57, 63, 69, 76, 90, 93, 95, 127, 157, 193, 215, 217, 294, 295, 318, 329, 348, 413, 423, 433, 439, 469, 484], "kl": [10, 95, 96], "known": [10, 142, 398], "kron": 6, "kroneck": 178, "kth": [90, 318, 348], "kwarg": [11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 51, 52, 53, 54, 58, 59, 61, 64, 65, 68, 71, 72, 79, 80, 88, 90, 99, 101, 102, 104, 107, 128, 134, 135, 136, 137, 138, 139, 143, 151, 152, 153, 158, 161, 164, 168, 169, 170, 179, 180, 181, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 225, 226, 227, 229, 279, 297, 324, 340, 341, 343, 350, 351, 353, 358, 359, 412, 414, 418, 419, 424, 428, 429, 430, 431, 436, 437, 441, 446, 447, 461, 462], "l": [10, 37, 93, 182, 186, 188], "la": [185, 187, 188], "label": 95, "laid": 43, "lam": 385, "lambda": 143, "lapack": [185, 187], "laplac": 6, "laptop": 4, "larg": [10, 79, 93, 154, 195, 230, 358, 464, 488], "larger": [95, 108, 109, 111, 114, 115, 116, 118, 120, 121, 122, 123, 125, 127, 450, 464, 480], "largest": [10, 96, 122, 127, 135, 160, 190, 226, 230, 414], "largest_singular_valu": 195, "last": [14, 19, 20, 31, 75, 85, 86, 90, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 131, 148, 150, 163, 193, 202, 214, 217, 308, 352, 409, 416, 420, 425, 433, 438, 442, 448, 464], "later": 488, "latest": [4, 140], "latter": [137, 138, 219, 225, 356, 445], "layout": [11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 38, 39, 40, 41, 43, 44, 51, 52, 53, 54, 58, 59, 61, 64, 65, 67, 68, 71, 72, 79, 80, 88, 90, 95, 97, 98, 99, 101, 102, 104, 106, 107, 128, 134, 135, 136, 137, 138, 139, 146, 147, 151, 152, 153, 158, 161, 164, 168, 169, 170, 179, 180, 181, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 225, 226, 229, 300, 306, 340, 341, 343, 345, 346, 350, 351, 353, 358, 359, 412, 414, 416, 418, 419, 424, 428, 429, 430, 431, 436, 437, 441, 446, 447, 461, 462, 470, 471, 472, 473], "lcm": 6, "ldexp": 6, "ldot": 10, "lead": [114, 115, 116, 233, 234, 457], "learn": [3, 4, 209], "least": [46, 47, 48, 49, 83, 92, 93, 96, 103, 126, 132, 137, 138, 142, 167, 190, 196, 219, 225, 423, 469], "left": [10, 29, 30, 33, 73, 85, 87, 90, 132, 133, 179, 187, 194, 218, 224, 231, 232, 238, 240, 326, 352, 403, 418, 422, 425, 442, 452, 465], "left_shift": [6, 418], "leg": [158, 413], "legaci": 396, "len": [90, 93, 111, 112, 113, 116, 118, 119, 120, 121, 125, 162, 190, 218, 222, 223, 224, 271, 427, 465], "length": [21, 37, 49, 77, 78, 86, 99, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 145, 148, 150, 154, 157, 185, 199, 214, 218, 222, 224, 233, 234, 356, 363, 416, 417, 423, 425, 426, 427, 438, 445, 448, 449, 469], "less": [6, 77, 78, 99, 151, 152, 154, 155, 181, 190, 195, 233, 234, 238, 240, 343, 352, 426, 428, 442, 450], "less_equ": [6, 99, 151, 152, 180, 343], "let": 362, "level": [473, 480], "level_zero": [21, 34, 38, 39, 40, 41, 43, 67, 81, 84, 97, 98, 106, 110, 124, 141, 142, 143, 144, 146, 147, 148, 159, 202, 203, 214, 223, 344, 345, 346, 453, 465, 471, 472], "lexicograph": 463, "lexsort": [6, 31, 433], "li": [420, 421], "librari": [3, 4, 480], "light": 10, "like": [21, 34, 38, 39, 41, 43, 45, 46, 47, 48, 62, 90, 92, 95, 97, 106, 121, 141, 142, 143, 144, 145, 146, 148, 159, 202, 203, 214, 216, 295, 308, 316, 339, 345, 356, 360, 404, 416, 445, 471, 484], "limit": [3, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 38, 39, 41, 43, 51, 52, 53, 54, 55, 56, 58, 59, 61, 64, 65, 67, 68, 70, 71, 72, 74, 79, 80, 88, 90, 93, 97, 98, 99, 100, 101, 102, 104, 106, 127, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 158, 159, 160, 164, 168, 169, 170, 179, 180, 181, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 231, 232, 235, 236, 237, 238, 239, 240, 241, 295, 297, 340, 341, 343, 345, 346, 348, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 382, 383, 385, 386, 388, 391, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 412, 414, 416, 418, 419, 424, 428, 429, 430, 431, 433, 436, 437, 440, 441, 442, 446, 447, 461, 462, 466, 471, 472], "linalg": [6, 89, 95, 96, 437], "line": [190, 203], "linear": [10, 66, 70, 190, 198, 214, 473, 484], "linspac": [0, 6, 21, 100, 148, 214, 222, 452, 464], "linux": 4, "list": [3, 6, 9, 20, 34, 38, 39, 40, 41, 43, 46, 47, 48, 55, 63, 67, 81, 84, 90, 92, 93, 95, 96, 112, 117, 126, 146, 147, 148, 150, 157, 167, 174, 202, 203, 214, 217, 337, 415, 417, 423, 426, 435, 439, 448, 451, 465, 469, 470], "list_pickl": 93, "littl": 93, "ln": 214, "load": [6, 142, 203], "loadtxt": [6, 142], "loc": [360, 371, 373, 374, 382, 406], "local": 4, "locat": [0, 4, 149, 171, 172, 216, 347, 371, 373, 425], "log": [6, 104, 148, 197, 202, 205, 206, 207, 208, 214, 215, 375], "log10": [6, 204, 206, 207], "log1p": [6, 102, 104, 204, 205, 207], "log2": [6, 204, 205, 206, 209], "log_bas": 214, "logabsdet": 197, "logaddexp": [6, 76, 209, 215], "logaddexp2": [6, 208, 215], "logarithm": [76, 184, 197, 202, 204, 205, 206, 207, 208, 209, 215, 376, 484], "logic": [14, 19, 210, 211, 212, 213, 473, 484], "logical_and": [6, 51, 211, 212, 213], "logical_not": [6, 52, 164, 210, 212, 213], "logical_or": [6, 53, 210, 211, 213], "logical_xor": [6, 54, 210, 211, 212], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 148, 202], "logsumexp": [76, 208, 209], "lomax": 383, "long": [93, 191], "longer": [113, 119, 488], "look": [341, 445], "lookfor": 6, "loop": 95, "loos": 94, "lorentz": 398, "lose": [113, 119, 121], "low": [109, 111, 115, 116, 360, 388, 391, 404, 480], "lower": [81, 106, 154, 155, 176, 182, 186, 188, 216, 453, 454, 455, 456, 459, 460], "lowest": [49, 95, 96, 360, 388], "lstsq": 6, "m": [4, 10, 74, 92, 93, 95, 106, 109, 111, 113, 115, 116, 119, 120, 121, 125, 131, 132, 133, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 216, 217, 356, 426, 444, 445, 453, 454, 455, 456, 458, 459, 460], "machin": [4, 10, 127, 160, 190, 209, 411], "machineri": 93, "made": [34, 39, 46, 93, 140, 178, 230, 435], "magnitud": [11, 12, 68, 107, 353], "mai": [14, 18, 19, 45, 57, 61, 63, 69, 78, 90, 93, 95, 96, 103, 109, 111, 113, 114, 115, 116, 118, 119, 122, 125, 150, 155, 157, 183, 185, 186, 190, 194, 196, 209, 214, 217, 230, 236, 239, 241, 295, 327, 356, 411, 423, 439, 449, 469, 480], "main": [81, 82, 83, 84, 85, 106, 126, 159, 188, 216, 450, 453, 454, 455, 458, 459], "mainstai": 10, "maintain": [87, 90, 93, 154, 326, 425, 445], "major": [4, 38, 39, 40, 41, 43, 44, 45, 90, 295, 342, 409], "make": [41, 43, 62, 93, 222, 463, 464], "manag": 0, "mani": [10, 480], "manipul": [3, 82, 473, 484], "manual": [4, 93, 449], "mappingproxi": 93, "mask": [93, 177, 216, 342, 349, 357, 444, 455, 459], "mask_func": 216, "mask_indic": [6, 455, 459], "mass": 154, "mat": 6, "match": [11, 12, 39, 63, 69, 73, 76, 86, 93, 140, 142, 150, 163, 215, 217, 355, 356, 413, 439, 444, 445, 448, 470], "math": [10, 100], "mathemat": [473, 484], "matlab": 139, "matmul": [6, 89, 196, 199, 467], "matplotlib": [222, 398], "matric": [126, 143, 162, 177, 184, 185, 187, 189, 192, 194, 195, 196, 197, 199, 217, 222, 484], "matrix": [74, 89, 95, 163, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 217, 222, 437, 458, 465, 467, 473, 484], "matrix_pow": [6, 437], "matrix_rank": 6, "matter": 463, "max": [0, 6, 16, 29, 90, 127, 137, 138, 154, 155, 160, 190, 192, 219, 224, 225, 235, 297, 377, 445, 449, 464, 480], "max_arg": 0, "max_val": 0, "maxima": [137, 218, 219], "maximum": [0, 6, 16, 29, 30, 61, 90, 96, 137, 138, 218, 224, 225, 231, 232, 235, 237, 292, 312, 351, 354, 356, 464], "maximum_sctyp": 6, "may_share_memori": 6, "mean": [3, 6, 10, 21, 34, 36, 38, 39, 40, 41, 42, 43, 45, 49, 67, 73, 81, 82, 84, 90, 95, 97, 98, 106, 109, 110, 111, 115, 116, 120, 121, 122, 123, 124, 125, 141, 142, 143, 144, 145, 146, 147, 150, 159, 162, 183, 194, 203, 216, 221, 223, 236, 239, 241, 295, 300, 308, 337, 344, 345, 346, 360, 373, 375, 378, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 405, 406, 409, 416, 440, 442, 453, 455, 459, 465, 466, 471, 472, 480], "meaningfulli": 480, "meant": 480, "median": [0, 6], "meet": 426, "memori": [3, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 38, 39, 40, 41, 43, 44, 51, 52, 53, 54, 58, 59, 61, 64, 65, 67, 68, 71, 72, 79, 80, 88, 90, 93, 95, 97, 98, 99, 101, 102, 104, 106, 107, 128, 134, 135, 136, 137, 138, 139, 140, 146, 147, 151, 152, 153, 158, 161, 164, 168, 169, 170, 179, 180, 181, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 222, 225, 226, 229, 300, 306, 332, 340, 341, 343, 345, 346, 350, 351, 353, 358, 359, 412, 414, 416, 418, 419, 424, 428, 429, 430, 431, 436, 437, 441, 446, 447, 461, 462, 470, 471, 472, 473, 488], "mersenn": 360, "mesh": 177, "meshgrid": [6, 143, 162, 177, 223, 344], "met": [89, 193], "meta": 93, "metadata": 93, "method": [10, 14, 16, 17, 19, 31, 45, 67, 89, 90, 93, 129, 140, 142, 192, 195, 199, 295, 300, 316, 324, 327, 339, 342, 360, 416, 427, 442, 444, 451, 473], "mgrid": [109, 111, 120, 123, 162, 177], "mgridclass": 223, "middl": [10, 85, 109, 111, 115, 116, 187], "might": [95, 114, 115, 116], "min": [6, 17, 30, 61, 90, 127, 137, 138, 154, 155, 160, 183, 190, 196, 199, 218, 219, 225, 237, 297, 445, 480], "min_scalar_typ": 6, "minima": [138, 224, 225], "minimum": [6, 17, 29, 30, 61, 90, 134, 137, 138, 218, 219, 224, 231, 232, 235, 237, 293, 314, 351, 354], "minlength": 50, "mintypecod": 6, "minu": [104, 136, 226, 414, 462], "miscellan": [2, 473, 484], "mise": 405, "miss": 203, "mix": 217, "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 105, 414, 464], "mode": [60, 66, 70, 90, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 196, 296, 320, 335, 355, 398, 403, 425, 444, 445], "model": 362, "modf": 6, "modifi": [67, 85, 126, 397], "modul": [108, 149, 473], "modulu": [139, 226, 414], "monoton": [87, 154], "moor": 195, "more": [0, 3, 4, 31, 34, 46, 47, 48, 92, 93, 95, 96, 104, 120, 123, 132, 133, 140, 142, 155, 157, 162, 190, 191, 192, 193, 195, 199, 206, 208, 439, 448, 452, 463, 464, 480, 488], "most": [3, 4, 20, 85, 86, 93, 96, 108, 114, 230, 360, 396, 438], "move": [90, 228, 318, 420, 421, 451, 463], "moveaxi": [6, 420, 421, 451], "msg": 0, "msort": 6, "mt19937": 396, "mu": [371, 375, 382, 405], "multi": [2, 90, 162, 177, 223, 332, 344, 463, 473], "multi_dot": [6, 89, 95, 96], "multiarrai": 93, "multidimension": [154, 163, 470], "multinomi": 6, "multipl": [10, 29, 30, 31, 37, 49, 63, 75, 76, 91, 93, 95, 109, 111, 115, 116, 120, 121, 123, 125, 155, 156, 157, 177, 185, 186, 187, 188, 189, 193, 215, 218, 220, 224, 235, 236, 237, 239, 241, 413, 423, 426, 433, 435, 439, 440, 452, 463, 466, 468, 469, 473], "multipli": [6, 77, 95, 187, 238, 352], "multivari": 378, "multivariate_norm": 6, "must": [11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 49, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 64, 65, 68, 71, 72, 73, 76, 77, 78, 79, 80, 86, 88, 89, 92, 101, 102, 103, 104, 107, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 128, 132, 134, 135, 136, 137, 138, 139, 142, 145, 150, 151, 152, 153, 154, 155, 157, 158, 161, 164, 168, 169, 170, 171, 172, 179, 180, 181, 182, 193, 194, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 340, 341, 343, 349, 350, 351, 352, 353, 355, 356, 358, 359, 412, 413, 414, 415, 418, 419, 420, 422, 423, 424, 425, 428, 429, 430, 431, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 461, 462, 466, 469, 470], "mx": 190, "n": [0, 4, 10, 32, 37, 78, 82, 83, 86, 87, 90, 92, 93, 94, 103, 106, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 143, 150, 159, 177, 190, 191, 192, 195, 196, 199, 200, 201, 216, 217, 222, 239, 241, 337, 349, 355, 362, 377, 379, 389, 399, 425, 427, 435, 437, 440, 443, 444, 445, 448, 451, 452, 453, 454, 455, 456, 458, 459, 460, 465, 466, 480], "n1": 222, "n2": [203, 222], "n3": 222, "naiv": 96, "name": [0, 6, 93], "namedtupl": 196, "nan": [9, 14, 15, 19, 29, 30, 35, 38, 39, 40, 88, 134, 137, 138, 165, 168, 169, 170, 171, 172, 205, 218, 219, 220, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 351, 352, 436, 440, 461, 463, 466, 484], "nan_to_num": 6, "nanargmax": [6, 29, 232], "nanargmin": [6, 30, 231], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 137, 138, 218, 219, 225, 237], "nanmean": [6, 220, 239, 241, 440, 466], "nanmedian": 6, "nanmin": [6, 137, 138, 219, 224, 225, 235], "nanpercentil": 6, "nanprod": [6, 352], "nanquantil": 6, "nanstd": [6, 220, 236, 241, 440, 466], "nansum": 6, "nanvar": [6, 220, 236, 239, 440, 466], "nat": 170, "nativ": 93, "native_cod": 93, "native_dt": 93, "natur": [197, 204, 205, 206, 207, 208, 209, 215], "nbad": 372, "nbyte": 90, "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 485], "ndim": [6, 32, 34, 43, 46, 47, 48, 74, 82, 85, 90, 93, 126, 178, 199, 218, 224, 345, 449, 451, 471], "ndmin": 34, "nearest": [33, 59, 128, 135, 136, 226, 414, 419, 422, 462], "necessari": [4, 14, 19, 21, 34, 38, 39, 41, 43, 46, 69, 77, 78, 94, 105, 113, 119, 121, 126, 140, 148, 202, 214, 217, 220, 233, 234, 236, 238, 239, 240, 241, 352, 416, 440, 442, 466, 488], "necessarili": [185, 187], "need": [4, 34, 39, 85, 95, 149, 444, 445, 470], "needs_init": 93, "needs_pyapi": 93, "neg": [6, 10, 14, 19, 33, 50, 68, 84, 85, 87, 90, 103, 106, 109, 111, 114, 115, 116, 119, 122, 131, 134, 145, 150, 154, 168, 169, 170, 171, 172, 191, 230, 235, 237, 239, 240, 241, 327, 350, 351, 352, 355, 379, 422, 440, 442, 444, 445, 450, 466], "negat": 426, "negative_binomi": 6, "neginf": 230, "neither": [89, 137, 138, 199, 217, 235, 237], "nest": [42, 92, 157, 423, 439, 469], "nested_it": 6, "net": [137, 138, 219, 225], "never": [416, 464], "new": [20, 34, 45, 55, 56, 62, 63, 73, 76, 77, 78, 85, 90, 92, 93, 94, 97, 98, 103, 137, 138, 140, 144, 145, 146, 147, 148, 157, 159, 202, 214, 215, 216, 219, 225, 228, 233, 234, 238, 240, 295, 324, 327, 337, 345, 346, 413, 416, 420, 421, 423, 435, 439, 449, 451, 469, 470, 471, 472, 480], "new_dtyp": 93, "new_ord": 93, "newaxi": 103, "newbyteord": [6, 93], "newli": [11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 38, 39, 40, 45, 51, 52, 53, 54, 58, 59, 61, 64, 65, 67, 68, 71, 72, 79, 80, 88, 90, 97, 98, 99, 101, 102, 104, 106, 107, 128, 134, 135, 136, 137, 138, 139, 146, 147, 151, 152, 153, 158, 161, 164, 168, 169, 170, 179, 180, 181, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 225, 226, 229, 295, 300, 340, 341, 343, 345, 346, 350, 351, 353, 358, 359, 412, 414, 418, 419, 424, 428, 429, 430, 431, 436, 437, 441, 446, 447, 461, 462, 471, 472], "newshap": 416, "next": [4, 127, 341], "nextaft": 6, "ngood": 372, "ni": [222, 356, 444, 445], "nine": 362, "ninja": 4, "nj": [356, 444, 445], "njm": 95, "nk": [356, 444, 445], "nl": 10, "nlk": 95, "nn": 222, "noisi": 190, "non": [21, 32, 34, 38, 39, 40, 41, 42, 43, 45, 49, 50, 67, 73, 81, 82, 84, 87, 90, 97, 98, 105, 106, 110, 119, 122, 124, 130, 134, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 159, 162, 166, 168, 177, 202, 203, 214, 216, 223, 230, 231, 232, 235, 237, 239, 241, 295, 300, 317, 327, 342, 344, 345, 346, 349, 351, 360, 380, 381, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 440, 448, 453, 455, 459, 465, 466, 470, 471, 472], "nonc": [380, 381], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 38, 39, 40, 41, 42, 43, 45, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 164, 168, 169, 170, 171, 172, 179, 180, 181, 183, 190, 192, 193, 194, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 310, 312, 313, 314, 318, 319, 320, 323, 325, 326, 329, 330, 331, 333, 335, 336, 337, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 450, 451, 452, 453, 455, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 480], "nonzero": [6, 32, 73, 90, 130, 177, 470, 480], "nor": [137, 138, 187, 235, 237], "norm": [6, 10, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 183, 187, 190, 484], "normal": [6, 74, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 154, 185, 186, 196, 209, 360, 375, 378, 389, 401], "not_equ": [6, 99, 151, 152, 180, 181], "note": [11, 12, 13, 14, 18, 19, 20, 29, 30, 31, 32, 33, 44, 67, 75, 79, 85, 87, 88, 90, 93, 95, 96, 103, 105, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 135, 137, 138, 141, 142, 143, 144, 145, 154, 162, 168, 185, 203, 214, 226, 229, 239, 240, 241, 300, 324, 342, 349, 355, 358, 363, 365, 366, 376, 381, 414, 416, 433, 440, 441, 443, 448, 449, 452, 461, 463, 464, 466, 467], "notic": [93, 119, 122], "notimplementederror": [11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 38, 39, 41, 43, 51, 52, 53, 54, 55, 56, 58, 59, 61, 64, 65, 67, 68, 71, 72, 79, 80, 88, 90, 97, 98, 99, 101, 102, 104, 106, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 158, 159, 164, 168, 169, 170, 179, 180, 181, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 224, 225, 226, 229, 235, 236, 237, 239, 240, 241, 295, 340, 341, 343, 345, 346, 350, 351, 352, 353, 358, 359, 412, 414, 418, 419, 424, 428, 429, 430, 431, 433, 436, 437, 440, 441, 442, 446, 447, 461, 462, 466, 471, 472], "now": [14, 19, 41, 43, 82, 187, 190, 216], "np": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 300, 303, 305, 308, 309, 310, 316, 318, 322, 327, 328, 329, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 358, 359, 385, 394, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "nr": 10, "nsamp": 372, "nsampl": 372, "nth": 448, "nuc": 194, "num": [0, 93, 100, 148, 202, 214, 452, 464], "number": [10, 14, 15, 18, 19, 20, 21, 32, 33, 40, 49, 50, 55, 56, 73, 82, 84, 86, 87, 90, 93, 94, 95, 96, 103, 106, 107, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 125, 127, 128, 136, 141, 142, 144, 145, 148, 150, 154, 155, 159, 160, 165, 166, 167, 168, 174, 177, 183, 189, 192, 196, 197, 199, 200, 201, 202, 209, 214, 226, 230, 233, 234, 235, 237, 238, 239, 240, 241, 316, 325, 328, 339, 342, 349, 352, 353, 360, 362, 372, 396, 414, 415, 419, 420, 421, 422, 429, 432, 440, 443, 449, 451, 453, 462, 463, 465, 466, 480, 484], "number_of_dimens": [90, 316, 339], "numer": [3, 4, 10, 11, 12, 13, 15, 22, 23, 24, 25, 26, 28, 33, 64, 65, 68, 71, 72, 88, 93, 99, 101, 104, 114, 115, 116, 119, 121, 136, 137, 138, 151, 152, 161, 165, 168, 169, 170, 180, 181, 204, 205, 206, 207, 219, 225, 229, 340, 343, 350, 351, 353, 410, 419, 422, 428, 429, 430, 431, 441, 446, 447, 461, 484], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 304, 308, 309, 310, 316, 322, 327, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 480, 484], "nx": 222, "ny": 222, "nyquist": [10, 109, 111, 112, 113, 114, 115, 116, 119, 121, 122, 124], "o": [4, 14, 19, 93], "obj": [29, 30, 31, 93, 140, 154], "obj2sctyp": 6, "object": [21, 34, 38, 39, 40, 41, 42, 43, 44, 45, 67, 81, 82, 84, 90, 93, 97, 98, 103, 106, 110, 124, 127, 129, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 160, 162, 183, 186, 194, 202, 203, 214, 216, 223, 295, 300, 324, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 416, 453, 455, 459, 465, 471, 472, 480], "obtain": [10, 85, 182, 342], "obviou": 10, "occupi": [127, 160], "occur": [20, 45, 57, 63, 69, 90, 95, 157, 185, 217, 230, 295, 423, 439, 469], "occurr": [29, 30, 50, 87, 154, 231, 232, 463], "odd": [10, 110, 113, 117, 118, 119, 121, 122, 124], "off": [21, 185, 190], "offset": [85, 90, 93, 141, 142, 216, 303, 336, 450, 455, 456, 459, 460], "often": 153, "ogrid": [162, 177, 470], "ogridclass": 344, "oil": [362, 379], "omit": [360, 388], "onc": 189, "one": [3, 4, 29, 30, 31, 34, 36, 42, 46, 47, 48, 49, 61, 66, 69, 70, 73, 90, 93, 97, 99, 103, 105, 106, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 132, 133, 134, 137, 138, 142, 146, 150, 155, 157, 159, 162, 167, 177, 187, 191, 194, 204, 205, 207, 216, 218, 219, 222, 223, 224, 225, 231, 232, 238, 240, 300, 308, 311, 342, 344, 346, 349, 352, 379, 421, 426, 433, 438, 439, 442, 444, 448, 452, 455, 456, 459, 460, 463, 471, 480], "oneapi": [21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472], "onedpl": 4, "onemkl": [4, 185, 187], "ones": [6, 34, 41, 43, 49, 76, 88, 90, 95, 97, 98, 99, 103, 106, 125, 146, 147, 158, 159, 178, 190, 192, 215, 216, 233, 238, 346, 352, 413, 417, 421, 451, 453, 461, 471, 472], "ones_lik": [6, 34, 98, 147, 345, 472], "onli": [10, 14, 19, 21, 29, 30, 31, 34, 37, 38, 39, 41, 43, 45, 46, 49, 61, 67, 70, 74, 90, 93, 95, 96, 97, 98, 106, 112, 122, 126, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 162, 182, 186, 188, 196, 199, 202, 203, 214, 216, 217, 218, 220, 221, 224, 230, 231, 232, 235, 236, 237, 238, 239, 241, 295, 327, 329, 345, 346, 348, 349, 350, 352, 360, 382, 388, 404, 416, 433, 440, 442, 445, 459, 463, 464, 466, 470, 471, 472, 480], "open": [142, 162, 177, 202, 344, 360, 390, 392, 393, 395, 404, 443], "opencl": [21, 34, 38, 39, 40, 41, 43, 67, 81, 84, 97, 98, 106, 110, 124, 141, 142, 143, 144, 146, 147, 148, 159, 202, 203, 214, 223, 344, 345, 346, 453, 465, 471, 472], "oper": [10, 13, 51, 52, 53, 54, 88, 93, 95, 96, 99, 103, 126, 136, 139, 151, 152, 164, 179, 180, 181, 182, 210, 212, 217, 218, 224, 226, 229, 230, 231, 232, 340, 343, 350, 351, 355, 414, 418, 441, 449, 461, 463, 464, 473, 484], "operand": [95, 96, 201, 347, 448], "opposit": [10, 93, 105, 113, 118, 349], "optim": [4, 95, 96, 154, 155], "option": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 49, 51, 52, 53, 54, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 164, 165, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 186, 188, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 300, 308, 337, 340, 341, 343, 344, 345, 346, 347, 350, 351, 352, 353, 355, 358, 359, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 409, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 488], "ord": 194, "order": [10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 31, 34, 38, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 58, 59, 61, 64, 65, 67, 68, 71, 72, 79, 80, 85, 87, 88, 90, 93, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 109, 111, 114, 115, 116, 119, 121, 125, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 146, 147, 150, 151, 152, 153, 154, 158, 161, 164, 168, 169, 170, 179, 180, 181, 183, 185, 186, 187, 188, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 222, 225, 226, 228, 229, 249, 294, 295, 300, 308, 318, 321, 326, 329, 337, 340, 341, 342, 343, 345, 346, 348, 350, 351, 353, 358, 359, 409, 412, 414, 416, 418, 419, 424, 425, 428, 429, 430, 431, 433, 436, 437, 441, 446, 447, 448, 451, 461, 462, 463, 465, 470, 471, 472, 484], "ordin": [190, 198], "ordinari": [119, 163, 182], "org": 4, "orient": [75, 356, 445], "origin": [55, 85, 90, 113, 119, 121, 194, 222, 228, 238, 240, 416, 420, 463], "ortho": [10, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125], "orthogon": [187, 196], "orthonorm": 196, "other": [31, 36, 45, 55, 56, 86, 90, 93, 114, 115, 116, 119, 121, 135, 143, 159, 185, 187, 193, 228, 245, 246, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 280, 282, 284, 287, 288, 289, 295, 360, 404, 421, 433, 463, 473, 484], "otherwis": [3, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 79, 80, 81, 86, 88, 90, 93, 95, 97, 98, 99, 100, 101, 102, 104, 106, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 158, 159, 163, 164, 168, 169, 170, 179, 180, 181, 190, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 231, 232, 235, 236, 237, 238, 239, 240, 241, 295, 324, 340, 341, 343, 345, 346, 350, 351, 352, 353, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 415, 416, 418, 419, 424, 425, 428, 429, 430, 431, 433, 436, 437, 438, 440, 441, 442, 446, 447, 450, 461, 462, 466, 470, 471, 472], "otim": 448, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 183, 189, 193, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 290, 291, 292, 293, 296, 297, 300, 301, 302, 308, 312, 313, 314, 319, 325, 331, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 358, 359, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472], "outer": [6, 75, 85, 95, 96, 178], "output": [10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 45, 51, 52, 53, 54, 58, 59, 61, 64, 65, 67, 68, 71, 72, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 89, 90, 93, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 119, 120, 121, 122, 124, 125, 128, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 158, 159, 161, 162, 164, 165, 166, 168, 169, 170, 177, 179, 180, 181, 193, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 229, 232, 233, 234, 236, 238, 239, 240, 241, 295, 300, 340, 341, 343, 344, 345, 346, 350, 351, 352, 353, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 415, 418, 419, 422, 424, 426, 428, 429, 430, 431, 433, 436, 437, 438, 440, 441, 442, 444, 446, 447, 449, 450, 453, 455, 459, 461, 462, 463, 464, 465, 466, 470, 471, 472, 484, 488], "outsid": [154, 155], "over": [10, 14, 19, 49, 76, 77, 78, 89, 90, 95, 96, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 129, 131, 143, 148, 154, 155, 163, 194, 202, 214, 215, 217, 218, 220, 222, 224, 233, 234, 235, 236, 237, 238, 239, 240, 241, 308, 352, 356, 360, 387, 392, 403, 404, 413, 440, 442, 444, 445, 448, 452, 464, 466, 484], "overal": [109, 111, 115, 116, 120, 121, 123, 125], "overflow": 134, "overrid": [75, 98, 147, 346, 472], "overview": 2, "overwrite_input": 221, "p": [10, 183, 190, 191, 362, 365, 370, 376, 379, 464], "pack": [85, 409, 484], "packag": [0, 3], "packbit": 6, "pad": [6, 93, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125], "page": [3, 484], "pair": [10, 96, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 185], "parallel": [1, 3, 4, 9, 473], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 300, 305, 308, 324, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472], "parameter": [360, 382, 404], "parametr": 452, "pareto": 6, "pars": [142, 203], "part": [3, 10, 18, 90, 119, 137, 138, 161, 166, 167, 173, 174, 185, 186, 188, 216, 219, 225, 227, 309, 322, 410, 411, 434, 455, 459, 462, 463, 480], "partial": [31, 433], "particular": [93, 193], "particularli": 95, "partit": [6, 21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 433, 453, 455, 459, 465, 471, 472, 480], "pass": [21, 34, 38, 39, 40, 41, 42, 43, 67, 81, 82, 84, 90, 93, 97, 98, 106, 110, 124, 141, 142, 143, 144, 145, 146, 147, 155, 159, 162, 177, 190, 203, 216, 223, 230, 300, 324, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 453, 455, 456, 459, 460, 465, 471, 472], "path": [4, 95, 96, 142, 203], "path_info": 96, "pathlib": 203, "pattern": 49, "penros": 195, "per": [95, 110, 124], "percentil": [6, 221], "perf_count": 0, "perform": [14, 19, 39, 40, 61, 86, 95, 109, 111, 114, 115, 116, 120, 121, 123, 125, 131, 182, 352, 442], "period": [10, 464], "permit": 142, "permut": [6, 90, 95, 228, 337, 451, 484], "phase": [10, 18, 464], "phase_deg": 464, "pi": [0, 9, 10, 22, 24, 26, 27, 71, 72, 79, 80, 108, 358, 430, 431, 446, 447, 452, 464, 488], "pickl": [142, 203], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 14, 15, 19, 20, 33, 61, 63, 77, 78, 89, 90, 103, 105, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 140, 162, 165, 217, 218, 220, 224, 230, 233, 234, 236, 238, 239, 240, 241, 308, 327, 329, 337, 344, 352, 355, 356, 397, 416, 420, 422, 433, 439, 440, 442, 444, 450, 466, 480], "platform": [77, 78, 93, 233, 234, 238, 240, 352, 442], "pleas": [0, 3, 37, 91, 95, 154, 156, 468, 480], "plot": 398, "plt": [222, 398], "plu": [204, 205, 207], "point": [10, 11, 12, 18, 21, 27, 33, 38, 39, 49, 68, 76, 93, 97, 98, 102, 106, 107, 108, 113, 114, 118, 119, 120, 121, 122, 127, 128, 134, 141, 142, 143, 145, 146, 147, 150, 159, 161, 190, 191, 202, 203, 208, 209, 215, 220, 230, 236, 239, 241, 341, 345, 346, 360, 389, 401, 410, 412, 413, 422, 424, 425, 440, 452, 453, 466, 471, 472, 484], "pointer": 93, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 33, 51, 52, 53, 54, 58, 59, 64, 65, 68, 71, 72, 79, 80, 88, 90, 99, 101, 102, 104, 107, 128, 134, 135, 136, 137, 138, 139, 151, 152, 153, 158, 161, 164, 168, 169, 170, 179, 180, 181, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 225, 226, 229, 340, 341, 343, 350, 351, 353, 358, 359, 360, 387, 412, 414, 418, 419, 422, 424, 428, 429, 430, 431, 436, 437, 441, 446, 447, 461, 462], "portion": [154, 155], "posinf": 230, "posit": [6, 10, 14, 15, 19, 21, 33, 38, 39, 40, 58, 68, 84, 85, 90, 103, 106, 107, 109, 111, 114, 115, 116, 119, 122, 124, 127, 134, 142, 165, 168, 169, 170, 171, 172, 182, 191, 200, 228, 230, 235, 237, 240, 318, 332, 340, 362, 386, 420, 421, 422, 424, 426, 436, 437, 450, 451], "possess": 185, "possibl": [10, 44, 45, 47, 48, 90, 95, 96, 103, 137, 138, 150, 154, 216, 295, 324, 416, 435, 438, 443, 444, 445, 451], "possibli": 42, "pow": 480, "power": [6, 10, 102, 108, 134, 191, 437, 465], "pre": 155, "precis": [11, 12, 49, 77, 78, 93, 95, 127, 134, 161, 190, 216, 233, 234, 238, 240, 352, 410, 442, 450], "predecessor": 464, "prefer": [60, 67, 90, 300, 327, 342], "prepend": [86, 94, 449], "present": [21, 34, 38, 39, 40, 41, 42, 43, 67, 81, 82, 84, 90, 93, 97, 98, 106, 110, 124, 141, 142, 143, 144, 145, 146, 147, 159, 162, 203, 216, 223, 235, 237, 240, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 453, 455, 459, 465, 471, 472], "preserv": [45, 46, 47, 48, 61, 90, 93, 95, 131, 132, 133, 134, 186, 187, 188, 295, 450, 463], "press": 10, "prevent": 95, "previou": 49, "print": [0, 4, 40, 49, 50, 66, 87, 93, 96, 360, 379, 384], "print_device_info": 0, "printabl": 96, "printopt": 6, "prior": 86, "prob1": [208, 209], "prob12": [208, 209], "prob2": [208, 209], "probabl": [154, 209, 362, 370, 379], "proce": 480, "process": 10, "processor": 95, "prod": [6, 77, 90, 200, 201, 238, 480], "produc": [10, 32, 93, 203, 356, 425, 445], "product": [6, 75, 77, 89, 90, 95, 96, 163, 177, 178, 193, 198, 200, 201, 217, 229, 233, 238, 301, 347, 352, 448, 467, 484], "program": [4, 135], "progress": [148, 202], "project": [93, 353], "promot": [13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 34, 38, 39, 41, 43, 51, 53, 54, 57, 58, 68, 71, 72, 79, 80, 88, 101, 102, 104, 134, 136, 137, 138, 139, 148, 158, 179, 202, 204, 205, 206, 207, 208, 209, 214, 217, 219, 225, 226, 229, 341, 351, 358, 359, 412, 414, 417, 418, 424, 428, 430, 431, 436, 437, 441, 446, 447, 449, 461, 462], "promote_typ": 6, "propag": [93, 137, 138, 218, 219, 224, 225, 233, 234, 235, 237, 238, 240], "proper": [137, 138, 185, 187], "properti": [10, 21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 186, 188, 196, 202, 203, 214, 216, 223, 243, 295, 300, 304, 306, 307, 309, 311, 315, 316, 322, 327, 328, 332, 337, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472, 480], "protocol": [42, 93, 140], "prototyp": 98, "provid": [0, 6, 10, 29, 30, 63, 69, 76, 90, 91, 95, 96, 103, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 144, 154, 155, 157, 171, 172, 215, 231, 232, 235, 237, 238, 240, 360, 388, 391, 413, 423, 439, 444, 452, 463, 469, 470, 488], "pseudo": [195, 360], "ptp": 6, "pure": [10, 113, 119, 121, 122], "purpos": [32, 190], "put": [6, 10, 90, 105, 113, 119, 121, 349, 356, 445, 480], "put_along_axi": [6, 355, 445], "putmask": [6, 355], "pval": 377, "py": 4, "pypi": 4, "pyplot": [222, 398], "pytest": 4, "python": [0, 2, 3, 42, 90, 93, 139, 140, 226, 310, 414, 415, 480], "q": [187, 191, 196, 201, 221], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [18, 26, 109], "quantil": 6, "quaternion": 191, "question": 81, "queue": [21, 34, 38, 39, 40, 41, 42, 43, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472], "quick": [2, 3], "quickli": [177, 488], "quotient": 27, "r": [80, 196], "r2": 196, "rad": 80, "rad2deg": [6, 79, 80, 464], "radian": [6, 18, 22, 23, 24, 26, 27, 79, 80, 358, 464, 488], "rais": [11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 38, 39, 40, 41, 43, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 67, 68, 69, 71, 72, 76, 79, 80, 87, 88, 89, 90, 97, 98, 99, 101, 102, 104, 106, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 158, 159, 164, 168, 169, 170, 179, 180, 181, 191, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 224, 225, 226, 229, 231, 232, 235, 236, 237, 239, 240, 241, 295, 296, 340, 341, 343, 345, 346, 350, 351, 352, 353, 358, 359, 412, 413, 414, 416, 418, 419, 424, 428, 429, 430, 431, 433, 435, 436, 437, 438, 440, 441, 442, 446, 447, 461, 462, 466, 471, 472, 480], "rand": [6, 96, 360, 390, 392, 393, 395], "randint": [6, 90, 310, 360, 391], "randn": [6, 131, 132, 133, 195, 196, 199, 201, 360, 439], "random": [90, 96, 131, 132, 133, 187, 193, 195, 196, 199, 201, 310, 439, 473, 484], "random_integ": [6, 360, 388], "random_sampl": [6, 360, 387, 390, 393, 395], "randomli": 384, "randomst": 388, "ranf": 6, "rang": [0, 87, 144, 154, 155, 209, 354, 355, 379, 384, 415, 439, 448, 451, 464, 484], "rank": [103, 105, 143, 190, 192, 443], "rate": [110, 124], "rather": 342, "ratio": [0, 88, 136, 190, 461, 488], "ration": 484, "ravel": [6, 90, 105, 130, 194, 308, 347, 480], "ravel_multi_index": 6, "raw": 196, "rayleigh": 6, "rcond": [190, 195], "re": [29, 30, 50, 81, 420], "read": [81, 85, 90, 93, 141, 142, 144, 145, 203, 308, 409, 416], "readonli": 93, "real": [6, 11, 12, 18, 21, 27, 35, 58, 59, 68, 76, 90, 108, 111, 113, 118, 119, 120, 121, 122, 123, 125, 127, 135, 137, 138, 139, 158, 161, 166, 173, 174, 182, 185, 186, 187, 188, 192, 195, 196, 197, 199, 208, 209, 215, 219, 225, 226, 230, 239, 241, 362, 379, 411, 412, 413, 414, 424, 434, 440, 462, 463, 466, 480, 484], "real_if_clos": [6, 18, 161, 410], "rearrang": [90, 318, 484], "reason": 121, "rebuild": 92, "recal": 93, "recent": [20, 438], "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 424, 436], "recommend": [95, 342, 449], "reconstruct": [93, 199, 463], "recov": 10, "reduc": [14, 19, 29, 30, 49, 196, 199, 215, 218, 220, 222, 224, 231, 232, 235, 236, 237, 238, 239, 240, 241, 352, 413, 440, 442, 466], "reduce_hypot": 158, "reduct": [14, 19], "redund": 122, "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 480], "reflect": 480, "reflector": 196, "regardless": [93, 186, 188, 468], "regular": 203, "rel": [15, 90, 165, 332, 420, 421], "relat": 93, "relev": [93, 148, 202, 214], "rem": 139, "remain": [14, 19, 49, 96, 123, 125, 154, 215, 220, 228, 236, 239, 241, 413, 416, 440, 466], "remaind": [6, 136, 139, 226, 351], "remov": [29, 30, 79, 85, 90, 103, 119, 330, 352, 358, 438, 442, 484], "reorder": [95, 131, 201, 228], "rep": 449, "repeat": [6, 90, 109, 111, 115, 116, 120, 121, 123, 125, 126, 185, 186, 187, 188, 222, 349, 449, 452, 463, 480], "repeatedli": 95, "repetit": [0, 415, 449], "replac": [3, 10, 42, 61, 105, 230, 233, 234, 349, 356, 365, 426, 480], "replic": 449, "repo": 4, "repr": 283, "repres": [10, 21, 34, 38, 39, 41, 42, 43, 49, 93, 96, 114, 122, 140, 143, 148, 150, 162, 197, 202, 214, 222, 241, 360, 457, 480], "represent": [51, 53, 54, 96, 127, 160, 162, 230, 341, 463, 480], "request": 421, "requir": [4, 6, 34, 39, 40, 41, 43, 45, 90, 93, 95, 107, 162, 230, 295, 327], "res_cpu": 81, "res_host": 81, "resampl": 119, "rese": 396, "reset": 480, "reshap": [0, 6, 13, 29, 30, 32, 46, 48, 49, 81, 82, 83, 85, 88, 89, 90, 91, 92, 95, 103, 105, 112, 117, 131, 139, 156, 162, 163, 177, 178, 194, 216, 217, 218, 224, 229, 303, 308, 327, 337, 349, 384, 409, 420, 441, 448, 450, 452, 455, 456, 459, 460, 461, 463, 468, 480], "resid": [103, 107, 140], "residu": 190, "resiz": [6, 103, 480], "resolut": 127, "resolv": [76, 103, 215, 413], "resourc": 0, "respect": [10, 13, 27, 51, 53, 54, 88, 90, 99, 134, 136, 139, 150, 151, 152, 179, 180, 181, 208, 209, 210, 212, 213, 226, 229, 332, 343, 351, 414, 418, 441, 461, 464], "rest": 37, "restor": 420, "result": [0, 4, 10, 14, 19, 27, 29, 30, 32, 49, 51, 52, 53, 54, 57, 61, 63, 68, 73, 76, 77, 78, 88, 89, 93, 96, 98, 99, 104, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 128, 134, 136, 141, 142, 143, 144, 145, 147, 148, 151, 152, 154, 155, 162, 164, 168, 169, 170, 171, 172, 179, 180, 181, 182, 185, 194, 196, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 224, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 342, 343, 346, 347, 351, 352, 355, 360, 362, 392, 413, 416, 417, 418, 419, 421, 422, 425, 428, 429, 435, 439, 440, 442, 444, 445, 448, 449, 452, 457, 461, 462, 463, 466, 470, 472, 480], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 57, 93, 484], "ret": 359, "retriev": [85, 93], "retstep": 202, "returnreturn_count": 463, "return_index": 463, "return_invers": 463, "reus": [140, 155, 416], "revers": [85, 90, 126, 131, 132, 133, 337, 451, 452, 465], "rewrit": 190, "rfft": [6, 10, 110, 113, 118, 119, 120, 121, 123, 124, 125], "rfft2": [6, 120], "rfftfreq": [6, 110], "rfftn": [6, 108, 111, 121, 122, 123], "right": [10, 61, 75, 85, 87, 132, 133, 158, 179, 185, 186, 187, 188, 193, 201, 216, 403, 413, 418, 425, 450, 452, 455, 459, 465], "right_shift": [6, 179], "rightmost": [154, 155, 201], "rint": [6, 33, 59, 128, 135, 422, 462], "roll": [6, 421], "rollaxi": [6, 420], "root": [6, 58, 158, 183, 412, 413, 424, 436, 437], "rot90": 6, "roughli": [93, 190], "round": [6, 21, 33, 59, 90, 128, 135, 136, 185, 226, 414, 419, 462, 480, 484], "round_": 6, "roundoff": [113, 118], "routin": [2, 473, 480], "row": [43, 45, 62, 63, 77, 78, 85, 90, 92, 106, 132, 133, 150, 157, 159, 162, 193, 199, 295, 342, 409, 423, 435, 439, 453, 455, 463, 468, 469], "row_stack": [6, 469], "rowvar": 74, "rsqrt": [412, 436], "rtol": [15, 165], "rule": [13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 34, 38, 39, 41, 43, 49, 51, 53, 54, 57, 58, 68, 69, 71, 72, 75, 78, 79, 80, 88, 101, 102, 104, 136, 137, 138, 139, 148, 158, 179, 202, 204, 205, 206, 207, 208, 209, 214, 215, 217, 219, 220, 225, 226, 229, 236, 239, 241, 341, 351, 358, 359, 412, 413, 414, 417, 418, 424, 428, 430, 431, 436, 437, 440, 441, 442, 446, 447, 452, 461, 462, 466], "run": [0, 4], "runtim": 4, "runtimewarn": [235, 237], "s1": [90, 93, 178, 332], "s10": 93, "s16": 93, "s2": [90, 93, 332], "s25": 93, "s3": [90, 332], "safe": [45, 57, 63, 69, 90, 95, 157, 217, 295, 423, 439, 469], "safe_ev": 6, "said": 201, "same": [4, 10, 11, 12, 13, 14, 15, 19, 20, 27, 29, 30, 31, 32, 33, 35, 36, 41, 43, 44, 45, 49, 51, 52, 53, 54, 56, 62, 63, 68, 76, 77, 78, 85, 86, 87, 88, 89, 90, 92, 98, 99, 103, 105, 114, 115, 116, 121, 126, 128, 134, 136, 137, 138, 139, 140, 147, 150, 151, 152, 153, 154, 155, 157, 158, 161, 163, 164, 165, 171, 172, 173, 178, 179, 180, 181, 187, 191, 196, 208, 209, 210, 212, 213, 215, 218, 219, 220, 224, 225, 226, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 324, 337, 341, 343, 346, 349, 351, 352, 356, 360, 382, 388, 404, 409, 410, 413, 414, 415, 418, 420, 421, 423, 425, 426, 433, 438, 439, 440, 441, 442, 444, 445, 448, 450, 454, 456, 458, 460, 461, 466, 467, 469, 472, 488], "same_kind": [45, 57, 63, 69, 90, 95, 157, 217, 295, 423, 439, 469], "sampl": [10, 110, 117, 122, 124, 148, 150, 154, 202, 214, 356, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 445, 452, 455, 459, 473, 484], "sample_r": 124, "satisfi": [34, 39, 41, 43, 45, 90, 105, 189, 295, 349, 426], "save": [6, 142, 488], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [13, 15, 20, 27, 34, 35, 36, 38, 39, 41, 42, 43, 51, 53, 54, 57, 67, 68, 69, 75, 81, 84, 86, 88, 89, 90, 93, 95, 96, 99, 105, 110, 124, 126, 134, 136, 137, 138, 139, 146, 147, 148, 150, 151, 152, 153, 154, 155, 158, 163, 165, 167, 174, 175, 178, 179, 180, 181, 198, 202, 208, 209, 210, 212, 213, 214, 216, 217, 219, 222, 225, 226, 229, 305, 310, 339, 341, 343, 349, 351, 355, 356, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 382, 383, 385, 386, 388, 391, 394, 396, 400, 402, 403, 404, 405, 406, 407, 408, 411, 414, 418, 425, 426, 441, 444, 448, 452, 461, 462, 465, 467, 470, 480], "scale": [10, 96, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 148, 178, 196, 202, 214, 360, 367, 369, 371, 372, 373, 374, 382, 394, 399, 406], "scientif": 10, "scipi": 100, "scope": 4, "script": 4, "sctype2char": 6, "search": [96, 473, 484], "searchsort": [6, 87, 90, 154, 433, 480], "second": [13, 15, 27, 35, 36, 49, 51, 53, 54, 68, 75, 85, 88, 89, 93, 96, 99, 102, 109, 110, 111, 112, 115, 116, 119, 122, 124, 134, 136, 137, 138, 139, 150, 151, 152, 154, 155, 156, 157, 158, 163, 165, 178, 179, 180, 181, 208, 209, 210, 212, 213, 216, 217, 218, 219, 222, 224, 225, 226, 229, 343, 347, 351, 414, 418, 437, 441, 443, 448, 450, 461, 467], "section": [4, 37, 93, 111, 116, 121, 125, 480], "see": [3, 33, 93, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 140, 154, 190, 377, 422, 455, 456, 459, 460, 463, 480], "seed": [6, 90, 96, 310, 360], "seek": 142, "seldom": 134, "select": [6, 69, 105, 218, 224, 438, 444, 452, 473], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472], "self": [90, 93, 129, 244, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 307, 360], "semant": 154, "sens": 201, "sep": [142, 145], "separ": [10, 90, 93, 95, 142, 145, 155, 230, 324], "sequenc": [42, 46, 47, 48, 62, 63, 66, 70, 92, 95, 96, 97, 98, 109, 111, 115, 116, 119, 120, 121, 123, 125, 146, 147, 148, 154, 155, 157, 162, 177, 193, 202, 214, 228, 345, 346, 349, 384, 397, 415, 417, 423, 435, 439, 448, 452, 469, 471, 472], "sequenti": [70, 74, 100, 221, 227, 238], "seri": [10, 119, 376], "set": [10, 29, 30, 34, 45, 60, 73, 81, 82, 84, 87, 90, 93, 95, 97, 146, 154, 155, 159, 162, 192, 194, 195, 202, 218, 224, 231, 232, 240, 285, 295, 296, 307, 327, 345, 346, 352, 426, 428, 429, 442, 455, 459, 471, 472, 480], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 93], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 189, "sh": [90, 324], "shape": [4, 6, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 41, 45, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 92, 93, 97, 98, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 128, 131, 134, 135, 136, 137, 138, 139, 143, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 184, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 316, 324, 328, 330, 337, 339, 340, 341, 343, 344, 345, 346, 350, 351, 352, 353, 355, 356, 358, 359, 360, 369, 372, 377, 378, 383, 387, 388, 389, 390, 391, 392, 393, 395, 400, 401, 407, 409, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 453, 454, 456, 458, 459, 460, 461, 462, 466, 468, 469, 470, 471, 472, 473, 484], "share": [21, 34, 38, 39, 40, 41, 42, 43, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 453, 455, 459, 465, 471, 472], "shared_bin": 155, "shares_memori": 6, "shift": [10, 109, 111, 112, 116, 117, 179, 418, 420], "short": [462, 480], "shorter": [113, 119], "shorthand": [11, 12, 13, 51, 52, 53, 54, 88, 99, 136, 151, 152, 164, 179, 180, 181, 210, 212, 217, 226, 229, 340, 343, 350, 351, 414, 418, 441, 461, 470], "should": [29, 30, 37, 45, 85, 87, 89, 90, 95, 96, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 139, 142, 149, 154, 177, 190, 191, 217, 228, 231, 232, 235, 237, 295, 326, 377, 416, 425, 444, 448, 450, 464, 480], "show": [9, 36, 93, 126, 158, 213, 222, 230, 233, 234, 235, 237, 240, 398], "show_config": 6, "shown": 4, "shuffl": 6, "side": [90, 150, 187, 326, 425], "sigma": [375, 382], "sign": [6, 10, 15, 68, 93, 165, 184, 197, 226, 340, 350, 352, 414, 429, 442, 462], "signal": [10, 110, 113, 118, 119, 121, 124, 464], "signatur": [216, 217], "signbit": [6, 428], "signific": 95, "signum": 428, "similar": [3, 38, 39, 90, 93, 148, 202, 214, 216, 300, 327, 349, 360, 388, 455, 456, 459, 460], "simpl": [4, 213, 484], "simpli": [83, 90, 142, 154, 155, 337], "sin": [0, 6, 24, 71, 187, 222, 431, 446, 452], "sinc": [6, 90, 119, 185, 187, 329, 342], "sine": [22, 23, 24, 25, 26, 27, 28, 71, 72, 430, 431, 446, 447], "singl": [9, 10, 31, 56, 62, 90, 95, 96, 150, 193, 218, 224, 330, 352, 360, 379, 388, 389, 390, 391, 392, 393, 395, 401, 442, 452, 480], "singleton": [14, 19, 49, 103, 215, 220, 235, 236, 237, 239, 241, 413, 438, 440, 466], "singular": [189, 190, 192, 195, 199], "sinh": [6, 25, 72, 430, 447], "size": [0, 6, 21, 29, 30, 34, 37, 49, 63, 70, 73, 74, 77, 78, 82, 87, 90, 91, 93, 96, 105, 108, 110, 114, 124, 142, 148, 150, 156, 157, 194, 196, 199, 202, 214, 216, 218, 220, 224, 231, 232, 233, 234, 236, 238, 240, 310, 311, 327, 345, 349, 352, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 420, 423, 435, 438, 439, 442, 448, 459, 464, 468, 469, 471], "skip": 85, "slice": [105, 231, 232, 235, 236, 237, 239, 241, 355, 356, 426, 445, 452, 459, 460, 480], "slogdet": [6, 184], "slower": 448, "slowest": [90, 308, 409, 416], "small": [15, 104, 165, 190, 195, 206, 208, 209, 230, 459], "smaller": [86, 90, 108, 109, 111, 114, 115, 116, 118, 120, 121, 122, 123, 125, 127, 190, 226, 318, 349, 414, 464], "smallest": [127, 160, 463], "smallest_norm": 127, "smat": 199, "so": [10, 14, 19, 49, 93, 99, 113, 118, 134, 154, 174, 202, 209, 215, 220, 222, 236, 239, 241, 398, 413, 440, 448, 449, 466], "softwar": 4, "solut": [190, 198], "solv": [6, 190, 200, 201, 484], "some": [21, 93, 103, 105, 135, 163, 190, 349, 464, 470, 480], "sometim": [153, 480], "sometru": 6, "somewhat": 191, "sophist": 191, "sort": [6, 31, 90, 199, 294, 318, 425, 434, 435, 445, 451, 452, 463, 473, 480, 484], "sort_complex": 6, "sorter": [90, 326, 425], "sought": 183, "sourc": [4, 6, 14, 15, 16, 17, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57, 60, 61, 62, 63, 66, 67, 69, 70, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 159, 160, 162, 163, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 339, 342, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 415, 416, 417, 420, 421, 425, 426, 427, 432, 433, 434, 435, 438, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "space": [6, 21, 110, 112, 124, 142, 148, 150, 202, 214, 452, 488], "spars": [162, 222], "special": [2, 93, 100, 473, 484], "specif": [0, 4, 93, 143], "specifi": [14, 19, 20, 21, 29, 30, 31, 33, 34, 38, 39, 40, 41, 43, 49, 56, 57, 63, 67, 76, 77, 78, 81, 84, 85, 90, 95, 96, 97, 98, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 131, 134, 141, 142, 143, 144, 146, 147, 148, 150, 159, 186, 188, 194, 200, 201, 202, 203, 214, 215, 220, 221, 223, 233, 234, 236, 238, 239, 240, 241, 294, 303, 344, 345, 346, 349, 352, 355, 356, 360, 373, 383, 401, 409, 413, 420, 421, 422, 426, 432, 439, 440, 442, 444, 445, 448, 450, 451, 452, 453, 463, 465, 466, 471, 472], "spectrum": [10, 112, 113, 117, 118], "speed": 95, "speedup": 96, "spell": 342, "split": [6, 37, 63, 91, 92, 156, 157, 423, 439, 468, 469, 484], "spreadsheet": 135, "sqrt": [6, 10, 58, 90, 309, 322, 413, 424, 437], "squar": [6, 58, 158, 159, 182, 183, 185, 186, 187, 189, 190, 191, 197, 200, 201, 216, 239, 241, 364, 380, 412, 413, 424, 426, 436, 440, 456, 460, 465, 466], "squeez": [6, 90, 103, 480], "src": 69, "stabl": [31, 433], "stack": [6, 62, 63, 92, 157, 184, 192, 195, 196, 197, 217, 342, 423, 435, 445, 469], "stand": 150, "standard": [90, 127, 136, 139, 220, 226, 236, 239, 241, 310, 331, 360, 375, 382, 389, 398, 399, 400, 401, 402, 414, 440, 466, 480, 484], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 360, 389], "standard_t": 6, "start": [2, 3, 21, 41, 43, 96, 110, 114, 124, 141, 148, 202, 214, 216, 421, 455, 459], "start_tim": 0, "state": 360, "statist": [473, 484], "std": [6, 90, 220, 236, 239, 241, 466, 480], "stdev": [360, 401], "step": [4, 21, 96, 148, 153, 202, 214], "sticki": 93, "still": [49, 156, 468], "stop": [21, 148, 202, 214], "store": [128, 148, 171, 172, 202, 209, 214, 217, 347], "str": [40, 42, 63, 93, 95, 96, 142, 145, 157, 203, 286, 423, 439, 457, 469], "str_": 93, "straightforward": 162, "stride": [44, 45, 90, 295], "string": [21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 93, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 457, 459, 465, 471, 472, 480], "string_repr": 96, "stringio": 203, "strongli": [4, 449], "struct": 93, "structur": [93, 203], "student": 402, "style": [45, 90, 295, 342, 409], "sub": [37, 63, 85, 91, 93, 95, 156, 157, 201, 423, 435, 439, 450, 453, 468, 469], "subarrai": [93, 162, 463], "subclass": 39, "subdivid": 93, "subdtyp": 93, "subok": [11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 45, 51, 52, 53, 54, 55, 56, 58, 59, 64, 65, 67, 68, 71, 72, 79, 80, 88, 90, 98, 99, 101, 102, 104, 107, 128, 134, 135, 136, 137, 138, 139, 147, 151, 152, 153, 158, 161, 164, 168, 169, 170, 179, 180, 181, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 225, 226, 229, 295, 340, 341, 343, 346, 350, 351, 353, 358, 359, 412, 414, 418, 419, 424, 428, 429, 430, 431, 436, 437, 441, 446, 447, 461, 462, 472], "subscript": [95, 96], "subset": [3, 150, 438, 484], "subtract": 6, "subtyp": 409, "succeed": 94, "success": [40, 362, 370, 379], "sugar": [83, 456, 460], "suggest": 85, "suit": 4, "suitabl": [32, 90, 337, 356, 425, 445], "sum": [0, 3, 4, 6, 10, 13, 49, 76, 78, 81, 84, 85, 86, 89, 90, 95, 114, 154, 158, 163, 183, 190, 200, 208, 209, 215, 217, 233, 234, 240, 302, 336, 362, 377, 379, 413, 448, 450, 452, 480, 484], "sum_": 10, "sum_along_diagon": 450, "sum_of_weight": 49, "summari": 473, "summat": [89, 95, 96, 163, 201, 217, 347, 448], "suppli": [113, 118, 193, 360, 389], "support": [3, 9, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 38, 39, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 59, 64, 65, 67, 68, 70, 71, 72, 74, 79, 80, 88, 90, 93, 95, 97, 98, 99, 100, 101, 102, 104, 106, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 158, 159, 164, 168, 169, 170, 179, 180, 181, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 231, 232, 235, 236, 237, 238, 239, 240, 241, 295, 327, 340, 341, 343, 345, 346, 348, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 414, 416, 418, 424, 428, 429, 430, 433, 436, 437, 440, 441, 442, 446, 447, 461, 462, 466, 471, 472, 488], "surnam": 93, "surpris": [114, 115, 116], "svd": [6, 183, 189, 192, 195], "swap": [93, 109, 112, 443], "swapax": [6, 90, 228, 480], "swapped_cod": 93, "swapped_dt": 93, "sy": 93, "sycl": [0, 3, 21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472], "sycl_context": 90, "sycl_devic": 90, "sycl_queu": [21, 34, 38, 39, 40, 41, 42, 43, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472], "sycldevic": [21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472], "syclqueu": [21, 34, 38, 39, 40, 41, 42, 43, 45, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 295, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 453, 455, 459, 465, 471, 472], "symmetr": [113, 119, 121, 122, 182, 185, 186, 187, 188, 192, 195, 199], "symmetri": [10, 108, 113, 118, 119, 122], "syntact": [83, 456, 460], "syntax": 480, "sys_is_l": 93, "system": [3, 4, 198], "t": [10, 63, 74, 90, 93, 113, 182, 185, 187, 190, 337, 342, 402, 452], "t1": 488, "tabl": [2, 9, 473], "tack": 93, "take": [6, 62, 90, 105, 177, 216, 349, 356, 416, 425, 426, 445, 463, 464, 480, 488], "take_along_axi": [6, 29, 30, 31, 60, 356, 444], "taken": [49, 85, 86, 94, 96, 113, 119, 120, 121, 122, 123, 125, 153, 154, 217, 239, 241, 426, 440, 450, 453, 455, 459, 466, 467], "tall": 126, "tan": [6, 26, 27, 71, 430, 447], "tangent": [18, 22, 23, 24, 25, 26, 27, 28, 71, 72, 430, 431, 446, 447], "tanh": [6, 28, 72, 431, 446], "target": [45, 57, 90, 295, 355], "target_devic": 90, "tau": 196, "tbb": 4, "tempfil": 142, "temporari": [142, 488], "temporaryfil": 142, "ten": 370, "tensor": [42, 90, 95, 96, 140, 200, 201, 231, 232, 235, 237, 238, 354, 448], "tensordot": [6, 89, 95, 163, 200, 201, 217, 347], "tensorinv": [6, 201], "tensorsolv": [6, 200], "term": [10, 13, 88, 96, 108, 109, 111, 114, 115, 116, 119, 122, 229, 441, 461], "test": [0, 2, 14, 15, 19, 99, 151, 152, 166, 168, 169, 170, 171, 172, 180, 181, 238, 342, 343, 362, 480, 484], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [141, 142, 144, 145, 203], "th": [78, 81, 84, 86, 90, 94, 106, 150, 162, 221, 337, 344, 426, 451, 454, 456, 458, 460], "than": [34, 77, 78, 90, 91, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 127, 132, 133, 136, 143, 151, 152, 154, 155, 157, 179, 180, 181, 190, 192, 195, 196, 233, 234, 238, 240, 318, 342, 349, 352, 418, 426, 428, 438, 439, 442, 448, 450, 462, 464, 480, 488], "thei": [15, 36, 93, 165, 187, 190, 423, 425, 448, 452, 455, 459, 464, 465, 469, 480], "them": [62, 480], "theor": 185, "theoret": 96, "therefor": [108, 122, 143, 186, 188], "theta": 452, "thi": [10, 11, 12, 16, 17, 20, 21, 29, 30, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 61, 63, 67, 73, 76, 81, 82, 83, 84, 85, 86, 87, 90, 92, 93, 94, 95, 96, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 132, 133, 134, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 157, 167, 174, 177, 186, 188, 190, 193, 194, 197, 202, 203, 206, 208, 209, 214, 215, 216, 217, 218, 224, 226, 228, 230, 231, 232, 235, 237, 238, 240, 295, 300, 305, 308, 318, 324, 337, 342, 349, 352, 355, 356, 393, 395, 409, 413, 414, 416, 421, 423, 439, 442, 444, 445, 449, 452, 456, 460, 463, 464, 465, 469, 470], "thing": 444, "third": [62, 63, 91, 92, 109, 157, 423, 435, 439, 469], "those": [10, 61, 191, 356], "though": 114, "thousand": 370, "three": [46, 47, 48, 103, 191, 216, 360, 396, 448, 463], "threshold": 192, "through": [39, 93, 155, 177, 185, 187, 190, 216, 480], "throw": 377, "thu": [10, 113, 119, 121, 449], "tile": [6, 415, 484], "time": [0, 10, 13, 15, 27, 35, 36, 51, 53, 54, 68, 86, 88, 89, 99, 109, 111, 113, 115, 116, 118, 120, 121, 123, 125, 134, 136, 137, 138, 139, 151, 152, 153, 158, 163, 165, 170, 178, 179, 180, 181, 190, 208, 209, 210, 212, 213, 219, 225, 226, 229, 341, 343, 351, 362, 377, 414, 418, 441, 445, 448, 449, 461, 463, 467], "time_dpnp": 0, "time_numpi": 0, "timedelta": 93, "timeit": 95, "timestep": 110, "tini": 127, "titl": 93, "tm": 139, "to_begin": 94, "to_devic": 90, "to_end": 94, "tobyt": 6, "todo": 380, "tofil": [6, 142], "togeth": [15, 63, 93, 114, 165, 177, 439, 470], "tol": [192, 378, 411], "toler": [15, 35, 165, 411], "tolist": 6, "too": [4, 109, 111, 115, 116, 120, 121, 123, 125, 470], "toolkit": 3, "tostr": 6, "total": [6, 73, 77, 90, 315, 432, 440, 466], "toward": [33, 59, 128, 135, 136, 154, 155, 226, 341, 414, 419, 422, 462], "trace": [6, 81, 84, 85, 90, 95, 480], "traceback": [20, 438], "trail": 457, "transfer": 90, "transform": [96, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 473], "transpos": [6, 32, 90, 95, 182, 187, 228, 243, 480, 484], "trapezoid": [78, 442], "trapz": 6, "treat": [15, 113, 119, 121, 142, 150, 165, 186, 188, 190, 193, 203, 233, 234, 238, 240, 352, 356, 425, 445, 449, 463, 464, 480], "tri": 6, "trial": 362, "triangl": [81, 158, 216, 413, 453, 454, 455, 456, 458, 459, 460], "triangular": [6, 182, 186, 188, 196, 216, 455, 456, 459, 460], "trigonometr": [18, 22, 23, 24, 25, 26, 27, 28, 71, 72, 430, 431, 446, 447, 484], "tril": [6, 81, 216, 453, 455, 456, 459], "tril_indic": [6, 216, 456, 459], "tril_indices_from": [6, 460], "trili": 456, "trili1": 456, "trim": [109, 111, 115, 116, 120, 121, 123, 125, 457], "trim_zero": 6, "triu": [6, 81, 216, 453, 455, 459, 460], "triu_indic": [6, 216, 455, 460], "triu_indices_from": [6, 456], "triui": 460, "triuim1": 460, "trivial": [185, 445], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 39, 41, 43, 45, 46, 49, 51, 52, 53, 54, 57, 58, 59, 64, 65, 67, 68, 69, 71, 72, 73, 74, 78, 79, 80, 87, 88, 90, 93, 95, 96, 99, 101, 102, 103, 104, 105, 107, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 148, 151, 152, 153, 154, 158, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 192, 194, 195, 196, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 247, 290, 291, 295, 300, 312, 313, 314, 319, 331, 333, 338, 340, 341, 342, 343, 349, 350, 351, 352, 353, 356, 358, 359, 365, 412, 413, 414, 416, 418, 419, 424, 426, 428, 429, 430, 431, 436, 437, 440, 441, 442, 445, 446, 447, 448, 452, 461, 462, 463, 465, 466, 470], "true_divid": [6, 88], "trunc": [6, 33, 59, 128, 135, 419, 422], "truncat": [33, 59, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 128, 135, 398, 419, 422, 462], "trust": [231, 232], "truth": [51, 52, 53, 54, 99, 151, 152, 164, 180, 181, 210, 211, 212, 213, 343, 480, 484], "try": [4, 40], "tukei": 10, "tup": [62, 92, 157, 423, 469], "tupl": [14, 19, 20, 29, 30, 34, 38, 39, 40, 41, 43, 49, 56, 67, 73, 76, 81, 82, 83, 84, 90, 93, 96, 103, 112, 117, 131, 140, 143, 146, 147, 148, 150, 154, 155, 162, 167, 174, 177, 178, 194, 196, 201, 202, 214, 215, 216, 217, 218, 220, 222, 223, 224, 235, 236, 237, 238, 239, 240, 241, 327, 337, 342, 344, 352, 413, 415, 416, 420, 427, 438, 440, 442, 449, 451, 455, 456, 459, 460, 465, 466, 480], "turn": 62, "twister": 360, "two": [10, 15, 35, 46, 47, 51, 52, 53, 54, 66, 70, 75, 84, 85, 86, 89, 90, 93, 95, 96, 103, 108, 109, 111, 114, 115, 116, 119, 120, 121, 123, 125, 137, 138, 150, 163, 164, 165, 178, 186, 190, 193, 198, 210, 212, 213, 217, 218, 219, 224, 225, 228, 235, 237, 318, 334, 347, 360, 389, 419, 422, 426, 443, 448, 450, 455, 456, 459, 460, 467], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 300, 304, 308, 316, 324, 328, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 484], "type_nam": 0, "typeerror": [49, 69, 90, 140, 327], "typenam": 6, "typestr": 93, "typic": [15, 113, 165, 425, 480], "u": [93, 182, 186, 188, 199, 216, 238, 240, 463], "u1": [93, 141, 142], "u16": 93, "u4": 57, "u8": 93, "ufunc": [2, 473, 480], "uint64": 93, "uint8": [93, 141, 142], "uk": 10, "un": 93, "unari": 480, "unchang": 125, "undefin": [18, 90, 318], "underli": [51, 53, 54, 416], "undo": [10, 116], "undocu": 93, "unexpect": [238, 240], "unicod": 93, "uniform": [6, 93, 150, 154, 155, 214, 360, 387, 390, 392, 393, 395], "uniformli": [214, 360, 404], "uniniti": [34, 97, 98, 146, 345, 471], "union1d": 6, "uniqu": [6, 49, 50, 76, 87, 93, 215, 220, 228, 236, 239, 241, 413, 415, 440, 466], "unique_count": 463, "unique_indic": 463, "unique_invers": 463, "unit": [90, 110, 124, 177, 185, 191, 197, 332], "unitari": [10, 150, 196, 199], "uniti": 154, "univ": 10, "univers": [2, 473, 480], "unless": [14, 19, 45, 77, 78, 90, 95, 154, 185, 192, 194, 214, 233, 234, 238, 240, 295, 352, 442, 463], "unlik": [31, 90, 124, 324, 327, 433], "unmodifi": 155, "unpackbit": 6, "unravel_index": [6, 29, 30], "unsaf": [45, 57, 63, 69, 90, 95, 157, 217, 295, 423, 439, 469], "unscal": 10, "unsign": [93, 352, 442], "unspecifi": 416, "unsupport": [11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 51, 52, 53, 54, 58, 59, 61, 68, 71, 72, 79, 80, 88, 101, 102, 104, 134, 135, 136, 137, 138, 139, 140, 153, 158, 164, 179, 205, 206, 207, 208, 209, 219, 225, 226, 227, 229, 340, 341, 350, 351, 353, 358, 359, 412, 414, 418, 419, 424, 428, 429, 430, 431, 441, 446, 447, 461, 462], "until": [96, 420, 421], "unwrap": [6, 79, 358], "up": [4, 10, 93, 95, 133, 445, 456, 463], "updat": 4, "uplo": [186, 188], "upon": [90, 332], "upper": [81, 106, 154, 155, 182, 186, 188, 196, 216, 453, 455, 456, 458, 459, 460], "url": 4, "us": [4, 10, 13, 20, 21, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 57, 61, 63, 67, 75, 77, 78, 81, 82, 84, 85, 88, 90, 93, 95, 96, 97, 98, 99, 103, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 162, 163, 164, 177, 179, 180, 181, 182, 183, 186, 187, 188, 190, 192, 193, 194, 195, 202, 203, 209, 210, 212, 214, 216, 217, 218, 220, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 249, 295, 300, 308, 327, 340, 342, 343, 344, 345, 346, 349, 350, 351, 352, 356, 360, 363, 365, 366, 376, 381, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 401, 404, 409, 411, 414, 415, 416, 418, 420, 425, 426, 428, 434, 440, 441, 442, 444, 445, 448, 449, 450, 452, 453, 455, 456, 459, 460, 461, 463, 465, 466, 470, 471, 472, 480, 488], "usabl": 134, "usag": [3, 4, 110, 124], "use_getitem": 93, "use_setitem": 93, "user": [93, 230], "usm": [21, 34, 38, 39, 40, 41, 42, 43, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 438, 453, 455, 459, 465, 471, 472], "usm_ndarrai": [11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 42, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 92, 94, 95, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 147, 150, 151, 152, 153, 154, 155, 157, 158, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 339, 340, 341, 342, 343, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 460, 461, 462, 463, 464, 466, 467, 469, 470, 472], "usm_typ": [21, 34, 38, 39, 40, 41, 42, 43, 67, 81, 82, 84, 90, 97, 98, 106, 110, 124, 141, 142, 143, 144, 145, 146, 147, 148, 159, 162, 202, 203, 214, 216, 223, 300, 344, 345, 346, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 453, 455, 459, 465, 471, 472], "usual": [82, 90, 93, 217, 327], "util": 473, "v": [66, 81, 84, 90, 93, 185, 186, 326, 355, 425], "v0": 6, "v1": 6, "v10": 93, "v9": 6, "val": [90, 126, 129, 285, 320, 349], "valid": [70, 103, 216, 443, 455, 456, 459, 460], "valu": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 38, 39, 41, 43, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 86, 87, 88, 90, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 113, 114, 119, 121, 122, 126, 127, 128, 129, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 158, 159, 161, 162, 164, 165, 167, 168, 169, 170, 173, 174, 177, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 245, 246, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 280, 282, 284, 285, 287, 288, 289, 292, 293, 295, 297, 300, 305, 307, 318, 320, 327, 340, 341, 342, 343, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 370, 387, 388, 404, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 424, 425, 426, 428, 429, 430, 433, 436, 437, 440, 441, 442, 444, 445, 446, 447, 450, 452, 455, 459, 461, 462, 463, 464, 466, 470, 471, 472, 480, 484], "value2": 93, "valueerror": [20, 34, 39, 40, 140, 231, 232, 416, 435, 438], "vander": 6, "vandermond": 465, "var": [6, 90, 220, 236, 239, 241, 440, 480], "vararg": 150, "vari": [10, 14, 18, 19, 85, 96, 109, 111, 113, 114, 115, 116, 118, 119, 122, 125, 143, 162, 183, 185, 186, 190, 194, 230, 236, 239, 241, 411], "variabl": [74, 190, 198], "varianc": [90, 220, 236, 239, 241, 338, 440, 466, 484], "variou": 488, "vdot": [6, 89, 217], "vector": [75, 95, 143, 162, 163, 177, 183, 192, 193, 194, 199, 217, 222, 347, 467, 484], "vendor": 4, "veri": [3, 10, 15, 165, 222, 230], "verif": 0, "verifi": 182, "version": [4, 73, 90, 93, 130, 307, 342], "vertic": [62, 63, 85, 92, 126, 131, 132, 157, 423, 435, 439, 468, 469], "vetterlin": 10, "vh": 199, "via": 119, "view": [6, 46, 47, 48, 55, 81, 85, 90, 103, 109, 111, 115, 116, 120, 121, 123, 125, 131, 132, 133, 222, 228, 243, 324, 337, 356, 416, 435, 438, 443, 451], "violat": 69, "void": 93, "void640": 93, "von": 405, "vonmis": 6, "vsplit": [6, 63, 435], "vstack": [6, 62, 63, 92, 157, 190, 423, 435, 439], "w": [10, 49, 185, 186, 187, 188, 191], "wa": [10, 76, 93, 193, 215, 235, 237, 239, 241, 360, 401, 413, 440, 466], "wai": [3, 4, 10, 90, 96, 108, 114, 115, 116, 121, 142, 318, 448], "wald": 6, "walk": 93, "want": [4, 445], "warn": [93, 231, 232, 378], "we": [67, 82, 85, 96, 126, 190, 216, 356, 445, 452], "weibul": [6, 408], "weight": [49, 50, 74, 154, 155, 220, 236, 442], "well": [93, 95, 142, 154, 155, 352, 362, 379, 398], "were": [63, 143, 360, 389, 439, 464], "what": [10, 45, 57, 63, 69, 90, 93, 95, 99, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 157, 166, 217, 295, 362, 379, 423, 439, 469, 480], "when": [10, 20, 21, 34, 35, 38, 39, 41, 43, 44, 45, 49, 67, 69, 87, 90, 93, 95, 108, 119, 121, 122, 137, 138, 148, 153, 185, 194, 196, 202, 209, 214, 216, 217, 226, 233, 234, 235, 237, 238, 240, 295, 414, 419, 421, 422, 426, 444, 448, 452, 463, 470, 488], "whenev": [103, 443, 451], "where": [0, 6, 10, 11, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 34, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 52, 53, 54, 58, 59, 61, 64, 65, 67, 68, 69, 71, 72, 76, 79, 80, 81, 82, 84, 86, 87, 88, 90, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 113, 119, 120, 121, 124, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 179, 180, 181, 182, 190, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 226, 229, 235, 236, 237, 238, 239, 240, 241, 290, 291, 295, 300, 312, 313, 314, 319, 326, 331, 333, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 404, 412, 413, 414, 418, 419, 421, 424, 425, 426, 428, 429, 430, 431, 435, 436, 437, 440, 441, 442, 446, 447, 450, 451, 453, 455, 459, 461, 462, 464, 465, 466, 471, 472], "wherev": 69, "whether": [14, 15, 19, 35, 76, 87, 93, 140, 165, 166, 182, 196, 202, 230, 238, 240, 416, 429, 463], "which": [3, 4, 10, 14, 19, 20, 21, 29, 30, 31, 34, 38, 39, 40, 41, 42, 43, 45, 49, 55, 63, 67, 69, 73, 76, 77, 78, 81, 82, 84, 85, 86, 87, 89, 90, 93, 95, 96, 97, 98, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 131, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 157, 159, 162, 168, 169, 170, 171, 172, 182, 185, 192, 194, 201, 203, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 295, 300, 342, 344, 345, 346, 352, 355, 360, 382, 387, 388, 389, 390, 391, 392, 393, 395, 401, 404, 413, 415, 420, 426, 432, 433, 435, 438, 439, 440, 442, 444, 450, 451, 452, 453, 454, 455, 458, 459, 462, 464, 465, 466, 470, 471, 472, 480, 488], "whichev": 163, "while": [10, 123, 125, 154, 155, 220, 236, 239, 241, 342, 349, 352, 420, 440, 442, 453, 466], "whitespac": [142, 145], "who": 6, "whole": [109, 111, 115, 116, 120, 121, 123, 125, 455, 459], "whose": [11, 12, 85, 93, 105, 106, 126, 183, 186, 187, 188, 200, 216, 228, 420, 456, 460], "why": 119, "wide": 126, "width": [93, 154, 155], "wild": [362, 379], "window": [4, 110, 124], "wise": [11, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 35, 51, 52, 53, 54, 58, 59, 62, 63, 64, 65, 68, 71, 72, 76, 88, 90, 92, 99, 101, 102, 104, 107, 128, 134, 135, 136, 137, 138, 139, 151, 152, 153, 156, 157, 158, 161, 164, 165, 168, 169, 170, 171, 172, 179, 180, 181, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 219, 224, 225, 226, 227, 229, 235, 237, 238, 299, 340, 341, 343, 350, 351, 353, 410, 412, 414, 418, 419, 422, 423, 424, 428, 429, 430, 431, 435, 436, 437, 439, 441, 446, 447, 461, 462, 468, 469, 480, 484, 488], "within": [15, 21, 35, 45, 90, 95, 113, 114, 115, 116, 118, 119, 121, 154, 155, 165, 295, 355, 360, 404], "without": [85, 90, 97, 126, 337, 409, 416, 480], "won": 93, "word": [114, 115, 116, 119, 121, 135, 187, 360, 404], "work": [4, 33, 44, 445, 480], "world": [93, 362, 379], "would": [31, 63, 90, 93, 143, 162, 193, 216, 217, 318, 360, 433, 435, 439, 445, 451, 464], "wrap": [79, 90, 126, 320, 335, 355, 358, 425, 444, 445, 464], "wrapper": 90, "write": [81, 85, 90, 126, 142, 308, 416], "written": [73, 76, 126, 142, 215, 413, 470], "x": [0, 3, 4, 11, 12, 14, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 46, 47, 48, 52, 55, 56, 58, 59, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 79, 80, 81, 84, 86, 87, 90, 91, 93, 94, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 115, 116, 117, 123, 124, 125, 128, 129, 130, 135, 141, 142, 143, 144, 146, 147, 148, 150, 156, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 183, 187, 190, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 222, 223, 227, 228, 230, 295, 300, 309, 310, 316, 322, 327, 328, 340, 342, 344, 345, 346, 350, 352, 353, 354, 358, 359, 378, 384, 409, 410, 412, 413, 415, 419, 420, 421, 422, 424, 426, 428, 429, 430, 431, 435, 436, 437, 438, 443, 444, 446, 447, 452, 453, 462, 465, 468, 470, 471, 472], "x0": [41, 43, 67, 84, 346, 465, 472], "x00": 142, "x01": [141, 142], "x02": [141, 142], "x03": [141, 142], "x04": [141, 142], "x05": 141, "x1": [13, 15, 18, 26, 27, 35, 36, 45, 50, 51, 53, 54, 60, 68, 70, 88, 90, 99, 134, 136, 137, 138, 139, 151, 152, 153, 158, 177, 179, 180, 181, 208, 209, 210, 211, 212, 213, 217, 219, 221, 222, 225, 226, 227, 229, 295, 340, 341, 343, 348, 350, 351, 357, 397, 414, 418, 420, 441, 461], "x1_i": [13, 27, 51, 53, 54, 68, 88, 99, 134, 136, 139, 151, 152, 158, 179, 180, 181, 208, 209, 210, 212, 213, 226, 229, 343, 351, 414, 418, 441, 461], "x2": [13, 14, 15, 18, 19, 26, 27, 34, 35, 36, 51, 53, 54, 68, 70, 88, 99, 134, 136, 137, 138, 139, 151, 152, 153, 158, 177, 179, 180, 181, 208, 209, 210, 211, 212, 213, 217, 219, 222, 225, 226, 229, 340, 341, 343, 350, 351, 414, 418, 420, 436, 441, 461], "x2_i": [13, 27, 51, 53, 54, 68, 88, 99, 134, 136, 139, 151, 152, 158, 179, 180, 181, 208, 209, 210, 212, 213, 226, 229, 343, 351, 414, 418, 441, 461], "x3": [14, 19, 134], "x_i": [11, 12, 18, 22, 23, 24, 25, 26, 28, 52, 58, 59, 64, 65, 71, 72, 101, 102, 104, 135, 161, 164, 204, 205, 206, 207, 211, 340, 350, 353, 410, 412, 419, 422, 424, 428, 429, 430, 431, 436, 437, 446, 447, 462], "xi": [207, 222], "xn": [177, 222], "xor": [51, 52, 53, 54, 164, 210, 211, 212, 213], "xv": 222, "xx": 222, "xy": 222, "y": [0, 4, 21, 34, 38, 39, 40, 41, 43, 46, 55, 67, 74, 75, 84, 90, 93, 94, 97, 98, 103, 106, 110, 124, 141, 142, 143, 144, 146, 147, 148, 150, 159, 171, 172, 183, 190, 202, 203, 214, 222, 223, 227, 230, 300, 316, 324, 327, 344, 345, 346, 452, 453, 465, 470, 471, 472], "yet": [4, 6], "yield": [31, 238, 240, 342, 360, 470, 480], "you": [4, 85, 113, 118, 119, 216, 444, 445, 480, 488], "your": [4, 85, 488], "yv": 222, "yy": 222, "z": [14, 19, 21, 34, 38, 39, 40, 41, 43, 67, 84, 97, 98, 106, 110, 124, 141, 142, 143, 144, 146, 147, 148, 159, 202, 203, 214, 222, 223, 344, 345, 346, 370, 453, 465, 471, 472], "zero": [6, 10, 14, 18, 19, 31, 32, 33, 34, 59, 73, 76, 82, 86, 90, 97, 98, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 135, 142, 146, 147, 159, 161, 166, 167, 171, 172, 173, 174, 179, 185, 186, 188, 190, 191, 192, 195, 199, 215, 216, 218, 220, 224, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 316, 317, 327, 328, 332, 339, 342, 345, 346, 352, 360, 362, 390, 392, 393, 395, 410, 411, 413, 419, 422, 428, 433, 440, 442, 448, 453, 454, 457, 458, 462, 466, 470, 472], "zeros_lik": [6, 34, 80, 98, 147, 346, 359, 471], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asnumpy", "dpnp.astype", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.positive", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 244, "__add__": 245, "__and__": 246, "__bool__": 247, "__complex__": 248, "__copy__": 249, "__eq__": 250, "__float__": 251, "__floordiv__": 252, "__ge__": 253, "__getitem__": 254, "__gt__": 255, "__iadd__": 256, "__iand__": 257, "__ifloordiv__": 258, "__ilshift__": 259, "__imod__": 260, "__imul__": 261, "__int__": 262, "__invert__": 263, "__ior__": 264, "__ipow__": 265, "__irshift__": 266, "__isub__": 267, "__itruediv__": 268, "__ixor__": 269, "__le__": 270, "__len__": 271, "__lshift__": 272, "__lt__": 273, "__matmul__": 274, "__mod__": 275, "__mul__": 276, "__ne__": 277, "__neg__": 278, "__new__": 279, "__or__": 280, "__pos__": 281, "__pow__": 282, "__repr__": 283, "__rshift__": 284, "__setitem__": 285, "__str__": 286, "__sub__": 287, "__truediv__": 288, "__xor__": 289, "ab": 11, "absolut": 12, "ad": 477, "add": 13, "algebra": [6, 475], "all": [14, 290], "allclos": 15, "amax": 16, "amin": 17, "angl": 18, "ani": [19, 291], "api": [1, 473], "append": 20, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 292], "argmin": [30, 293], "argsort": [31, 294], "argwher": 32, "arithmet": [478, 480, 482], "around": 33, "arrai": [6, 7, 9, 34, 474, 476, 477, 480], "array_equ": 35, "array_equiv": 36, "array_split": 37, "asanyarrai": 38, "asarrai": 39, "asarray_chkfinit": 40, "ascontiguousarrai": 41, "asfarrai": 42, "asfortranarrai": 43, "asnumpi": 44, "astyp": [45, 295], "atleast_1d": 46, "atleast_2d": 47, "atleast_3d": 48, "attribut": 480, "avail": [9, 488], "averag": [49, 487], "backend": 1, "background": 10, "basic": [477, 482], "beta": 361, "binari": 5, "bincount": 50, "binomi": 362, "bit": [5, 488], "bitwise_and": 51, "bitwise_not": 52, "bitwise_or": 53, "bitwise_xor": 54, "broadcast_arrai": 55, "broadcast_to": 56, "build": [4, 7], "byte": 363, "c": 1, "calcul": 480, "can_cast": 57, "cbrt": 58, "ceil": 59, "chang": 477, "channel": 4, "chisquar": 364, "choic": 365, "choleski": 182, "choos": [60, 296], "class": 7, "clip": [61, 297], "co": 71, "column_stack": 62, "comparison": [6, 476, 480, 488], "complex": 478, "concaten": 63, "cond": 183, "conda": 4, "conj": [64, 298], "conjug": [65, 299], "construct": 480, "control": 0, "convers": 480, "convolv": 66, "copi": [67, 300], "copysign": 68, "copyto": 69, "correl": [70, 487], "cosh": 72, "count": 485, "count_nonzero": 73, "cov": 74, "creat": 8, "creation": 7, "cross": 75, "cumlogsumexp": 76, "cumprod": [77, 301], "cumsum": [78, 302], "cupi": 6, "data": [0, 2, 7, 8, 9, 474, 480, 483], "decomposit": 475, "deg2rad": 79, "degre": 80, "det": 184, "detail": 10, "develop": 2, "devic": 4, "diag": 81, "diag_indic": 82, "diag_indices_from": 83, "diagflat": 84, "diagon": [85, 303], "diff": 86, "differ": 478, "digit": 87, "dimens": [10, 477], "dimension": [6, 480], "dirichlet": 366, "discret": 6, "distribut": 483, "divid": 88, "dot": 89, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 483], "dpnp_arrai": 90, "driver": 4, "dsplit": 91, "dstack": 92, "dtype": [93, 304], "ediff1d": 94, "eig": 185, "eigenvalu": 475, "eigh": 186, "eigval": 187, "eigvalsh": 188, "einsum": 95, "einsum_path": 96, "element": [5, 477], "empti": 97, "empty_lik": 98, "equal": 99, "equat": 475, "erf": 100, "error": 486, "exampl": [0, 4], "exist": 7, "exp": 101, "exp2": 102, "expand_dim": 103, "expm1": 104, "expon": 478, "exponenti": 367, "extens": 2, "extract": 105, "extrema": 478, "ey": 106, "f": 368, "fab": 107, "fft": [10, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "fft2": 109, "fftfreq": 110, "fftn": 111, "fftshift": 112, "fill": 305, "fill_diagon": 126, "find": 478, "finfo": 127, "fix": 128, "flag": 306, "flat": 307, "flatit": 129, "flatnonzero": 130, "flatten": 308, "flip": 131, "fliplr": 132, "flipud": 133, "float": [478, 488], "float_pow": 134, "floor": 135, "floor_divid": 136, "fmax": 137, "fmin": 138, "fmod": 139, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 140, "frombuff": 141, "fromfil": 142, "fromfunct": 143, "fromit": 144, "fromstr": 145, "full": 146, "full_lik": 147, "function": [10, 476, 478, 486, 487, 488], "gamma": 369, "gener": [474, 483], "geometr": 370, "geomspac": 148, "get_includ": 149, "gradient": 150, "greater": 151, "greater_equ": 152, "guid": 4, "gumbel": 371, "handl": 478, "heavisid": 153, "helper": 10, "hermitian": 10, "hfft": 113, "higher": 10, "histogram": [154, 487], "histogram_bin_edg": 155, "hsplit": 156, "hstack": 157, "hyperbol": 478, "hypergeometr": 372, "hypot": 158, "ident": 159, "ifft": 114, "ifft2": 115, "ifftn": 116, "ifftshift": 117, "ihfft": 118, "iinfo": 160, "imag": [161, 309], "implement": 10, "index": [474, 480], "indic": 162, "infin": 476, "inform": [2, 8, 10], "inner": 163, "insert": 474, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 189, "invert": 164, "irfft": 119, "irfft2": 120, "irfftn": 121, "isclos": 165, "iscomplex": 166, "iscomplexobj": 167, "isfinit": 168, "isinf": 169, "isnan": 170, "isneginf": 171, "isposinf": 172, "isreal": 173, "isrealobj": 174, "isscalar": 175, "issubdtyp": 176, "item": [310, 480], "items": 311, "iter": 474, "ix_": 177, "join": 477, "kind": 477, "kron": 178, "laplac": 373, "layout": 480, "left_shift": 179, "less": 180, "less_equ": 181, "level": 6, "librari": 0, "like": [474, 477], "linalg": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "linear": [6, 475], "linspac": 202, "loadtxt": 203, "log": 204, "log10": 205, "log1p": 206, "log2": 207, "logaddexp": 208, "logaddexp2": 209, "logarithm": 478, "logic": 476, "logical_and": 210, "logical_not": 211, "logical_or": 212, "logical_xor": 213, "logist": 374, "lognorm": 375, "logseri": 376, "logspac": 214, "logsumexp": 215, "lstsq": 190, "manipul": [477, 480], "mask_indic": 216, "math": 488, "mathemat": 478, "matmul": 217, "matric": 7, "matrix": [7, 475, 480], "matrix_pow": 191, "matrix_rank": 192, "max": [218, 312], "maximum": 219, "mean": [220, 313], "median": 221, "memori": 480, "meshgrid": 222, "method": 480, "mgrid": 223, "min": [224, 314], "minimum": 225, "miscellan": [8, 478, 479], "mod": 226, "modf": 227, "modul": [6, 482], "moveaxi": 228, "multi": [6, 480], "multi_dot": 193, "multinomi": 377, "multipl": 480, "multipli": 229, "multivariate_norm": 378, "nan": 476, "nan_to_num": 230, "nanargmax": 231, "nanargmin": 232, "nancumprod": 233, "nancumsum": 234, "nanmax": 235, "nanmean": 236, "nanmin": 237, "nanprod": 238, "nanstd": 239, "nansum": 240, "nanvar": 241, "nbyte": 315, "ndarrai": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 480], "ndim": [316, 339], "neg": 340, "negative_binomi": 379, "nextaft": 341, "noncentral_chisquar": 380, "noncentral_f": 381, "nonzero": [317, 342], "norm": [194, 475], "normal": [10, 382], "not_equ": 343, "number": [475, 477, 478], "numer": 7, "numpi": [2, 6], "ogrid": 344, "ones": 345, "ones_lik": 346, "oper": [5, 474, 476, 477, 478, 480, 488], "order": 487, "other": [475, 478, 480], "outer": 347, "output": 5, "over": 474, "overview": 3, "pack": 5, "packag": [4, 482], "pad": 481, "parallel": [0, 2], "pareto": 383, "partit": [318, 348], "permut": [384, 483], "pinv": 195, "place": 349, "point": 478, "poisson": 385, "poly1d": 482, "polynomi": 482, "polyutil": 482, "posit": 350, "power": [351, 386], "prod": [319, 352], "product": [475, 478], "proj": 353, "promot": 10, "ptp": 354, "put": [320, 355], "put_along_axi": 356, "putmask": 357, "python": 4, "qr": 196, "quick": 4, "r": 4, "rad2deg": 358, "radian": 359, "rand": 387, "randint": 388, "randn": 389, "random": [6, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 483], "random_integ": 391, "random_sampl": 392, "randomst": 360, "ranf": 393, "rang": 7, "ration": 478, "ravel": [321, 409], "rayleigh": 394, "real": [10, 322, 410], "real_if_clos": 411, "rearrang": 477, "reciproc": 412, "reduce_hypot": 413, "refer": [1, 473], "remaind": 414, "remov": 477, "repeat": [323, 415], "reshap": [324, 416], "result_typ": 417, "rfft": 122, "rfft2": 123, "rfftfreq": 124, "rfftn": 125, "right_shift": 418, "rint": 419, "roll": 420, "rollaxi": 421, "round": [325, 422, 478], "routin": [7, 8, 10, 474, 477, 478, 479, 484], "row_stack": 423, "rsqrt": 424, "sampl": [6, 395, 483], "scikit": 4, "search": 485, "searchsort": [326, 425], "seed": 396, "select": [426, 480], "shape": [7, 327, 427, 477, 480], "shuffl": 397, "sign": 428, "signbit": 429, "simpl": 483, "sin": 430, "sinh": 431, "size": [328, 432], "slogdet": 197, "solv": [198, 475], "sort": [329, 433, 485], "sort_complex": 434, "special": [478, 480, 486], "split": [435, 477], "sqrt": 436, "squar": 437, "squeez": [330, 438], "stack": 439, "standard": 10, "standard_cauchi": 398, "standard_exponenti": 399, "standard_gamma": 400, "standard_norm": 401, "standard_t": 402, "start": 4, "statist": 487, "std": [331, 440], "stride": 332, "subtract": 441, "sum": [333, 442, 478], "summari": 6, "svd": 199, "swapax": [334, 443], "t": 243, "tabl": 6, "take": [335, 444], "take_along_axi": 445, "tan": 446, "tanh": 447, "tensordot": 448, "tensorinv": 200, "tensorsolv": 201, "test": [4, 8, 476], "tile": [449, 477], "trace": [336, 450], "transform": [6, 10], "transpos": [337, 451, 477], "trapezoid": 452, "tri": 453, "triangular": 403, "trigonometr": [478, 488], "tril": 454, "tril_indic": 455, "tril_indices_from": 456, "trim_zero": 457, "triu": 458, "triu_indic": 459, "triu_indices_from": 460, "true_divid": 461, "trunc": 462, "truth": 476, "twiddl": 488, "type": [8, 9, 10, 476, 480], "ufunc": 488, "uniform": 404, "uniqu": 463, "univers": 488, "unwrap": 464, "util": 479, "valu": [7, 476], "vander": 465, "var": [338, 466], "varianc": 487, "vdot": 467, "vector": 475, "vonmis": 405, "vsplit": 468, "vstack": 469, "wald": 406, "weibul": 407, "where": 470, "wise": 5, "zero": 471, "zeros_lik": 472, "zipf": 408}})