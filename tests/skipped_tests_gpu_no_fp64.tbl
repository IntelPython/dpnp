tests/test_linalg.py::test_norm1[0-3-[7]]
tests/test_linalg.py::test_norm1[0-3-[1, 2]]
tests/test_linalg.py::test_norm1[0-3-[1, 0]]
tests/test_linalg.py::test_norm1[None-3-[7]]
tests/test_linalg.py::test_norm1[None-3-[1, 2]]
tests/test_linalg.py::test_norm1[None-3-[1, 0]]

tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-bool_-bool_]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-bool_-int32]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-bool_-int64]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-bool_-None]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-int32-bool_]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-int32-int32]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-int32-int64]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-int32-None]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-int64-bool_]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-int64-int32]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-int64-int64]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-int64-None]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-None-bool_]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-None-int32]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-None-int64]
tests/test_mathematical.py::test_op_multiple_dtypes[[[1, 2], [3, 4]]-power-None-None]
tests/test_mathematical.py::TestMathematical::test_power[bool_-lhs0-rhs0]
tests/test_mathematical.py::TestMathematical::test_power[bool_-lhs0-rhs1]
tests/test_mathematical.py::TestMathematical::test_power[bool_-lhs0-3]
tests/test_mathematical.py::TestMathematical::test_power[bool_-lhs1-rhs0]
tests/test_mathematical.py::TestMathematical::test_power[bool_-lhs1-rhs1]
tests/test_mathematical.py::TestMathematical::test_power[bool_-lhs1-3]
tests/test_mathematical.py::TestMathematical::test_power[int32-lhs0-rhs0]
tests/test_mathematical.py::TestMathematical::test_power[int32-lhs0-rhs1]
tests/test_mathematical.py::TestMathematical::test_power[int32-lhs0-3]
tests/test_mathematical.py::TestMathematical::test_power[int32-lhs1-rhs0]
tests/test_mathematical.py::TestMathematical::test_power[int32-lhs1-rhs1]
tests/test_mathematical.py::TestMathematical::test_power[int32-lhs1-3]
tests/test_mathematical.py::TestMathematical::test_power[int64-lhs0-rhs0]
tests/test_mathematical.py::TestMathematical::test_power[int64-lhs0-rhs1]
tests/test_mathematical.py::TestMathematical::test_power[int64-lhs0-3]
tests/test_mathematical.py::TestMathematical::test_power[int64-lhs1-rhs0]
tests/test_mathematical.py::TestMathematical::test_power[int64-lhs1-rhs1]
tests/test_mathematical.py::TestMathematical::test_power[int64-lhs1-3]
tests/test_mathematical.py::TestMathematical::test_power[None-lhs0-rhs0]
tests/test_mathematical.py::TestMathematical::test_power[None-lhs0-3]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-0-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-0-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-0-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-0-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-0-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-0-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-0-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-0-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-1-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-1-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-1-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-1-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-1-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-1-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-1-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-1-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-5-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-5-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-5-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-5-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-5-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-5-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-5-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[0, 0], [0, 0]]-5-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-0-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-0-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-0-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-0-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-0-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-0-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-0-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-0-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-1-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-1-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-1-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-1-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-1-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-1-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-1-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-1-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-5-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-5-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-5-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-5-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-5-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-5-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-5-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [1, 2]]-5-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-0-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-0-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-0-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-0-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-0-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-0-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-0-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-0-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-1-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-1-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-1-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-1-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-1-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-1-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-1-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-1-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-5-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-5-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-5-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-5-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-5-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-5-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-5-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[1, 2], [3, 4]]-5-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-0-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-0-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-0-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-0-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-0-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-0-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-0-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-0-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-0-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-0-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-0-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-0-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-0-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-0-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-0-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-0-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-power-None-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-power-bool_-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-power-bool_-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-power-int32-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-power-int32-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-power-int64-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-power-int64-int]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-power-None-bool]
tests/test_mathematical.py::test_op_with_scalar[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-power-None-int]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-bool_-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-bool_-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-bool_-int64]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-int32-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-int32-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-int32-int64]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-int64-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-int64-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-int64-int64]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-None-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-None-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1.5-None-int64]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-bool_-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-bool_-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-bool_-int64]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-int32-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-int32-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-int32-int64]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-int64-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-int64-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-int64-int64]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-None-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-None-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-1-None-int64]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-bool_-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-bool_-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-bool_-int64]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-int32-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-int32-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-int32-int64]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-int64-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-int64-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-int64-int64]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-None-bool_]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-None-int32]
tests/test_mathematical.py::test_power[[[0, 0], [0, 0]]-5-None-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-bool_-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-bool_-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-bool_-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-int32-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-int32-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-int32-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-int64-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-int64-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-int64-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-None-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-None-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1.5-None-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-bool_-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-bool_-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-bool_-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-int32-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-int32-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-int32-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-int64-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-int64-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-int64-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-None-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-None-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-1-None-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-bool_-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-bool_-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-bool_-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-int32-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-int32-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-int32-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-int64-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-int64-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-int64-int64]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-None-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-None-int32]
tests/test_mathematical.py::test_power[[[1, 2], [1, 2]]-5-None-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-bool_-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-bool_-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-bool_-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-int32-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-int32-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-int32-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-int64-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-int64-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-int64-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-None-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-None-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1.5-None-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-bool_-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-bool_-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-bool_-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-int32-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-int32-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-int32-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-int64-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-int64-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-int64-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-None-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-None-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-1-None-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-bool_-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-bool_-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-bool_-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-int32-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-int32-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-int32-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-int64-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-int64-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-int64-int64]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-None-bool_]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-None-int32]
tests/test_mathematical.py::test_power[[[1, 2], [3, 4]]-5-None-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-bool_-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-bool_-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-bool_-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-int32-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-int32-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-int32-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-int64-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-int64-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-int64-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-None-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-None-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1.5-None-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-bool_-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-bool_-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-bool_-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-int32-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-int32-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-int32-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-int64-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-int64-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-int64-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-None-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-None-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-1-None-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-bool_-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-bool_-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-bool_-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-int32-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-int32-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-int32-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-int64-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-int64-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-int64-int64]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-None-bool_]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-None-int32]
tests/test_mathematical.py::test_power[[[[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]]]-5-None-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-bool_-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-bool_-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-bool_-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-int32-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-int32-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-int32-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-int64-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-int64-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-int64-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-None-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-None-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1.5-None-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-bool_-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-bool_-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-bool_-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-int32-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-int32-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-int32-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-int64-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-int64-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-int64-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-None-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-None-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-1-None-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-bool_-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-bool_-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-bool_-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-int32-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-int32-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-int32-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-int64-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-int64-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-int64-int64]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-None-bool_]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-None-int32]
tests/test_mathematical.py::test_power[[[[[1, 2], [3, 4]], [[1, 2], [2, 1]]], [[[1, 3], [3, 1]], [[0, 1], [1, 3]]]]-5-None-int64]
tests/test_mathematical.py::TestGradient::test_gradient_y1[array0]
tests/test_mathematical.py::TestGradient::test_gradient_y1[array1]
tests/test_mathematical.py::TestGradient::test_gradient_y1[array2]
tests/test_mathematical.py::TestGradient::test_gradient_y1_dx[2-array0]
tests/test_mathematical.py::TestGradient::test_gradient_y1_dx[2-array1]
tests/test_mathematical.py::TestGradient::test_gradient_y1_dx[2-array2]
tests/test_mathematical.py::TestGradient::test_gradient_y1_dx[3.5-array0]
tests/test_mathematical.py::TestGradient::test_gradient_y1_dx[3.5-array1]
tests/test_mathematical.py::TestGradient::test_gradient_y1_dx[3.5-array2]
tests/test_mathematical.py::TestCeil::test_ceil
tests/test_mathematical.py::TestCeil::test_invalid_dtype[numpy.float32]
tests/test_mathematical.py::TestCeil::test_invalid_dtype[numpy.int64]
tests/test_mathematical.py::TestCeil::test_invalid_dtype[numpy.int32]
tests/test_mathematical.py::TestCeil::test_invalid_shape[(0,)]
tests/test_mathematical.py::TestCeil::test_invalid_shape[(15, )]
tests/test_mathematical.py::TestCeil::test_invalid_shape[(2,2)]
tests/test_mathematical.py::TestFloor::test_floor
tests/test_mathematical.py::TestFloor::test_invalid_dtype[numpy.float32]
tests/test_mathematical.py::TestFloor::test_invalid_dtype[numpy.int64]
tests/test_mathematical.py::TestFloor::test_invalid_dtype[numpy.int32]
tests/test_mathematical.py::TestFloor::test_invalid_shape[(0,)]
tests/test_mathematical.py::TestFloor::test_invalid_shape[(15, )]
tests/test_mathematical.py::TestFloor::test_invalid_shape[(2,2)]
tests/test_mathematical.py::TestTrunc::test_trunc
tests/test_mathematical.py::TestTrunc::test_invalid_dtype[numpy.float32]
tests/test_mathematical.py::TestTrunc::test_invalid_dtype[numpy.int64]
tests/test_mathematical.py::TestTrunc::test_invalid_dtype[numpy.int32]
tests/test_mathematical.py::TestTrunc::test_invalid_shape[(0,)]
tests/test_mathematical.py::TestTrunc::test_invalid_shape[(15, )]
tests/test_mathematical.py::TestTrunc::test_invalid_shape[(2,2)]
tests/test_mathematical.py::TestPower::test_power[complex64]
tests/test_mathematical.py::TestPower::test_out_dtypes[bool_]
tests/test_mathematical.py::TestPower::test_out_dtypes[int32]
tests/test_mathematical.py::TestPower::test_out_dtypes[int64]
tests/test_mathematical.py::TestPower::test_out_dtypes[float32]
tests/test_mathematical.py::TestPower::test_out_overlap[int32]
tests/test_mathematical.py::TestPower::test_out_overlap[int64]
tests/test_mathematical.py::TestPower::test_inplace_strided_out[int32]
tests/test_mathematical.py::TestPower::test_inplace_strided_out[int64]
tests/test_mathematical.py::TestPower::test_invalid_shape[(0,)]
tests/test_mathematical.py::TestPower::test_invalid_shape[(15, )]
tests/test_mathematical.py::TestPower::test_invalid_shape[(2,2)]
tests/test_mathematical.py::TestPower::test_integer_power_of_0_or_1[int32-0]
tests/test_mathematical.py::TestPower::test_integer_power_of_0_or_1[int32-1]
tests/test_mathematical.py::TestPower::test_integer_power_of_0_or_1[int64-0]
tests/test_mathematical.py::TestPower::test_integer_power_of_0_or_1[int64-1]
tests/test_mathematical.py::TestPower::test_integer_to_negative_power[int32]
tests/test_mathematical.py::TestPower::test_integer_to_negative_power[int64]

tests/test_strides.py::test_strides_1arg[(10,)-int32-arccos]
tests/test_strides.py::test_strides_1arg[(10,)-int32-arccosh]
tests/test_strides.py::test_strides_1arg[(10,)-int32-arcsin]
tests/test_strides.py::test_strides_1arg[(10,)-int32-arcsinh]
tests/test_strides.py::test_strides_1arg[(10,)-int32-arctan]
tests/test_strides.py::test_strides_1arg[(10,)-int32-arctanh]
tests/test_strides.py::test_strides_1arg[(10,)-int32-cbrt]
tests/test_strides.py::test_strides_1arg[(10,)-int32-ceil]
tests/test_strides.py::test_strides_1arg[(10,)-int32-cosh]
tests/test_strides.py::test_strides_1arg[(10,)-int32-degrees]
tests/test_strides.py::test_strides_1arg[(10,)-int32-exp]
tests/test_strides.py::test_strides_1arg[(10,)-int32-exp2]
tests/test_strides.py::test_strides_1arg[(10,)-int32-expm1]
tests/test_strides.py::test_strides_1arg[(10,)-int32-fabs]
tests/test_strides.py::test_strides_1arg[(10,)-int32-floor]
tests/test_strides.py::test_strides_1arg[(10,)-int32-log10]
tests/test_strides.py::test_strides_1arg[(10,)-int32-log1p]
tests/test_strides.py::test_strides_1arg[(10,)-int32-log2]
tests/test_strides.py::test_strides_1arg[(10,)-int32-radians]
tests/test_strides.py::test_strides_1arg[(10,)-int32-sinh]
tests/test_strides.py::test_strides_1arg[(10,)-int32-tanh]
tests/test_strides.py::test_strides_1arg[(10,)-int32-trunc]
tests/test_strides.py::test_strides_1arg[(10,)-int64-arccos]
tests/test_strides.py::test_strides_1arg[(10,)-int64-arccosh]
tests/test_strides.py::test_strides_1arg[(10,)-int64-arcsin]
tests/test_strides.py::test_strides_1arg[(10,)-int64-arcsinh]
tests/test_strides.py::test_strides_1arg[(10,)-int64-arctan]
tests/test_strides.py::test_strides_1arg[(10,)-int64-arctanh]
tests/test_strides.py::test_strides_1arg[(10,)-int64-cbrt]
tests/test_strides.py::test_strides_1arg[(10,)-int64-ceil]
tests/test_strides.py::test_strides_1arg[(10,)-int64-cosh]
tests/test_strides.py::test_strides_1arg[(10,)-int64-degrees]
tests/test_strides.py::test_strides_1arg[(10,)-int64-exp]
tests/test_strides.py::test_strides_1arg[(10,)-int64-exp2]
tests/test_strides.py::test_strides_1arg[(10,)-int64-expm1]
tests/test_strides.py::test_strides_1arg[(10,)-int64-fabs]
tests/test_strides.py::test_strides_1arg[(10,)-int64-floor]
tests/test_strides.py::test_strides_1arg[(10,)-int64-log10]
tests/test_strides.py::test_strides_1arg[(10,)-int64-log1p]
tests/test_strides.py::test_strides_1arg[(10,)-int64-log2]
tests/test_strides.py::test_strides_1arg[(10,)-int64-radians]
tests/test_strides.py::test_strides_1arg[(10,)-int64-sinh]
tests/test_strides.py::test_strides_1arg[(10,)-int64-tanh]
tests/test_strides.py::test_strides_1arg[(10,)-int64-trunc]
tests/test_strides.py::test_strides_1arg[(10,)-None-arccos]
tests/test_strides.py::test_strides_1arg[(10,)-None-arccosh]
tests/test_strides.py::test_strides_1arg[(10,)-None-arcsin]
tests/test_strides.py::test_strides_1arg[(10,)-None-arcsinh]
tests/test_strides.py::test_strides_1arg[(10,)-None-arctan]
tests/test_strides.py::test_strides_1arg[(10,)-None-arctanh]
tests/test_strides.py::test_strides_1arg[(10,)-None-cbrt]
tests/test_strides.py::test_strides_1arg[(10,)-None-ceil]
tests/test_strides.py::test_strides_1arg[(10,)-None-cosh]
tests/test_strides.py::test_strides_1arg[(10,)-None-degrees]
tests/test_strides.py::test_strides_1arg[(10,)-None-exp]
tests/test_strides.py::test_strides_1arg[(10,)-None-exp2]
tests/test_strides.py::test_strides_1arg[(10,)-None-expm1]
tests/test_strides.py::test_strides_1arg[(10,)-None-fabs]
tests/test_strides.py::test_strides_1arg[(10,)-None-floor]
tests/test_strides.py::test_strides_1arg[(10,)-None-log10]
tests/test_strides.py::test_strides_1arg[(10,)-None-log1p]
tests/test_strides.py::test_strides_1arg[(10,)-None-log2]
tests/test_strides.py::test_strides_1arg[(10,)-None-radians]
tests/test_strides.py::test_strides_1arg[(10,)-None-sinh]
tests/test_strides.py::test_strides_1arg[(10,)-None-tanh]
tests/test_strides.py::test_strides_1arg[(10,)-None-trunc]
tests/test_strides.py::test_strides_tan[(10,)-int32]
tests/test_strides.py::test_strides_tan[(10,)-int64]
tests/test_strides.py::test_strides_tan[(10,)-None]
tests/test_strides.py::test_strides_2args[(3, 3)-int32-power]
tests/test_strides.py::test_strides_2args[(3, 3)-int64-power]
tests/test_strides.py::test_strides_2args[(3, 3)-None-power]
tests/test_strides.py::test_strided_out_2args[int32-power]
tests/test_strides.py::test_strided_out_2args[int64-power]
tests/test_strides.py::test_strided_out_2args[float32-power]
tests/test_strides.py::test_strided_out_2args[None-power]
tests/test_strides.py::test_strided_in_out_2args[int32-power]
tests/test_strides.py::test_strided_in_out_2args[int64-power]

tests/test_sycl_queue.py::test_array_creation[opencl:gpu:0-arange-arg0-kwargs0]
tests/test_sycl_queue.py::test_array_creation[level_zero:gpu:0-arange-arg0-kwargs0]
tests/test_sycl_queue.py::test_1in_1out[opencl:gpu:0-gradient-data10]
tests/test_sycl_queue.py::test_1in_1out[level_zero:gpu:0-gradient-data10]
tests/test_sycl_queue.py::test_2in_1out[opencl:gpu:0-power-data112-data212]
tests/test_sycl_queue.py::test_2in_1out[level_zero:gpu:0-power-data112-data212]
tests/test_sycl_queue.py::test_out_2in_1out[opencl:gpu:0-power-data19-data29]
tests/test_sycl_queue.py::test_out_2in_1out[level_zero:gpu:0-power-data19-data29]
tests/test_sycl_queue.py::test_eig[opencl:gpu:0]
tests/test_sycl_queue.py::test_eig[level_zero:gpu:0]
tests/test_sycl_queue.py::test_eigh[opencl:gpu:0]
tests/test_sycl_queue.py::test_eigh[level_zero:gpu:0]
tests/test_sycl_queue.py::test_qr[opencl:gpu:0]
tests/test_sycl_queue.py::test_qr[level_zero:gpu:0]
tests/test_sycl_queue.py::test_svd[opencl:gpu:0]
tests/test_sycl_queue.py::test_svd[level_zero:gpu:0]
tests/test_sycl_queue.py::test_to_device[opencl:gpu:0-opencl:cpu:0]
tests/test_sycl_queue.py::test_to_device[level_zero:gpu:0-opencl:cpu:0]

tests/test_umath.py::test_umaths[('equal', 'dd')]
tests/test_umath.py::test_umaths[('arccos', 'd')0]
tests/test_umath.py::test_umaths[('arccos', 'd')1]
tests/test_umath.py::test_umaths[('arcsin', 'd')0]
tests/test_umath.py::test_umaths[('arcsin', 'd')1]
tests/test_umath.py::test_umaths[('arctan', 'd')0]
tests/test_umath.py::test_umaths[('arctan', 'd')1]
tests/test_umath.py::test_umaths[('cos', 'd')]
tests/test_umath.py::test_umaths[('deg2rad', 'd')]
tests/test_umath.py::test_umaths[('degrees', 'd')]
tests/test_umath.py::test_umaths[('rad2deg', 'd')]
tests/test_umath.py::test_umaths[('radians', 'd')]
tests/test_umath.py::test_umaths[('sin', 'd')]
tests/test_umath.py::test_umaths[('tan', 'd')0]
tests/test_umath.py::test_umaths[('tan', 'd')1]
tests/test_umath.py::test_umaths[('arctan2', 'dd')]
tests/test_umath.py::test_umaths[('hypot', 'dd')]
tests/test_umath.py::TestExp::test_exp
tests/test_umath.py::TestExp::test_invalid_dtype[numpy.float32]
tests/test_umath.py::TestExp::test_invalid_dtype[numpy.int64]
tests/test_umath.py::TestExp::test_invalid_dtype[numpy.int32]
tests/test_umath.py::TestExp::test_invalid_shape[(0,)]
tests/test_umath.py::TestExp::test_invalid_shape[(15, )]
tests/test_umath.py::TestExp::test_invalid_shape[(2,2)]
tests/test_umath.py::TestArcsin::test_arcsin
tests/test_umath.py::TestArcsin::test_invalid_dtype[numpy.float32]
tests/test_umath.py::TestArcsin::test_invalid_dtype[numpy.int64]
tests/test_umath.py::TestArcsin::test_invalid_dtype[numpy.int32]
tests/test_umath.py::TestArcsin::test_invalid_shape[(0,)]
tests/test_umath.py::TestArcsin::test_invalid_shape[(15, )]
tests/test_umath.py::TestArcsin::test_invalid_shape[(2,2)]
tests/test_umath.py::TestArctan::test_arctan
tests/test_umath.py::TestArctan::test_invalid_dtype[numpy.float32]
tests/test_umath.py::TestArctan::test_invalid_dtype[numpy.int64]
tests/test_umath.py::TestArctan::test_invalid_dtype[numpy.int32]
tests/test_umath.py::TestArctan::test_invalid_shape[(0,)]
tests/test_umath.py::TestArctan::test_invalid_shape[(15, )]
tests/test_umath.py::TestArctan::test_invalid_shape[(2,2)]
tests/test_umath.py::TestTan::test_tan
tests/test_umath.py::TestTan::test_invalid_dtype[numpy.float32]
tests/test_umath.py::TestTan::test_invalid_dtype[numpy.int64]
tests/test_umath.py::TestTan::test_invalid_dtype[numpy.int32]
tests/test_umath.py::TestTan::test_invalid_shape[(0,)]
tests/test_umath.py::TestTan::test_invalid_shape[(15, )]
tests/test_umath.py::TestTan::test_invalid_shape[(2,2)]
tests/test_umath.py::TestArctan2::test_arctan2
tests/test_umath.py::TestArctan2::test_invalid_shape[(0,)]
tests/test_umath.py::TestArctan2::test_invalid_shape[(15, )]
tests/test_umath.py::TestArctan2::test_invalid_shape[(2,2)]

tests/third_party/cupy/core_tests/test_ndarray_math.py::TestRound_param_2_{decimals=0}::test_round
tests/third_party/cupy/core_tests/test_ndarray_math.py::TestRound_param_0_{decimals=-2}::test_round_out
tests/third_party/cupy/core_tests/test_ndarray_math.py::TestRound_param_1_{decimals=-1}::test_round_out
tests/third_party/cupy/core_tests/test_ndarray_math.py::TestRound_param_2_{decimals=0}::test_round_out
tests/third_party/cupy/core_tests/test_ndarray_math.py::TestRound_param_3_{decimals=1}::test_round_out
tests/third_party/cupy/core_tests/test_ndarray_math.py::TestRound_param_4_{decimals=2}::test_round_out

tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_arange_no_dtype_float
tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_linspace_array_start_stop
tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_linspace_float_overflow
tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_linspace_float_underflow
tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_linspace_mixed_start_stop
tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_linspace_mixed_start_stop2
tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_linspace_no_dtype_float
tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_linspace_no_dtype_int
tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_linspace_start_stop_list
tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_logspace_base
tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_logspace_no_dtype_float
tests/third_party/cupy/creation_tests/test_ranges.py::TestRanges::test_logspace_no_dtype_int
tests/third_party/cupy/creation_tests/test_ranges.py::TestMgrid::test_mgrid2
tests/third_party/cupy/creation_tests/test_ranges.py::TestMgrid::test_mgrid4
tests/third_party/cupy/creation_tests/test_ranges.py::TestOgrid::test_ogrid2

tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_2_{n=None, norm=None, shape=(10,)}::test_fft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_2_{n=None, norm=None, shape=(10,)}::test_ifft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_3_{n=None, norm=None, shape=(10, 10)}::test_fft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_3_{n=None, norm=None, shape=(10, 10)}::test_ifft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_6_{n=None, norm='ortho', shape=(10,)}::test_fft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_6_{n=None, norm='ortho', shape=(10,)}::test_ifft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_7_{n=None, norm='ortho', shape=(10, 10)}::test_fft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_7_{n=None, norm='ortho', shape=(10, 10)}::test_ifft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_0_{axes=None, norm=None, s=None, shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_0_{axes=None, norm=None, s=None, shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_2_{axes=None, norm=None, s=(1, 5), shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_2_{axes=None, norm=None, s=(1, 5), shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_3_{axes=(-2, -1), norm=None, s=None, shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_3_{axes=(-2, -1), norm=None, s=None, shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_4_{axes=(-1, -2), norm=None, s=None, shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_4_{axes=(-1, -2), norm=None, s=None, shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_5_{axes=(0,), norm=None, s=None, shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_5_{axes=(0,), norm=None, s=None, shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_6_{axes=None, norm='ortho', s=None, shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_6_{axes=None, norm='ortho', s=None, shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_8_{axes=None, norm=None, s=None, shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_8_{axes=None, norm=None, s=None, shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_10_{axes=None, norm=None, s=(1, 4, 10), shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_10_{axes=None, norm=None, s=(1, 4, 10), shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_11_{axes=(-3, -2, -1), norm=None, s=None, shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_11_{axes=(-3, -2, -1), norm=None, s=None, shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_12_{axes=(-1, -2, -3), norm=None, s=None, shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_12_{axes=(-1, -2, -3), norm=None, s=None, shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_13_{axes=(0, 1), norm=None, s=None, shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_13_{axes=(0, 1), norm=None, s=None, shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_14_{axes=None, norm='ortho', s=None, shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_14_{axes=None, norm='ortho', s=None, shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_17_{axes=None, norm=None, s=None, shape=(2, 3, 4, 5)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_17_{axes=None, norm=None, s=None, shape=(2, 3, 4, 5)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_0_{axes=None, norm=None, s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_0_{axes=None, norm=None, s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_2_{axes=None, norm=None, s=(1, 5), shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_2_{axes=None, norm=None, s=(1, 5), shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_3_{axes=(-2, -1), norm=None, s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_3_{axes=(-2, -1), norm=None, s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_4_{axes=(-1, -2), norm=None, s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_4_{axes=(-1, -2), norm=None, s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_5_{axes=[-1, -2], norm=None, s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_5_{axes=[-1, -2], norm=None, s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_6_{axes=(0,), norm=None, s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_6_{axes=(0,), norm=None, s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_8_{axes=None, norm='ortho', s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_8_{axes=None, norm='ortho', s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_9_{axes=None, norm=None, s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_9_{axes=None, norm=None, s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_11_{axes=None, norm=None, s=(1, 4, 10), shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_11_{axes=None, norm=None, s=(1, 4, 10), shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_12_{axes=(-3, -2, -1), norm=None, s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_12_{axes=(-3, -2, -1), norm=None, s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_13_{axes=(-1, -2, -3), norm=None, s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_13_{axes=(-1, -2, -3), norm=None, s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_14_{axes=(-1, -3), norm=None, s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_14_{axes=(-1, -3), norm=None, s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_15_{axes=(0, 1), norm=None, s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_15_{axes=(0, 1), norm=None, s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_16_{axes=None, norm='ortho', s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_16_{axes=None, norm='ortho', s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_19_{axes=(2, 0, 1), norm='ortho', s=(4, 3, 2), shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_19_{axes=(2, 0, 1), norm='ortho', s=(4, 3, 2), shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_20_{axes=None, norm=None, s=None, shape=(2, 3, 4, 5)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_20_{axes=None, norm=None, s=None, shape=(2, 3, 4, 5)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_0_{n=None, norm=None, shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_0_{n=None, norm=None, shape=(10,)}::test_rfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_1_{n=None, norm=None, shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_1_{n=None, norm=None, shape=(10, 10)}::test_rfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_2_{n=None, norm='ortho', shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_3_{n=None, norm='ortho', shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_4_{n=5, norm=None, shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_5_{n=5, norm=None, shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_6_{n=5, norm='ortho', shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_7_{n=5, norm='ortho', shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_8_{n=10, norm=None, shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_9_{n=10, norm=None, shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_10_{n=10, norm='ortho', shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_11_{n=10, norm='ortho', shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_12_{n=15, norm=None, shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_13_{n=15, norm=None, shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_14_{n=15, norm='ortho', shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_15_{n=15, norm='ortho', shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_0_{n=None, norm=None, shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_0_{n=None, norm=None, shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_1_{n=None, norm=None, shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_1_{n=None, norm=None, shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_2_{n=None, norm='ortho', shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_2_{n=None, norm='ortho', shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_3_{n=None, norm='ortho', shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_3_{n=None, norm='ortho', shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_4_{n=5, norm=None, shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_4_{n=5, norm=None, shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_5_{n=5, norm=None, shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_5_{n=5, norm=None, shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_6_{n=5, norm='ortho', shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_6_{n=5, norm='ortho', shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_7_{n=5, norm='ortho', shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_7_{n=5, norm='ortho', shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_8_{n=10, norm=None, shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_8_{n=10, norm=None, shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_9_{n=10, norm=None, shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_9_{n=10, norm=None, shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_10_{n=10, norm='ortho', shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_10_{n=10, norm='ortho', shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_11_{n=10, norm='ortho', shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_11_{n=10, norm='ortho', shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_12_{n=15, norm=None, shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_12_{n=15, norm=None, shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_13_{n=15, norm=None, shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_13_{n=15, norm=None, shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_14_{n=15, norm='ortho', shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_14_{n=15, norm='ortho', shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_15_{n=15, norm='ortho', shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_15_{n=15, norm='ortho', shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_0_{d=1, n=1}::test_fftfreq
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_0_{d=1, n=1}::test_rfftfreq
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_1_{d=0.5, n=10}::test_fftfreq
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_1_{d=0.5, n=10}::test_rfftfreq
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_2_{d=2, n=100}::test_fftfreq
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_2_{d=2, n=100}::test_rfftfreq
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_2_{n=None, norm=None, shape=(10,)}::test_fft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_2_{n=None, norm=None, shape=(10,)}::test_ifft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_3_{n=None, norm=None, shape=(10, 10)}::test_fft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_3_{n=None, norm=None, shape=(10, 10)}::test_ifft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_6_{n=None, norm='ortho', shape=(10,)}::test_fft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_6_{n=None, norm='ortho', shape=(10,)}::test_ifft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_7_{n=None, norm='ortho', shape=(10, 10)}::test_fft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft_param_7_{n=None, norm='ortho', shape=(10, 10)}::test_ifft
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_0_{axes=None, norm=None, s=None, shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_0_{axes=None, norm=None, s=None, shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_2_{axes=None, norm=None, s=(1, 5), shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_2_{axes=None, norm=None, s=(1, 5), shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_3_{axes=(-2, -1), norm=None, s=None, shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_3_{axes=(-2, -1), norm=None, s=None, shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_4_{axes=(-1, -2), norm=None, s=None, shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_4_{axes=(-1, -2), norm=None, s=None, shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_5_{axes=(0,), norm=None, s=None, shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_5_{axes=(0,), norm=None, s=None, shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_6_{axes=None, norm='ortho', s=None, shape=(3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_6_{axes=None, norm='ortho', s=None, shape=(3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_8_{axes=None, norm=None, s=None, shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_8_{axes=None, norm=None, s=None, shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_10_{axes=None, norm=None, s=(1, 4, 10), shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_10_{axes=None, norm=None, s=(1, 4, 10), shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_11_{axes=(-3, -2, -1), norm=None, s=None, shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_11_{axes=(-3, -2, -1), norm=None, s=None, shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_12_{axes=(-1, -2, -3), norm=None, s=None, shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_12_{axes=(-1, -2, -3), norm=None, s=None, shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_13_{axes=(0, 1), norm=None, s=None, shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_13_{axes=(0, 1), norm=None, s=None, shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_14_{axes=None, norm='ortho', s=None, shape=(2, 3, 4)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_14_{axes=None, norm='ortho', s=None, shape=(2, 3, 4)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_17_{axes=None, norm=None, s=None, shape=(2, 3, 4, 5)}::test_fft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFft2_param_17_{axes=None, norm=None, s=None, shape=(2, 3, 4, 5)}::test_ifft2
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_0_{axes=None, norm=None, s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_0_{axes=None, norm=None, s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_2_{axes=None, norm=None, s=(1, 5), shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_2_{axes=None, norm=None, s=(1, 5), shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_3_{axes=(-2, -1), norm=None, s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_3_{axes=(-2, -1), norm=None, s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_4_{axes=(-1, -2), norm=None, s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_4_{axes=(-1, -2), norm=None, s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_5_{axes=[-1, -2], norm=None, s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_5_{axes=[-1, -2], norm=None, s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_6_{axes=(0,), norm=None, s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_6_{axes=(0,), norm=None, s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_8_{axes=None, norm='ortho', s=None, shape=(3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_8_{axes=None, norm='ortho', s=None, shape=(3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_9_{axes=None, norm=None, s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_9_{axes=None, norm=None, s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_11_{axes=None, norm=None, s=(1, 4, 10), shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_11_{axes=None, norm=None, s=(1, 4, 10), shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_12_{axes=(-3, -2, -1), norm=None, s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_12_{axes=(-3, -2, -1), norm=None, s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_13_{axes=(-1, -2, -3), norm=None, s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_13_{axes=(-1, -2, -3), norm=None, s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_14_{axes=(-1, -3), norm=None, s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_14_{axes=(-1, -3), norm=None, s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_15_{axes=(0, 1), norm=None, s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_15_{axes=(0, 1), norm=None, s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_16_{axes=None, norm='ortho', s=None, shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_16_{axes=None, norm='ortho', s=None, shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_19_{axes=(2, 0, 1), norm='ortho', s=(4, 3, 2), shape=(2, 3, 4)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_19_{axes=(2, 0, 1), norm='ortho', s=(4, 3, 2), shape=(2, 3, 4)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_20_{axes=None, norm=None, s=None, shape=(2, 3, 4, 5)}::test_fftn
tests/third_party/cupy/fft_tests/test_fft.py::TestFftn_param_20_{axes=None, norm=None, s=None, shape=(2, 3, 4, 5)}::test_ifftn
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_0_{n=None, norm=None, shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_0_{n=None, norm=None, shape=(10,)}::test_rfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_1_{n=None, norm=None, shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_1_{n=None, norm=None, shape=(10, 10)}::test_rfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_2_{n=None, norm='ortho', shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_3_{n=None, norm='ortho', shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_4_{n=5, norm=None, shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_5_{n=5, norm=None, shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_6_{n=5, norm='ortho', shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_7_{n=5, norm='ortho', shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_8_{n=10, norm=None, shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_9_{n=10, norm=None, shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_10_{n=10, norm='ortho', shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_11_{n=10, norm='ortho', shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_12_{n=15, norm=None, shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_13_{n=15, norm=None, shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_14_{n=15, norm='ortho', shape=(10,)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestRfft_param_15_{n=15, norm='ortho', shape=(10, 10)}::test_irfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_0_{n=None, norm=None, shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_0_{n=None, norm=None, shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_1_{n=None, norm=None, shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_1_{n=None, norm=None, shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_2_{n=None, norm='ortho', shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_2_{n=None, norm='ortho', shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_3_{n=None, norm='ortho', shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_3_{n=None, norm='ortho', shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_4_{n=5, norm=None, shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_4_{n=5, norm=None, shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_5_{n=5, norm=None, shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_5_{n=5, norm=None, shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_6_{n=5, norm='ortho', shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_6_{n=5, norm='ortho', shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_7_{n=5, norm='ortho', shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_7_{n=5, norm='ortho', shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_8_{n=10, norm=None, shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_8_{n=10, norm=None, shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_9_{n=10, norm=None, shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_9_{n=10, norm=None, shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_10_{n=10, norm='ortho', shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_10_{n=10, norm='ortho', shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_11_{n=10, norm='ortho', shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_11_{n=10, norm='ortho', shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_12_{n=15, norm=None, shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_12_{n=15, norm=None, shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_13_{n=15, norm=None, shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_13_{n=15, norm=None, shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_14_{n=15, norm='ortho', shape=(10,)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_14_{n=15, norm='ortho', shape=(10,)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_15_{n=15, norm='ortho', shape=(10, 10)}::test_hfft
tests/third_party/cupy/fft_tests/test_fft.py::TestHfft_param_15_{n=15, norm='ortho', shape=(10, 10)}::test_ihfft
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_0_{d=1, n=1}::test_fftfreq
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_0_{d=1, n=1}::test_rfftfreq
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_1_{d=0.5, n=10}::test_fftfreq
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_1_{d=0.5, n=10}::test_rfftfreq
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_2_{d=2, n=100}::test_fftfreq
tests/third_party/cupy/fft_tests/test_fft.py::TestFftfreq_param_2_{d=2, n=100}::test_rfftfreq

tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalue_param_0_{UPLO='U'}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalue_param_0_{UPLO='U'}::test_eigh_batched
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalue_param_1_{UPLO='L'}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalue_param_1_{UPLO='L'}::test_eigh_batched
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_0_{UPLO='U', shape=(0, 0)}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_1_{UPLO='U', shape=(2, 0, 0)}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_2_{UPLO='U', shape=(0, 3, 3)}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_3_{UPLO='L', shape=(0, 0)}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_4_{UPLO='L', shape=(2, 0, 0)}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_5_{UPLO='L', shape=(0, 3, 3)}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalue_param_0_{UPLO='U'}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalue_param_0_{UPLO='U'}::test_eigh_batched
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalue_param_1_{UPLO='L'}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalue_param_1_{UPLO='L'}::test_eigh_batched
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_0_{UPLO='U', shape=(0, 0)}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_1_{UPLO='U', shape=(2, 0, 0)}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_2_{UPLO='U', shape=(0, 3, 3)}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_3_{UPLO='L', shape=(0, 0)}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_4_{UPLO='L', shape=(2, 0, 0)}::test_eigh
tests/third_party/cupy/linalg_tests/test_eigenvalue.py::TestEigenvalueEmpty_param_5_{UPLO='L', shape=(0, 3, 3)}::test_eigh
tests/third_party/cupy/linalg_tests/test_einsum.py::TestEinSumLarge_param_0_{opt=('greedy', 0), subscript='a,b,c->abc'}::test_einsum
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_0_{shape=((2, 3, 4), (3, 4, 2)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_1_{shape=((2, 3, 4), (3, 4, 2)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_2_{shape=((2, 3, 4), (3, 4, 2)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_3_{shape=((2, 3, 4), (3, 4, 2)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_4_{shape=((1, 1), (1, 1)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_5_{shape=((1, 1), (1, 1)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_6_{shape=((1, 1), (1, 1)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_7_{shape=((1, 1), (1, 1)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_8_{shape=((1, 1), (1, 2)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_9_{shape=((1, 1), (1, 2)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_10_{shape=((1, 1), (1, 2)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_11_{shape=((1, 1), (1, 2)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_12_{shape=((1, 2), (2, 1)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_13_{shape=((1, 2), (2, 1)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_14_{shape=((1, 2), (2, 1)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_15_{shape=((1, 2), (2, 1)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_16_{shape=((2, 1), (1, 1)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_17_{shape=((2, 1), (1, 1)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_18_{shape=((2, 1), (1, 1)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_19_{shape=((2, 1), (1, 1)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_20_{shape=((1, 2), (2, 3)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_21_{shape=((1, 2), (2, 3)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_22_{shape=((1, 2), (2, 3)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_23_{shape=((1, 2), (2, 3)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_24_{shape=((2, 1), (1, 3)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_25_{shape=((2, 1), (1, 3)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_26_{shape=((2, 1), (1, 3)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_27_{shape=((2, 1), (1, 3)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_28_{shape=((2, 3), (3, 1)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_29_{shape=((2, 3), (3, 1)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_30_{shape=((2, 3), (3, 1)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_31_{shape=((2, 3), (3, 1)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_32_{shape=((2, 3), (3, 4)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_33_{shape=((2, 3), (3, 4)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_34_{shape=((2, 3), (3, 4)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_35_{shape=((2, 3), (3, 4)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_36_{shape=((0, 3), (3, 4)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_37_{shape=((0, 3), (3, 4)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_38_{shape=((0, 3), (3, 4)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_39_{shape=((0, 3), (3, 4)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_40_{shape=((2, 3), (3, 0)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_41_{shape=((2, 3), (3, 0)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_42_{shape=((2, 3), (3, 0)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_43_{shape=((2, 3), (3, 0)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_44_{shape=((0, 3), (3, 0)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_45_{shape=((0, 3), (3, 0)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_46_{shape=((0, 3), (3, 0)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_47_{shape=((0, 3), (3, 0)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_48_{shape=((3, 0), (0, 4)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_49_{shape=((3, 0), (0, 4)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_50_{shape=((3, 0), (0, 4)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_51_{shape=((3, 0), (0, 4)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_52_{shape=((2, 3, 0), (3, 0, 2)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_53_{shape=((2, 3, 0), (3, 0, 2)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_54_{shape=((2, 3, 0), (3, 0, 2)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_55_{shape=((2, 3, 0), (3, 0, 2)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_56_{shape=((0, 0), (0, 0)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_57_{shape=((0, 0), (0, 0)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_58_{shape=((0, 0), (0, 0)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_59_{shape=((0, 0), (0, 0)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_60_{shape=((3,), (3,)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_61_{shape=((3,), (3,)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_62_{shape=((3,), (3,)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_63_{shape=((3,), (3,)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_64_{shape=((2,), (2, 4)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_65_{shape=((2,), (2, 4)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_66_{shape=((2,), (2, 4)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_67_{shape=((2,), (2, 4)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_68_{shape=((4, 2), (2,)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_69_{shape=((4, 2), (2,)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_70_{shape=((4, 2), (2,)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDot_param_71_{shape=((4, 2), (2,)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_0_{shape=((), ()), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_1_{shape=((), ()), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_2_{shape=((), ()), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_3_{shape=((), ()), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_4_{shape=((), (2, 4)), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_5_{shape=((), (2, 4)), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_6_{shape=((), (2, 4)), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_7_{shape=((), (2, 4)), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_8_{shape=((4, 2), ()), trans_a=True, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_9_{shape=((4, 2), ()), trans_a=True, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_10_{shape=((4, 2), ()), trans_a=False, trans_b=True}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestDotFor0Dim_param_11_{shape=((4, 2), ()), trans_a=False, trans_b=False}::test_dot
tests/third_party/cupy/linalg_tests/test_product.py::TestCrossProduct_param_0_{params=((3,), (3,), -1, -1, -1)}::test_cross
tests/third_party/cupy/linalg_tests/test_product.py::TestCrossProduct_param_1_{params=((1, 2), (1, 2), -1, -1, 1)}::test_cross
tests/third_party/cupy/linalg_tests/test_product.py::TestCrossProduct_param_2_{params=((1, 3), (1, 3), 1, -1, -1)}::test_cross
tests/third_party/cupy/linalg_tests/test_product.py::TestCrossProduct_param_3_{params=((1, 2), (1, 3), -1, -1, 1)}::test_cross
tests/third_party/cupy/linalg_tests/test_product.py::TestCrossProduct_param_4_{params=((2, 2), (1, 3), -1, -1, 0)}::test_cross
tests/third_party/cupy/linalg_tests/test_product.py::TestCrossProduct_param_5_{params=((3, 3), (1, 2), 0, -1, -1)}::test_cross
tests/third_party/cupy/linalg_tests/test_product.py::TestCrossProduct_param_6_{params=((0, 3), (0, 3), -1, -1, -1)}::test_cross
tests/third_party/cupy/linalg_tests/test_product.py::TestCrossProduct_param_7_{params=((2, 0, 3), (2, 0, 3), 0, 0, 0)}::test_cross
tests/third_party/cupy/linalg_tests/test_product.py::TestCrossProduct_param_8_{params=((2, 4, 5, 3), (2, 4, 5, 3), -1, -1, 0)}::test_cross
tests/third_party/cupy/linalg_tests/test_product.py::TestCrossProduct_param_9_{params=((2, 4, 5, 2), (2, 4, 5, 2), 0, 0, -1)}::test_cross

tests/third_party/cupy/logic_tests/test_content.py::TestContent::test_isfinite
tests/third_party/cupy/logic_tests/test_content.py::TestContent::test_isinf
tests/third_party/cupy/logic_tests/test_content.py::TestContent::test_isnan

tests/third_party/cupy/manipulation_tests/test_basic.py::TestCopytoFromScalar_param_6_{dst_shape=(), src=(1+1j)}::test_copyto

tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticUnary_param_5_{arg1=2.0, name='reciprocal'}::test_unary

tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_4_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_5_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_6_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_7_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_8_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_9_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_10_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_11_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_12_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_13_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_14_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_15_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_36_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_37_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_38_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_39_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_40_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_41_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_42_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_43_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_44_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_45_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_46_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_47_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_64_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_65_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_66_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_67_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_68_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_69_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_70_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_71_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_74_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_78_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_82_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0, name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_84_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_85_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_86_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_87_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_90_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2, name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_92_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_93_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_94_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_95_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_96_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_97_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_98_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_99_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_100_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_101_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_102_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_103_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_106_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_110_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_114_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0, name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_116_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_117_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_118_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_119_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_122_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2, name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_124_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_125_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_126_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_127_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_132_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_133_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_134_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_135_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_138_{arg1=0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_142_{arg1=0, arg2=array([[0, 1, 2],       [3, 4, 5]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_164_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_165_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_166_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_167_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_168_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_169_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_170_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_171_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_172_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_173_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_174_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_175_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_196_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_197_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_198_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_199_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_202_{arg1=2, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_206_{arg1=2, arg2=array([[0, 1, 2],       [3, 4, 5]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_228_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_229_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_230_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_231_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_232_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_233_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_234_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_235_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_236_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), name='add'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_237_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), name='multiply'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_238_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), name='power'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_239_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_259_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_260_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_261_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_262_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_263_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_264_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_265_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_266_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_267_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_286_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_287_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_288_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_289_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_290_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_291_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_292_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_293_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_294_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_295_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_296_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_297_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_298_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_299_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_300_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_301_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_302_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_303_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_304_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_305_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_306_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_307_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_308_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_309_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_310_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_311_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_312_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_313_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_314_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_315_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_316_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_317_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_318_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_319_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_320_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_321_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_322_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_323_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_325_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_326_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_328_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_329_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_331_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_332_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_333_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_334_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_335_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_337_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_338_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_339_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_340_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_341_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_343_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_344_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_345_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_346_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_347_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_348_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_349_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_350_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_351_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_352_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_353_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_355_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_356_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_358_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_359_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_361_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_362_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_363_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_364_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_365_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_367_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_368_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_369_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_370_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_371_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_373_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_374_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_375_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_379_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_380_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_381_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_382_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_383_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_385_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_386_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_409_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_410_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_411_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_412_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_413_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_414_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_415_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_416_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_417_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_439_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_440_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_441_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_442_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_443_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_445_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_446_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_469_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_470_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_471_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_472_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_473_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_474_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_475_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_476_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_477_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_499_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_500_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_501_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_502_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_503_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_505_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_506_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_529_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_530_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_531_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_532_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_533_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_534_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), name='subtract'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_535_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), name='divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_536_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), name='true_divide'}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary_param_537_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), name='subtract'}::test_binary

tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_0_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_2_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_3_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_4_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_5_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_6_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_7_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_8_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_9_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_10_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_11_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_12_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_13_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_14_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_15_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_16_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_17_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_18_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_19_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_20_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_21_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_22_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_23_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_24_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_25_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_26_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_27_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_28_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_29_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_30_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_31_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_32_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_33_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_34_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_35_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_48_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_49_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_50_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_51_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_64_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_65_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_66_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_67_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_80_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_81_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_82_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_83_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_96_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_97_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_98_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_99_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_112_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_113_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_114_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_115_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_128_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_130_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_132_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_134_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_135_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='power', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_136_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_137_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_138_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_139_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='subtract', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_140_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=0.0, dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_142_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=0.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_144_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=0.0, dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_146_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=2.0, dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_148_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=2.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_150_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=2.0, dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_152_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=-2.0, dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_154_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=-2.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_156_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=-2.0, dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_158_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_159_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='power', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_160_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_161_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_162_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_163_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='subtract', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_164_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_165_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='power', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_166_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_167_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_168_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_169_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='subtract', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_170_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_171_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='power', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_172_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_173_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_174_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_175_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='subtract', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_176_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_177_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='power', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_178_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_179_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_180_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_181_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='subtract', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_182_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_183_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='power', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_184_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_185_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_186_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_187_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='subtract', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_188_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_190_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_192_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_194_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_195_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='power', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_196_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_197_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_198_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_199_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='subtract', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_218_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_220_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_222_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_224_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_225_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='power', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_226_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_227_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_228_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_229_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='subtract', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_248_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_250_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_252_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_254_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='power', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_255_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='power', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_256_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='true_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_257_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='true_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_258_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='subtract', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_259_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='subtract', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_278_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_280_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_282_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_284_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_286_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_287_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_288_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_289_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_290_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_291_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_292_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_293_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_294_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_295_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_296_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_297_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_298_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_299_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_300_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_301_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_302_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_303_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_304_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_305_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_306_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_307_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_308_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_309_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_310_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_312_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_314_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_316_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_318_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_320_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_322_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_324_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_326_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_328_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_330_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_332_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_334_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_336_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_338_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_340_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_342_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_344_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_346_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_348_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_350_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_352_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_354_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_356_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_358_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_360_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_362_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_364_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_366_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_367_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_368_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_369_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_370_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_371_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_372_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_373_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_374_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_375_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_376_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_377_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_378_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_379_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_380_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_381_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_382_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_383_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_384_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_385_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_386_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_387_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_388_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_389_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_390_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_392_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_394_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_396_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_398_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_400_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_402_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_404_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=0.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_406_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_408_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_410_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_412_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_414_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_416_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_418_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_420_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_422_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_424_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_426_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_428_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_430_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_432_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_434_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_436_{arg1=array([[1., 2., 3.],       [4., 5., 6.]], dtype=float32), arg2=-2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_438_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_439_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_440_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_441_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_442_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_443_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_444_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_445_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_446_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_447_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_448_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_449_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_450_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_451_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_452_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_453_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_454_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_456_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_458_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_459_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_460_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_461_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_462_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_464_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_466_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_467_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_468_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_469_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_470_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_472_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_474_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_476_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_478_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_479_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_480_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_481_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_482_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_483_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_484_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_485_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=0.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_486_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_488_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_490_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_492_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_494_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_495_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_496_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_497_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_498_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_499_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_500_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_501_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=2.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_502_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_504_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_506_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_508_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_510_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_511_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_512_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_513_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_514_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_515_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_516_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_517_{arg1=array([[1, 2, 3],       [4, 5, 6]], dtype=int32), arg2=-2.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_518_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_519_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_520_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_521_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_522_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_523_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_524_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_525_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_526_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_527_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_528_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_529_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_530_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_531_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_532_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_533_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_534_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_536_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_538_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_539_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_540_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_541_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_542_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_544_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_546_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_547_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_548_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_549_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_550_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_552_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_554_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_556_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_558_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_559_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_560_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_561_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_562_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_563_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_564_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_565_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=0.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_566_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_568_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_570_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_572_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_574_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_575_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_576_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_577_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_578_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_579_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_580_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_581_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=2.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_582_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_584_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_586_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_588_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_590_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_591_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_592_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_593_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_594_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_595_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_596_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_597_{arg1=array([[1, 2, 3],       [4, 5, 6]]), arg2=-2.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_598_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_600_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_602_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_604_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_606_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_607_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_608_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_609_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_610_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_611_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_612_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_613_{arg1=0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_614_{arg1=0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_616_{arg1=0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_618_{arg1=0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_620_{arg1=0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_622_{arg1=0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_624_{arg1=0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_626_{arg1=0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_628_{arg1=0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_678_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_680_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_682_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_684_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_686_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_687_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_688_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_689_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_690_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_691_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_692_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_693_{arg1=0.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_694_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_695_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_696_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_697_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_698_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_699_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_700_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_701_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_702_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_703_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_704_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_705_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_706_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_707_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_708_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_709_{arg1=0.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_758_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_760_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_762_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_764_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_766_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_767_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_768_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_769_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_770_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_771_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_772_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_773_{arg1=2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_774_{arg1=2, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_776_{arg1=2, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_778_{arg1=2, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_780_{arg1=2, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_782_{arg1=2, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_784_{arg1=2, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_786_{arg1=2, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_788_{arg1=2, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_838_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_840_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_842_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_844_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_846_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_847_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_848_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_849_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_850_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_851_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_852_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_853_{arg1=2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_854_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_855_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_856_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_857_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_858_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_859_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_860_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_861_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_862_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_863_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_864_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_865_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_866_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_867_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_868_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_869_{arg1=2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_918_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_920_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_922_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_924_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_926_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_927_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_928_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_929_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_930_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_931_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_932_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_933_{arg1=-2, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_934_{arg1=-2, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_936_{arg1=-2, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_938_{arg1=-2, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_940_{arg1=-2, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_942_{arg1=-2, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_944_{arg1=-2, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_946_{arg1=-2, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_948_{arg1=-2, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_998_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1000_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1002_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1004_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1006_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1007_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1008_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1009_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1010_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1011_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1012_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1013_{arg1=-2.0, arg2=array([[0., 1., 2.],       [3., 4., 5.]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1014_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1015_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1016_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1017_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1018_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1019_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1020_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1021_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1022_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1023_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1024_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1025_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1026_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1027_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1028_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1029_{arg1=-2.0, arg2=array([[0, 1, 2],       [3, 4, 5]]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1078_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1080_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1082_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1084_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1086_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1087_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1088_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1089_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1090_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1091_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1092_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1093_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1094_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1095_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1096_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1097_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1098_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1099_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1100_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1101_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1102_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1103_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1104_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1105_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1106_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1107_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1108_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1109_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1110_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1112_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1114_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1116_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1118_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1120_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=0.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1122_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=0.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1124_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=0.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1126_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1128_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1130_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1132_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1134_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1136_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1138_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1140_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1142_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=-2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1144_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=-2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1146_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=-2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1148_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=-2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1150_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1152_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=-2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1154_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=-2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1156_{arg1=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), arg2=-2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1158_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1159_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1160_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1161_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1162_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1163_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1164_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1165_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1166_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1167_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1168_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1169_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1170_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1171_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1172_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1173_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1174_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1175_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1176_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1177_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1178_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1179_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1180_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1181_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1182_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1183_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1184_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1185_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1186_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1187_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1188_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1189_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1190_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1191_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1192_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1193_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1194_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1195_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1196_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1197_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1198_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1199_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1200_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1201_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1202_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1203_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1204_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1205_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=0.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1206_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1207_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1208_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1209_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1210_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1211_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1212_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1213_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1214_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1215_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1216_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1217_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1218_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1219_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1220_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1221_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=2.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1222_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1223_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1224_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1225_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1226_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1227_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1228_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1229_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1230_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1231_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1232_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1233_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1234_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1235_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1236_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1237_{arg1=array([-3., -2., -1.,  1.,  2.,  3.]), arg2=-2.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1238_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1239_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1240_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1241_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1242_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1243_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1244_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1245_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1246_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1247_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1248_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1249_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1250_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1251_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1252_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1253_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1254_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1256_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1258_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1259_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1260_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1261_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1262_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1264_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1266_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1267_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1268_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1269_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1270_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1272_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1274_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1276_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1278_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1279_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1280_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1281_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1282_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1283_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1284_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1285_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=0.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1286_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1288_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1290_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1292_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1294_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1295_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1296_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1297_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1298_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1299_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1300_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1301_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=2.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1302_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1304_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1306_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1308_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1310_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1311_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1312_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1313_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1314_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1315_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1316_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1317_{arg1=array([-3, -2, -1,  1,  2,  3], dtype=int32), arg2=-2.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1318_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1319_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1320_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1321_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1322_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1323_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1324_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1325_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1326_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1327_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1328_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1329_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1330_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1331_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1332_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1333_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1334_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1336_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1338_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1339_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1340_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1341_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1342_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1344_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1346_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1347_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1348_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1349_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1350_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1352_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1354_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1356_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1358_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1359_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1360_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1361_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1362_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1363_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1364_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1365_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=0.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1366_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1368_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1370_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1372_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1374_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1375_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1376_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1377_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1378_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1379_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1380_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1381_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=2.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1382_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1384_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1386_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1388_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1390_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1391_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1392_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1393_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1394_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1395_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1396_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1397_{arg1=array([-3, -2, -1,  1,  2,  3]), arg2=-2.0, dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1398_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1400_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1402_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1404_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1406_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1407_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1408_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1409_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1410_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1411_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1412_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1413_{arg1=0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1414_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1416_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1418_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1420_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1422_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1424_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1426_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1428_{arg1=0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1478_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1480_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1482_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1484_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1486_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1487_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1488_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1489_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1490_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1491_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1492_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1493_{arg1=0.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1494_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1495_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1496_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1497_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1498_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1499_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1500_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1501_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1502_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1503_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1504_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1505_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1506_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1507_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1508_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1509_{arg1=0.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1558_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1560_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1562_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1564_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1566_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1567_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1568_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1569_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1570_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1571_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1572_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1573_{arg1=2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1574_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1576_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1578_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1580_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1582_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1584_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1586_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1588_{arg1=2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1638_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1640_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1642_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1644_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1646_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1647_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1648_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1649_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1650_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1651_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1652_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1653_{arg1=2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1654_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1655_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1656_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1657_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1658_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1659_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1660_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1661_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1662_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1663_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1664_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1665_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1666_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1667_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1668_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1669_{arg1=2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1718_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1720_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1722_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1724_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1726_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1727_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1728_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1729_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1730_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1731_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1732_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1733_{arg1=-2, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1734_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1736_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1738_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1740_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1742_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1744_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1746_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1748_{arg1=-2, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1798_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1800_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1802_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1804_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.], dtype=float32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1806_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1807_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1808_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1809_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1810_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1811_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1812_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1813_{arg1=-2.0, arg2=array([-3., -2., -1.,  1.,  2.,  3.]), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1814_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1815_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1816_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1817_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1818_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1819_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1820_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1821_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3], dtype=int32), dtype=float64, name='mod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1822_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1823_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='floor_divide', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1824_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1825_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='fmod', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1826_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1827_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='remainder', use_dtype=False}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1828_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=True}::test_binary
tests/third_party/cupy/math_tests/test_arithmetic.py::TestArithmeticBinary2_param_1829_{arg1=-2.0, arg2=array([-3, -2, -1,  1,  2,  3]), dtype=float64, name='mod', use_dtype=False}::test_binary

tests/third_party/cupy/math_tests/test_rounding.py::TestRound_param_0_{decimals=-2}::test_round_out
tests/third_party/cupy/math_tests/test_rounding.py::TestRound_param_1_{decimals=-1}::test_round_out
tests/third_party/cupy/math_tests/test_rounding.py::TestRound_param_2_{decimals=0}::test_round
tests/third_party/cupy/math_tests/test_rounding.py::TestRound_param_2_{decimals=0}::test_round_out
tests/third_party/cupy/math_tests/test_rounding.py::TestRound_param_3_{decimals=1}::test_round_out
tests/third_party/cupy/math_tests/test_rounding.py::TestRound_param_4_{decimals=2}::test_round_out
tests/third_party/cupy/math_tests/test_rounding.py::TestRoundBorder_param_6_{value=(1.4, 0)}::test_around_negative1
tests/third_party/cupy/math_tests/test_rounding.py::TestRoundBorder_param_6_{value=(1.4, 0)}::test_around_positive1
tests/third_party/cupy/math_tests/test_rounding.py::TestRoundBorder_param_7_{value=(1.5, 0)}::test_around_negative1
tests/third_party/cupy/math_tests/test_rounding.py::TestRoundBorder_param_7_{value=(1.5, 0)}::test_around_positive1
tests/third_party/cupy/math_tests/test_rounding.py::TestRoundBorder_param_8_{value=(1.6, 0)}::test_around_negative1
tests/third_party/cupy/math_tests/test_rounding.py::TestRoundBorder_param_8_{value=(1.6, 0)}::test_around_positive1

tests/third_party/cupy/math_tests/test_explog.py::TestExplog::test_exp
tests/third_party/cupy/math_tests/test_explog.py::TestExplog::test_exp2
tests/third_party/cupy/math_tests/test_explog.py::TestExplog::test_expm1
tests/third_party/cupy/math_tests/test_explog.py::TestExplog::test_log
tests/third_party/cupy/math_tests/test_explog.py::TestExplog::test_log10
tests/third_party/cupy/math_tests/test_explog.py::TestExplog::test_log1p
tests/third_party/cupy/math_tests/test_explog.py::TestExplog::test_log2

tests/third_party/cupy/math_tests/test_floating.py::TestFloating::test_copysign_combination

tests/third_party/cupy/math_tests/test_hyperbolic.py::TestHyperbolic::test_arccosh
tests/third_party/cupy/math_tests/test_hyperbolic.py::TestHyperbolic::test_arcsinh
tests/third_party/cupy/math_tests/test_hyperbolic.py::TestHyperbolic::test_arctanh
tests/third_party/cupy/math_tests/test_hyperbolic.py::TestHyperbolic::test_cosh
tests/third_party/cupy/math_tests/test_hyperbolic.py::TestHyperbolic::test_sinh
tests/third_party/cupy/math_tests/test_hyperbolic.py::TestHyperbolic::test_tanh

tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_0_{axis=0, func='nansum', keepdims=True, shape=(2, 3, 4), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_0_{axis=0, func='nansum', keepdims=True, shape=(2, 3, 4), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_1_{axis=0, func='nansum', keepdims=True, shape=(2, 3, 4), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_1_{axis=0, func='nansum', keepdims=True, shape=(2, 3, 4), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_2_{axis=0, func='nansum', keepdims=True, shape=(20, 30, 40), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_2_{axis=0, func='nansum', keepdims=True, shape=(20, 30, 40), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_3_{axis=0, func='nansum', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_3_{axis=0, func='nansum', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_4_{axis=0, func='nansum', keepdims=False, shape=(2, 3, 4), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_4_{axis=0, func='nansum', keepdims=False, shape=(2, 3, 4), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_5_{axis=0, func='nansum', keepdims=False, shape=(2, 3, 4), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_5_{axis=0, func='nansum', keepdims=False, shape=(2, 3, 4), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_6_{axis=0, func='nansum', keepdims=False, shape=(20, 30, 40), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_6_{axis=0, func='nansum', keepdims=False, shape=(20, 30, 40), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_7_{axis=0, func='nansum', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_7_{axis=0, func='nansum', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_8_{axis=0, func='nanprod', keepdims=True, shape=(2, 3, 4), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_8_{axis=0, func='nanprod', keepdims=True, shape=(2, 3, 4), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_10_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_10_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_12_{axis=0, func='nanprod', keepdims=False, shape=(2, 3, 4), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_12_{axis=0, func='nanprod', keepdims=False, shape=(2, 3, 4), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_14_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_14_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_16_{axis=1, func='nansum', keepdims=True, shape=(2, 3, 4), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_16_{axis=1, func='nansum', keepdims=True, shape=(2, 3, 4), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_17_{axis=1, func='nansum', keepdims=True, shape=(2, 3, 4), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_17_{axis=1, func='nansum', keepdims=True, shape=(2, 3, 4), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_18_{axis=1, func='nansum', keepdims=True, shape=(20, 30, 40), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_18_{axis=1, func='nansum', keepdims=True, shape=(20, 30, 40), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_19_{axis=1, func='nansum', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_19_{axis=1, func='nansum', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_20_{axis=1, func='nansum', keepdims=False, shape=(2, 3, 4), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_20_{axis=1, func='nansum', keepdims=False, shape=(2, 3, 4), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_21_{axis=1, func='nansum', keepdims=False, shape=(2, 3, 4), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_21_{axis=1, func='nansum', keepdims=False, shape=(2, 3, 4), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_22_{axis=1, func='nansum', keepdims=False, shape=(20, 30, 40), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_22_{axis=1, func='nansum', keepdims=False, shape=(20, 30, 40), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_23_{axis=1, func='nansum', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_23_{axis=1, func='nansum', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_24_{axis=1, func='nanprod', keepdims=True, shape=(2, 3, 4), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_24_{axis=1, func='nanprod', keepdims=True, shape=(2, 3, 4), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_25_{axis=1, func='nanprod', keepdims=True, shape=(2, 3, 4), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_25_{axis=1, func='nanprod', keepdims=True, shape=(2, 3, 4), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_26_{axis=1, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_26_{axis=1, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_27_{axis=1, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_27_{axis=1, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_28_{axis=1, func='nanprod', keepdims=False, shape=(2, 3, 4), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_28_{axis=1, func='nanprod', keepdims=False, shape=(2, 3, 4), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_29_{axis=1, func='nanprod', keepdims=False, shape=(2, 3, 4), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_29_{axis=1, func='nanprod', keepdims=False, shape=(2, 3, 4), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_30_{axis=1, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=True}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_30_{axis=1, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=True}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_31_{axis=1, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/third_party/cupy/math_tests/test_sumprod.py::TestNansumNanprodLong_param_31_{axis=1, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/third_party/cupy/math_tests/test_sumprod.py::TestDiff::test_diff_2dim_with_scalar_append

tests/third_party/cupy/math_tests/test_trigonometric.py::TestTrigonometric::test_arccos
tests/third_party/cupy/math_tests/test_trigonometric.py::TestTrigonometric::test_arcsin
tests/third_party/cupy/math_tests/test_trigonometric.py::TestTrigonometric::test_arctan
tests/third_party/cupy/math_tests/test_trigonometric.py::TestTrigonometric::test_arctan2
tests/third_party/cupy/math_tests/test_trigonometric.py::TestTrigonometric::test_deg2rad
tests/third_party/cupy/math_tests/test_trigonometric.py::TestTrigonometric::test_hypot
tests/third_party/cupy/math_tests/test_trigonometric.py::TestTrigonometric::test_rad2deg
tests/third_party/cupy/math_tests/test_trigonometric.py::TestTrigonometric::test_tan

tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsBeta_param_6_{a_shape=(3, 2), b_shape=(3, 2), shape=(4, 3, 2)}::test_beta
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsBeta_param_7_{a_shape=(3, 2), b_shape=(3, 2), shape=(3, 2)}::test_beta
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsChisquare_param_0_{df_shape=(), shape=(4, 3, 2)}::test_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsChisquare_param_1_{df_shape=(), shape=(3, 2)}::test_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsChisquare_param_2_{df_shape=(3, 2), shape=(4, 3, 2)}::test_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsChisquare_param_3_{df_shape=(3, 2), shape=(3, 2)}::test_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsDirichlet_param_0_{alpha_shape=(3,), shape=(4, 3, 2, 3)}::test_dirichlet
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsDirichlet_param_1_{alpha_shape=(3,), shape=(3, 2, 3)}::test_dirichlet
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsExponential_param_3_{scale_shape=(3, 2), shape=(4, 3, 2)}::test_exponential
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsExponential_param_4_{scale_shape=(3, 2), shape=(3, 2)}::test_exponential
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsExponential_param_5_{scale_shape=(3, 2), shape=None}::test_exponential
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_0_{dfden_shape=(), dfnum_shape=(), shape=(4, 3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_1_{dfden_shape=(), dfnum_shape=(), shape=(3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_2_{dfden_shape=(), dfnum_shape=(3, 2), shape=(4, 3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_3_{dfden_shape=(), dfnum_shape=(3, 2), shape=(3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_4_{dfden_shape=(3, 2), dfnum_shape=(), shape=(4, 3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_5_{dfden_shape=(3, 2), dfnum_shape=(), shape=(3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_6_{dfden_shape=(3, 2), dfnum_shape=(3, 2), shape=(4, 3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_7_{dfden_shape=(3, 2), dfnum_shape=(3, 2), shape=(3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_0_{scale_shape=(), shape=(4, 3, 2), shape_shape=()}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_1_{scale_shape=(), shape=(4, 3, 2), shape_shape=(3, 2)}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_2_{scale_shape=(), shape=(3, 2), shape_shape=()}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_3_{scale_shape=(), shape=(3, 2), shape_shape=(3, 2)}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_4_{scale_shape=(3, 2), shape=(4, 3, 2), shape_shape=()}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_5_{scale_shape=(3, 2), shape=(4, 3, 2), shape_shape=(3, 2)}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_6_{scale_shape=(3, 2), shape=(3, 2), shape_shape=()}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_7_{scale_shape=(3, 2), shape=(3, 2), shape_shape=(3, 2)}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGumbel_param_6_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(4, 3, 2)}::test_gumbel
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGumbel_param_7_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(3, 2)}::test_gumbel
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsuLaplace_param_6_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(4, 3, 2)}::test_laplace
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsuLaplace_param_7_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(3, 2)}::test_laplace
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsLogistic_param_6_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(4, 3, 2)}::test_logistic
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsLogistic_param_7_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(3, 2)}::test_logistic
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNoncentralChisquare_param_6_{df_shape=(3, 2), nonc_shape=(3, 2), shape=(4, 3, 2)}::test_noncentral_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNoncentralChisquare_param_7_{df_shape=(3, 2), nonc_shape=(3, 2), shape=(3, 2)}::test_noncentral_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNoncentralF_param_14_{dfden_shape=(3, 2), dfnum_shape=(3, 2), nonc_shape=(3, 2), shape=(4, 3, 2)}::test_noncentral_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNoncentralF_param_15_{dfden_shape=(3, 2), dfnum_shape=(3, 2), nonc_shape=(3, 2), shape=(3, 2)}::test_noncentral_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_0_{loc_shape=(), scale_shape=(), shape=(4, 3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_1_{loc_shape=(), scale_shape=(), shape=(3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_2_{loc_shape=(), scale_shape=(3, 2), shape=(4, 3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_3_{loc_shape=(), scale_shape=(3, 2), shape=(3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_4_{loc_shape=(3, 2), scale_shape=(), shape=(4, 3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_5_{loc_shape=(3, 2), scale_shape=(), shape=(3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_6_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(4, 3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_7_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsPareto_param_0_{a_shape=(), shape=(4, 3, 2)}::test_pareto
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsPareto_param_1_{a_shape=(), shape=(3, 2)}::test_pareto
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsPareto_param_2_{a_shape=(3, 2), shape=(4, 3, 2)}::test_pareto
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsPareto_param_3_{a_shape=(3, 2), shape=(3, 2)}::test_pareto
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsRayleigh_param_2_{scale_shape=(3, 2), shape=(4, 3, 2)}::test_rayleigh
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsRayleigh_param_2_{scale_shape=(3, 2), shape=(4, 3, 2)}::test_rayleigh_for_zero_scale
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsRayleigh_param_3_{scale_shape=(3, 2), shape=(3, 2)}::test_rayleigh
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsRayleigh_param_3_{scale_shape=(3, 2), shape=(3, 2)}::test_rayleigh_for_zero_scale
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardCauchy_param_0_{shape=(4, 3, 2)}::test_standard_cauchy
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardCauchy_param_1_{shape=(3, 2)}::test_standard_cauchy
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardExponential_param_0_{shape=(4, 3, 2)}::test_standard_exponential
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardExponential_param_1_{shape=(3, 2)}::test_standard_exponential
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardGamma_param_1_{shape=(4, 3, 2), shape_shape=(3, 2)}::test_standard_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardGamma_param_3_{shape=(3, 2), shape_shape=(3, 2)}::test_standard_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardNormal_param_0_{shape=(4, 3, 2)}::test_standard_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardNormal_param_1_{shape=(3, 2)}::test_standard_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardT_param_0_{df_shape=(), shape=(4, 3, 2)}::test_standard_t
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardT_param_1_{df_shape=(), shape=(3, 2)}::test_standard_t
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardT_param_2_{df_shape=(3, 2), shape=(4, 3, 2)}::test_standard_t
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardT_param_3_{df_shape=(3, 2), shape=(3, 2)}::test_standard_t
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsTriangular_param_14_{left_shape=(3, 2), mode_shape=(3, 2), right_shape=(3, 2), shape=(4, 3, 2)}::test_triangular
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsTriangular_param_15_{left_shape=(3, 2), mode_shape=(3, 2), right_shape=(3, 2), shape=(3, 2)}::test_triangular
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsUniform_param_2_{high_shape=(), low_shape=(3, 2), shape=(4, 3, 2)}::test_uniform
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsUniform_param_3_{high_shape=(), low_shape=(3, 2), shape=(3, 2)}::test_uniform
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsUniform_param_6_{high_shape=(3, 2), low_shape=(3, 2), shape=(4, 3, 2)}::test_uniform
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsUniform_param_7_{high_shape=(3, 2), low_shape=(3, 2), shape=(3, 2)}::test_uniform
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_0_{kappa_shape=(), mu_shape=(), shape=(4, 3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_1_{kappa_shape=(), mu_shape=(), shape=(3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_2_{kappa_shape=(), mu_shape=(3, 2), shape=(4, 3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_3_{kappa_shape=(), mu_shape=(3, 2), shape=(3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_4_{kappa_shape=(3, 2), mu_shape=(), shape=(4, 3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_5_{kappa_shape=(3, 2), mu_shape=(), shape=(3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_6_{kappa_shape=(3, 2), mu_shape=(3, 2), shape=(4, 3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_7_{kappa_shape=(3, 2), mu_shape=(3, 2), shape=(3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWald_param_6_{mean_shape=(3, 2), scale_shape=(3, 2), shape=(4, 3, 2)}::test_wald
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWald_param_7_{mean_shape=(3, 2), scale_shape=(3, 2), shape=(3, 2)}::test_wald
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWeibull_param_2_{a_shape=(3, 2), shape=(4, 3, 2)}::test_weibull
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWeibull_param_2_{a_shape=(3, 2), shape=(4, 3, 2)}::test_weibull_for_inf_a
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWeibull_param_3_{a_shape=(3, 2), shape=(3, 2)}::test_weibull
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWeibull_param_3_{a_shape=(3, 2), shape=(3, 2)}::test_weibull_for_inf_a
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsBeta_param_6_{a_shape=(3, 2), b_shape=(3, 2), shape=(4, 3, 2)}::test_beta
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsBeta_param_7_{a_shape=(3, 2), b_shape=(3, 2), shape=(3, 2)}::test_beta
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsChisquare_param_0_{df_shape=(), shape=(4, 3, 2)}::test_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsChisquare_param_1_{df_shape=(), shape=(3, 2)}::test_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsChisquare_param_2_{df_shape=(3, 2), shape=(4, 3, 2)}::test_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsChisquare_param_3_{df_shape=(3, 2), shape=(3, 2)}::test_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsDirichlet_param_0_{alpha_shape=(3,), shape=(4, 3, 2, 3)}::test_dirichlet
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsDirichlet_param_1_{alpha_shape=(3,), shape=(3, 2, 3)}::test_dirichlet
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsExponential_param_3_{scale_shape=(3, 2), shape=(4, 3, 2)}::test_exponential
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsExponential_param_4_{scale_shape=(3, 2), shape=(3, 2)}::test_exponential
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsExponential_param_5_{scale_shape=(3, 2), shape=None}::test_exponential
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_0_{dfden_shape=(), dfnum_shape=(), shape=(4, 3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_1_{dfden_shape=(), dfnum_shape=(), shape=(3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_2_{dfden_shape=(), dfnum_shape=(3, 2), shape=(4, 3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_3_{dfden_shape=(), dfnum_shape=(3, 2), shape=(3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_4_{dfden_shape=(3, 2), dfnum_shape=(), shape=(4, 3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_5_{dfden_shape=(3, 2), dfnum_shape=(), shape=(3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_6_{dfden_shape=(3, 2), dfnum_shape=(3, 2), shape=(4, 3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsF_param_7_{dfden_shape=(3, 2), dfnum_shape=(3, 2), shape=(3, 2)}::test_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_0_{scale_shape=(), shape=(4, 3, 2), shape_shape=()}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_1_{scale_shape=(), shape=(4, 3, 2), shape_shape=(3, 2)}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_2_{scale_shape=(), shape=(3, 2), shape_shape=()}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_3_{scale_shape=(), shape=(3, 2), shape_shape=(3, 2)}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_4_{scale_shape=(3, 2), shape=(4, 3, 2), shape_shape=()}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_5_{scale_shape=(3, 2), shape=(4, 3, 2), shape_shape=(3, 2)}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_6_{scale_shape=(3, 2), shape=(3, 2), shape_shape=()}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGamma_param_7_{scale_shape=(3, 2), shape=(3, 2), shape_shape=(3, 2)}::test_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGumbel_param_6_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(4, 3, 2)}::test_gumbel
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsGumbel_param_7_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(3, 2)}::test_gumbel
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsuLaplace_param_6_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(4, 3, 2)}::test_laplace
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsuLaplace_param_7_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(3, 2)}::test_laplace
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsLogistic_param_6_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(4, 3, 2)}::test_logistic
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsLogistic_param_7_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(3, 2)}::test_logistic
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNoncentralChisquare_param_6_{df_shape=(3, 2), nonc_shape=(3, 2), shape=(4, 3, 2)}::test_noncentral_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNoncentralChisquare_param_7_{df_shape=(3, 2), nonc_shape=(3, 2), shape=(3, 2)}::test_noncentral_chisquare
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNoncentralF_param_14_{dfden_shape=(3, 2), dfnum_shape=(3, 2), nonc_shape=(3, 2), shape=(4, 3, 2)}::test_noncentral_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNoncentralF_param_15_{dfden_shape=(3, 2), dfnum_shape=(3, 2), nonc_shape=(3, 2), shape=(3, 2)}::test_noncentral_f
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_0_{loc_shape=(), scale_shape=(), shape=(4, 3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_1_{loc_shape=(), scale_shape=(), shape=(3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_2_{loc_shape=(), scale_shape=(3, 2), shape=(4, 3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_3_{loc_shape=(), scale_shape=(3, 2), shape=(3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_4_{loc_shape=(3, 2), scale_shape=(), shape=(4, 3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_5_{loc_shape=(3, 2), scale_shape=(), shape=(3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_6_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(4, 3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsNormal_param_7_{loc_shape=(3, 2), scale_shape=(3, 2), shape=(3, 2)}::test_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsPareto_param_0_{a_shape=(), shape=(4, 3, 2)}::test_pareto
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsPareto_param_1_{a_shape=(), shape=(3, 2)}::test_pareto
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsPareto_param_2_{a_shape=(3, 2), shape=(4, 3, 2)}::test_pareto
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsPareto_param_3_{a_shape=(3, 2), shape=(3, 2)}::test_pareto
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsRayleigh_param_2_{scale_shape=(3, 2), shape=(4, 3, 2)}::test_rayleigh
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsRayleigh_param_2_{scale_shape=(3, 2), shape=(4, 3, 2)}::test_rayleigh_for_zero_scale
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsRayleigh_param_3_{scale_shape=(3, 2), shape=(3, 2)}::test_rayleigh
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsRayleigh_param_3_{scale_shape=(3, 2), shape=(3, 2)}::test_rayleigh_for_zero_scale
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardCauchy_param_0_{shape=(4, 3, 2)}::test_standard_cauchy
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardCauchy_param_1_{shape=(3, 2)}::test_standard_cauchy
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardExponential_param_0_{shape=(4, 3, 2)}::test_standard_exponential
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardExponential_param_1_{shape=(3, 2)}::test_standard_exponential
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardGamma_param_1_{shape=(4, 3, 2), shape_shape=(3, 2)}::test_standard_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardGamma_param_3_{shape=(3, 2), shape_shape=(3, 2)}::test_standard_gamma
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardNormal_param_0_{shape=(4, 3, 2)}::test_standard_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardNormal_param_1_{shape=(3, 2)}::test_standard_normal
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardT_param_0_{df_shape=(), shape=(4, 3, 2)}::test_standard_t
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardT_param_1_{df_shape=(), shape=(3, 2)}::test_standard_t
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardT_param_2_{df_shape=(3, 2), shape=(4, 3, 2)}::test_standard_t
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsStandardT_param_3_{df_shape=(3, 2), shape=(3, 2)}::test_standard_t
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsTriangular_param_14_{left_shape=(3, 2), mode_shape=(3, 2), right_shape=(3, 2), shape=(4, 3, 2)}::test_triangular
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsTriangular_param_15_{left_shape=(3, 2), mode_shape=(3, 2), right_shape=(3, 2), shape=(3, 2)}::test_triangular
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsUniform_param_2_{high_shape=(), low_shape=(3, 2), shape=(4, 3, 2)}::test_uniform
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsUniform_param_3_{high_shape=(), low_shape=(3, 2), shape=(3, 2)}::test_uniform
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsUniform_param_6_{high_shape=(3, 2), low_shape=(3, 2), shape=(4, 3, 2)}::test_uniform
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsUniform_param_7_{high_shape=(3, 2), low_shape=(3, 2), shape=(3, 2)}::test_uniform
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_0_{kappa_shape=(), mu_shape=(), shape=(4, 3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_1_{kappa_shape=(), mu_shape=(), shape=(3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_2_{kappa_shape=(), mu_shape=(3, 2), shape=(4, 3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_3_{kappa_shape=(), mu_shape=(3, 2), shape=(3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_4_{kappa_shape=(3, 2), mu_shape=(), shape=(4, 3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_5_{kappa_shape=(3, 2), mu_shape=(), shape=(3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_6_{kappa_shape=(3, 2), mu_shape=(3, 2), shape=(4, 3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsVonmises_param_7_{kappa_shape=(3, 2), mu_shape=(3, 2), shape=(3, 2)}::test_vonmises
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWald_param_6_{mean_shape=(3, 2), scale_shape=(3, 2), shape=(4, 3, 2)}::test_wald
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWald_param_7_{mean_shape=(3, 2), scale_shape=(3, 2), shape=(3, 2)}::test_wald
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWeibull_param_2_{a_shape=(3, 2), shape=(4, 3, 2)}::test_weibull
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWeibull_param_2_{a_shape=(3, 2), shape=(4, 3, 2)}::test_weibull_for_inf_a
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWeibull_param_3_{a_shape=(3, 2), shape=(3, 2)}::test_weibull
tests/third_party/cupy/random_tests/test_distributions.py::TestDistributionsWeibull_param_3_{a_shape=(3, 2), shape=(3, 2)}::test_weibull_for_inf_a

tests/third_party/cupy/sorting_tests/test_search.py::TestSearchSortedWithSorter::test_nonint_sorter

tests/third_party/cupy/sorting_tests/test_sort.py::TestSort::test_external_sort_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestSort::test_external_sort_contiguous
tests/third_party/cupy/sorting_tests/test_sort.py::TestSort::test_external_sort_invalid_axis1
tests/third_party/cupy/sorting_tests/test_sort.py::TestSort::test_external_sort_invalid_axis2
tests/third_party/cupy/sorting_tests/test_sort.py::TestSort::test_external_sort_invalid_negative_axis1
tests/third_party/cupy/sorting_tests/test_sort.py::TestSort::test_external_sort_invalid_negative_axis2
tests/third_party/cupy/sorting_tests/test_sort.py::TestSort::test_external_sort_negative_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestSort::test_external_sort_non_contiguous
tests/third_party/cupy/sorting_tests/test_sort.py::TestSort::test_external_sort_none_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestSort::test_external_sort_two_or_more_dim
tests/third_party/cupy/sorting_tests/test_sort.py::TestArgsort_param_1_{external=True}::test_argsort_original_array_not_modified_multi_dim
tests/third_party/cupy/sorting_tests/test_sort.py::TestArgsort_param_1_{external=True}::test_argsort_original_array_not_modified_one_dim
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_invalid_axis1
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_invalid_axis2
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_invalid_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_invalid_negative_axis1
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_invalid_negative_axis2
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_invalid_negative_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_negative_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_negative_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_non_contiguous
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_sequence_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_0_{external=False, length=10}::test_partition_zero_dim
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_invalid_axis1
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_invalid_axis2
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_invalid_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_invalid_negative_axis1
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_invalid_negative_axis2
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_invalid_negative_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_negative_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_negative_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_non_contiguous
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_sequence_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_1_{external=False, length=20000}::test_partition_zero_dim
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_invalid_axis1
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_invalid_axis2
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_invalid_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_invalid_negative_axis1
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_invalid_negative_axis2
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_invalid_negative_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_negative_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_negative_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_non_contiguous
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_none_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_sequence_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_2_{external=True, length=10}::test_partition_zero_dim
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_invalid_axis1
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_invalid_axis2
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_invalid_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_invalid_negative_axis1
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_invalid_negative_axis2
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_invalid_negative_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_negative_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_negative_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_non_contiguous
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_none_axis
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_sequence_kth
tests/third_party/cupy/sorting_tests/test_sort.py::TestPartition_param_3_{external=True, length=20000}::test_partition_zero_dim

tests/third_party/cupy/statistics_tests/test_correlation.py::TestCorrelate_param_0_{mode='valid'}::test_correlate_diff_types
tests/third_party/cupy/statistics_tests/test_correlation.py::TestCorrelate_param_1_{mode='full'}::test_correlate_diff_types
tests/third_party/cupy/statistics_tests/test_correlation.py::TestCorrelate_param_2_{mode='same'}::test_correlate_diff_types
tests/third_party/cupy/statistics_tests/test_correlation.py::TestCorrelate_param_0_{mode='valid'}::test_correlate_diff_types
tests/third_party/cupy/statistics_tests/test_correlation.py::TestCorrelate_param_1_{mode='full'}::test_correlate_diff_types
tests/third_party/cupy/statistics_tests/test_correlation.py::TestCorrelate_param_2_{mode='same'}::test_correlate_diff_types

tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedian::test_median_axis1
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedian::test_median_axis2
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedian::test_median_invalid_axis
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedian::test_median_keepdims_axis1
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedian::test_median_keepdims_noaxis
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedian::test_median_noaxis
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedianAxis_param_0_{axis=(0, 1), keepdims=True, shape=(3, 4, 5)}::test_median_axis_sequence
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedianAxis_param_1_{axis=(0, 1), keepdims=False, shape=(3, 4, 5)}::test_median_axis_sequence
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedianAxis_param_2_{axis=(0, -1), keepdims=True, shape=(3, 4, 5)}::test_median_axis_sequence
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedianAxis_param_3_{axis=(0, -1), keepdims=False, shape=(3, 4, 5)}::test_median_axis_sequence
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedianAxis_param_4_{axis=(1, 2), keepdims=True, shape=(3, 4, 5)}::test_median_axis_sequence
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedianAxis_param_5_{axis=(1, 2), keepdims=False, shape=(3, 4, 5)}::test_median_axis_sequence
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedianAxis_param_6_{axis=(1,), keepdims=True, shape=(3, 4, 5)}::test_median_axis_sequence
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMedianAxis_param_7_{axis=(1,), keepdims=False, shape=(3, 4, 5)}::test_median_axis_sequence
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestAverage::test_average_axis
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestAverage::test_average_axis_weights
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_external_mean_all
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_external_mean_axis
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_external_std_all
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_external_std_all_ddof
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_external_std_axis
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_external_std_axis_ddof
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_external_var_all
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_external_var_all_ddof
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_external_var_axis
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_external_var_axis_ddof
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_mean_all
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_mean_axis
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_std_all
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_std_all_ddof
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_std_axis
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_std_axis_ddof
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_var_all
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_var_all_ddof
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_var_axis
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestMeanVar::test_var_axis_ddof
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_0_{func='mean', params=((), None)}::test_external_mean_zero_len
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_3_{func='mean', params=((0, 0), 1)}::test_external_mean_zero_len
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_5_{func='mean', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_6_{func='std', params=((), None)}::test_external_mean_zero_len
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_9_{func='std', params=((0, 0), 1)}::test_external_mean_zero_len
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_11_{func='std', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_12_{func='var', params=((), None)}::test_external_mean_zero_len
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_15_{func='var', params=((0, 0), 1)}::test_external_mean_zero_len
tests/third_party/cupy/statistics_tests/test_meanvar.py::TestProductZeroLength_param_17_{func='var', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
